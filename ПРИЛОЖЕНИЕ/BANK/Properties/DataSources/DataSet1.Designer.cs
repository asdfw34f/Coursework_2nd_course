//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BANK.Properties.DataSources {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private БАНКОВСКИЕ_УСЛУГИDataTable tableБАНКОВСКИЕ_УСЛУГИ;
        
        private ВИДЫ_ВКЛАДОВDataTable tableВИДЫ_ВКЛАДОВ;
        
        private ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable tableВИДЫ_ДЕБЕТОВЫХ_КАРТ;
        
        private ВИДЫ_КРЕДИТОВDataTable tableВИДЫ_КРЕДИТОВ;
        
        private ВИДЫ_ОПЕРАЦИЙDataTable tableВИДЫ_ОПЕРАЦИЙ;
        
        private ДАННЫЕ_ВХОДАDataTable tableДАННЫЕ_ВХОДА;
        
        private ДОГОВОРЫ_КЛИЕНТОВDataTable tableДОГОВОРЫ_КЛИЕНТОВ;
        
        private ИСТОРИЯ_ОПЕРАЦИЙDataTable tableИСТОРИЯ_ОПЕРАЦИЙ;
        
        private КЛИЕНТЫDataTable tableКЛИЕНТЫ;
        
        private СОТРУДНИКИDataTable tableСОТРУДНИКИ;
        
        private СПЕЦИАЛЬНОСТИDataTable tableСПЕЦИАЛЬНОСТИ;
        
        private СЧЕТАDataTable tableСЧЕТА;
        
        private global::System.Data.DataRelation relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ1;
        
        private global::System.Data.DataRelation relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ;
        
        private global::System.Data.DataRelation relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ;
        
        private global::System.Data.DataRelation relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ;
        
        private global::System.Data.DataRelation relationFK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ;
        
        private global::System.Data.DataRelation relationFK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ;
        
        private global::System.Data.DataRelation relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ;
        
        private global::System.Data.DataRelation relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА;
        
        private global::System.Data.DataRelation relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА;
        
        private global::System.Data.DataRelation relationFK_СЧЕТА_КЛИЕНТЫ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["БАНКОВСКИЕ УСЛУГИ"] != null)) {
                    base.Tables.Add(new БАНКОВСКИЕ_УСЛУГИDataTable(ds.Tables["БАНКОВСКИЕ УСЛУГИ"]));
                }
                if ((ds.Tables["ВИДЫ_ВКЛАДОВ"] != null)) {
                    base.Tables.Add(new ВИДЫ_ВКЛАДОВDataTable(ds.Tables["ВИДЫ_ВКЛАДОВ"]));
                }
                if ((ds.Tables["ВИДЫ_ДЕБЕТОВЫХ_КАРТ"] != null)) {
                    base.Tables.Add(new ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable(ds.Tables["ВИДЫ_ДЕБЕТОВЫХ_КАРТ"]));
                }
                if ((ds.Tables["ВИДЫ_КРЕДИТОВ"] != null)) {
                    base.Tables.Add(new ВИДЫ_КРЕДИТОВDataTable(ds.Tables["ВИДЫ_КРЕДИТОВ"]));
                }
                if ((ds.Tables["ВИДЫ_ОПЕРАЦИЙ"] != null)) {
                    base.Tables.Add(new ВИДЫ_ОПЕРАЦИЙDataTable(ds.Tables["ВИДЫ_ОПЕРАЦИЙ"]));
                }
                if ((ds.Tables["ДАННЫЕ_ВХОДА"] != null)) {
                    base.Tables.Add(new ДАННЫЕ_ВХОДАDataTable(ds.Tables["ДАННЫЕ_ВХОДА"]));
                }
                if ((ds.Tables["ДОГОВОРЫ_КЛИЕНТОВ"] != null)) {
                    base.Tables.Add(new ДОГОВОРЫ_КЛИЕНТОВDataTable(ds.Tables["ДОГОВОРЫ_КЛИЕНТОВ"]));
                }
                if ((ds.Tables["ИСТОРИЯ_ОПЕРАЦИЙ"] != null)) {
                    base.Tables.Add(new ИСТОРИЯ_ОПЕРАЦИЙDataTable(ds.Tables["ИСТОРИЯ_ОПЕРАЦИЙ"]));
                }
                if ((ds.Tables["КЛИЕНТЫ"] != null)) {
                    base.Tables.Add(new КЛИЕНТЫDataTable(ds.Tables["КЛИЕНТЫ"]));
                }
                if ((ds.Tables["СОТРУДНИКИ"] != null)) {
                    base.Tables.Add(new СОТРУДНИКИDataTable(ds.Tables["СОТРУДНИКИ"]));
                }
                if ((ds.Tables["СПЕЦИАЛЬНОСТИ"] != null)) {
                    base.Tables.Add(new СПЕЦИАЛЬНОСТИDataTable(ds.Tables["СПЕЦИАЛЬНОСТИ"]));
                }
                if ((ds.Tables["СЧЕТА"] != null)) {
                    base.Tables.Add(new СЧЕТАDataTable(ds.Tables["СЧЕТА"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public БАНКОВСКИЕ_УСЛУГИDataTable БАНКОВСКИЕ_УСЛУГИ {
            get {
                return this.tableБАНКОВСКИЕ_УСЛУГИ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ВИДЫ_ВКЛАДОВDataTable ВИДЫ_ВКЛАДОВ {
            get {
                return this.tableВИДЫ_ВКЛАДОВ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable ВИДЫ_ДЕБЕТОВЫХ_КАРТ {
            get {
                return this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ВИДЫ_КРЕДИТОВDataTable ВИДЫ_КРЕДИТОВ {
            get {
                return this.tableВИДЫ_КРЕДИТОВ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ВИДЫ_ОПЕРАЦИЙDataTable ВИДЫ_ОПЕРАЦИЙ {
            get {
                return this.tableВИДЫ_ОПЕРАЦИЙ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ДАННЫЕ_ВХОДАDataTable ДАННЫЕ_ВХОДА {
            get {
                return this.tableДАННЫЕ_ВХОДА;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ДОГОВОРЫ_КЛИЕНТОВDataTable ДОГОВОРЫ_КЛИЕНТОВ {
            get {
                return this.tableДОГОВОРЫ_КЛИЕНТОВ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ИСТОРИЯ_ОПЕРАЦИЙDataTable ИСТОРИЯ_ОПЕРАЦИЙ {
            get {
                return this.tableИСТОРИЯ_ОПЕРАЦИЙ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КЛИЕНТЫDataTable КЛИЕНТЫ {
            get {
                return this.tableКЛИЕНТЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СОТРУДНИКИDataTable СОТРУДНИКИ {
            get {
                return this.tableСОТРУДНИКИ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СПЕЦИАЛЬНОСТИDataTable СПЕЦИАЛЬНОСТИ {
            get {
                return this.tableСПЕЦИАЛЬНОСТИ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СЧЕТАDataTable СЧЕТА {
            get {
                return this.tableСЧЕТА;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["БАНКОВСКИЕ УСЛУГИ"] != null)) {
                    base.Tables.Add(new БАНКОВСКИЕ_УСЛУГИDataTable(ds.Tables["БАНКОВСКИЕ УСЛУГИ"]));
                }
                if ((ds.Tables["ВИДЫ_ВКЛАДОВ"] != null)) {
                    base.Tables.Add(new ВИДЫ_ВКЛАДОВDataTable(ds.Tables["ВИДЫ_ВКЛАДОВ"]));
                }
                if ((ds.Tables["ВИДЫ_ДЕБЕТОВЫХ_КАРТ"] != null)) {
                    base.Tables.Add(new ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable(ds.Tables["ВИДЫ_ДЕБЕТОВЫХ_КАРТ"]));
                }
                if ((ds.Tables["ВИДЫ_КРЕДИТОВ"] != null)) {
                    base.Tables.Add(new ВИДЫ_КРЕДИТОВDataTable(ds.Tables["ВИДЫ_КРЕДИТОВ"]));
                }
                if ((ds.Tables["ВИДЫ_ОПЕРАЦИЙ"] != null)) {
                    base.Tables.Add(new ВИДЫ_ОПЕРАЦИЙDataTable(ds.Tables["ВИДЫ_ОПЕРАЦИЙ"]));
                }
                if ((ds.Tables["ДАННЫЕ_ВХОДА"] != null)) {
                    base.Tables.Add(new ДАННЫЕ_ВХОДАDataTable(ds.Tables["ДАННЫЕ_ВХОДА"]));
                }
                if ((ds.Tables["ДОГОВОРЫ_КЛИЕНТОВ"] != null)) {
                    base.Tables.Add(new ДОГОВОРЫ_КЛИЕНТОВDataTable(ds.Tables["ДОГОВОРЫ_КЛИЕНТОВ"]));
                }
                if ((ds.Tables["ИСТОРИЯ_ОПЕРАЦИЙ"] != null)) {
                    base.Tables.Add(new ИСТОРИЯ_ОПЕРАЦИЙDataTable(ds.Tables["ИСТОРИЯ_ОПЕРАЦИЙ"]));
                }
                if ((ds.Tables["КЛИЕНТЫ"] != null)) {
                    base.Tables.Add(new КЛИЕНТЫDataTable(ds.Tables["КЛИЕНТЫ"]));
                }
                if ((ds.Tables["СОТРУДНИКИ"] != null)) {
                    base.Tables.Add(new СОТРУДНИКИDataTable(ds.Tables["СОТРУДНИКИ"]));
                }
                if ((ds.Tables["СПЕЦИАЛЬНОСТИ"] != null)) {
                    base.Tables.Add(new СПЕЦИАЛЬНОСТИDataTable(ds.Tables["СПЕЦИАЛЬНОСТИ"]));
                }
                if ((ds.Tables["СЧЕТА"] != null)) {
                    base.Tables.Add(new СЧЕТАDataTable(ds.Tables["СЧЕТА"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableБАНКОВСКИЕ_УСЛУГИ = ((БАНКОВСКИЕ_УСЛУГИDataTable)(base.Tables["БАНКОВСКИЕ УСЛУГИ"]));
            if ((initTable == true)) {
                if ((this.tableБАНКОВСКИЕ_УСЛУГИ != null)) {
                    this.tableБАНКОВСКИЕ_УСЛУГИ.InitVars();
                }
            }
            this.tableВИДЫ_ВКЛАДОВ = ((ВИДЫ_ВКЛАДОВDataTable)(base.Tables["ВИДЫ_ВКЛАДОВ"]));
            if ((initTable == true)) {
                if ((this.tableВИДЫ_ВКЛАДОВ != null)) {
                    this.tableВИДЫ_ВКЛАДОВ.InitVars();
                }
            }
            this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ = ((ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable)(base.Tables["ВИДЫ_ДЕБЕТОВЫХ_КАРТ"]));
            if ((initTable == true)) {
                if ((this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ != null)) {
                    this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.InitVars();
                }
            }
            this.tableВИДЫ_КРЕДИТОВ = ((ВИДЫ_КРЕДИТОВDataTable)(base.Tables["ВИДЫ_КРЕДИТОВ"]));
            if ((initTable == true)) {
                if ((this.tableВИДЫ_КРЕДИТОВ != null)) {
                    this.tableВИДЫ_КРЕДИТОВ.InitVars();
                }
            }
            this.tableВИДЫ_ОПЕРАЦИЙ = ((ВИДЫ_ОПЕРАЦИЙDataTable)(base.Tables["ВИДЫ_ОПЕРАЦИЙ"]));
            if ((initTable == true)) {
                if ((this.tableВИДЫ_ОПЕРАЦИЙ != null)) {
                    this.tableВИДЫ_ОПЕРАЦИЙ.InitVars();
                }
            }
            this.tableДАННЫЕ_ВХОДА = ((ДАННЫЕ_ВХОДАDataTable)(base.Tables["ДАННЫЕ_ВХОДА"]));
            if ((initTable == true)) {
                if ((this.tableДАННЫЕ_ВХОДА != null)) {
                    this.tableДАННЫЕ_ВХОДА.InitVars();
                }
            }
            this.tableДОГОВОРЫ_КЛИЕНТОВ = ((ДОГОВОРЫ_КЛИЕНТОВDataTable)(base.Tables["ДОГОВОРЫ_КЛИЕНТОВ"]));
            if ((initTable == true)) {
                if ((this.tableДОГОВОРЫ_КЛИЕНТОВ != null)) {
                    this.tableДОГОВОРЫ_КЛИЕНТОВ.InitVars();
                }
            }
            this.tableИСТОРИЯ_ОПЕРАЦИЙ = ((ИСТОРИЯ_ОПЕРАЦИЙDataTable)(base.Tables["ИСТОРИЯ_ОПЕРАЦИЙ"]));
            if ((initTable == true)) {
                if ((this.tableИСТОРИЯ_ОПЕРАЦИЙ != null)) {
                    this.tableИСТОРИЯ_ОПЕРАЦИЙ.InitVars();
                }
            }
            this.tableКЛИЕНТЫ = ((КЛИЕНТЫDataTable)(base.Tables["КЛИЕНТЫ"]));
            if ((initTable == true)) {
                if ((this.tableКЛИЕНТЫ != null)) {
                    this.tableКЛИЕНТЫ.InitVars();
                }
            }
            this.tableСОТРУДНИКИ = ((СОТРУДНИКИDataTable)(base.Tables["СОТРУДНИКИ"]));
            if ((initTable == true)) {
                if ((this.tableСОТРУДНИКИ != null)) {
                    this.tableСОТРУДНИКИ.InitVars();
                }
            }
            this.tableСПЕЦИАЛЬНОСТИ = ((СПЕЦИАЛЬНОСТИDataTable)(base.Tables["СПЕЦИАЛЬНОСТИ"]));
            if ((initTable == true)) {
                if ((this.tableСПЕЦИАЛЬНОСТИ != null)) {
                    this.tableСПЕЦИАЛЬНОСТИ.InitVars();
                }
            }
            this.tableСЧЕТА = ((СЧЕТАDataTable)(base.Tables["СЧЕТА"]));
            if ((initTable == true)) {
                if ((this.tableСЧЕТА != null)) {
                    this.tableСЧЕТА.InitVars();
                }
            }
            this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ1 = this.Relations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ1"];
            this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ = this.Relations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ"];
            this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ = this.Relations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ"];
            this.relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ = this.Relations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ"];
            this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ = this.Relations["FK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ"];
            this.relationFK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ = this.Relations["FK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ"];
            this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ = this.Relations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ"];
            this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА = this.Relations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА"];
            this.relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА = this.Relations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА"];
            this.relationFK_СЧЕТА_КЛИЕНТЫ = this.Relations["FK_СЧЕТА_КЛИЕНТЫ"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableБАНКОВСКИЕ_УСЛУГИ = new БАНКОВСКИЕ_УСЛУГИDataTable();
            base.Tables.Add(this.tableБАНКОВСКИЕ_УСЛУГИ);
            this.tableВИДЫ_ВКЛАДОВ = new ВИДЫ_ВКЛАДОВDataTable();
            base.Tables.Add(this.tableВИДЫ_ВКЛАДОВ);
            this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ = new ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable();
            base.Tables.Add(this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ);
            this.tableВИДЫ_КРЕДИТОВ = new ВИДЫ_КРЕДИТОВDataTable();
            base.Tables.Add(this.tableВИДЫ_КРЕДИТОВ);
            this.tableВИДЫ_ОПЕРАЦИЙ = new ВИДЫ_ОПЕРАЦИЙDataTable();
            base.Tables.Add(this.tableВИДЫ_ОПЕРАЦИЙ);
            this.tableДАННЫЕ_ВХОДА = new ДАННЫЕ_ВХОДАDataTable();
            base.Tables.Add(this.tableДАННЫЕ_ВХОДА);
            this.tableДОГОВОРЫ_КЛИЕНТОВ = new ДОГОВОРЫ_КЛИЕНТОВDataTable();
            base.Tables.Add(this.tableДОГОВОРЫ_КЛИЕНТОВ);
            this.tableИСТОРИЯ_ОПЕРАЦИЙ = new ИСТОРИЯ_ОПЕРАЦИЙDataTable();
            base.Tables.Add(this.tableИСТОРИЯ_ОПЕРАЦИЙ);
            this.tableКЛИЕНТЫ = new КЛИЕНТЫDataTable();
            base.Tables.Add(this.tableКЛИЕНТЫ);
            this.tableСОТРУДНИКИ = new СОТРУДНИКИDataTable();
            base.Tables.Add(this.tableСОТРУДНИКИ);
            this.tableСПЕЦИАЛЬНОСТИ = new СПЕЦИАЛЬНОСТИDataTable();
            base.Tables.Add(this.tableСПЕЦИАЛЬНОСТИ);
            this.tableСЧЕТА = new СЧЕТАDataTable();
            base.Tables.Add(this.tableСЧЕТА);
            this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ1 = new global::System.Data.DataRelation("FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ1", new global::System.Data.DataColumn[] {
                        this.tableВИДЫ_ВКЛАДОВ.КОД_УСЛУГИColumn}, new global::System.Data.DataColumn[] {
                        this.tableБАНКОВСКИЕ_УСЛУГИ.КОД_УСЛУГИColumn}, false);
            this.Relations.Add(this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ1);
            this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ = new global::System.Data.DataRelation("FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ", new global::System.Data.DataColumn[] {
                        this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.КОД_УСЛУГИColumn}, new global::System.Data.DataColumn[] {
                        this.tableБАНКОВСКИЕ_УСЛУГИ.КОД_УСЛУГИColumn}, false);
            this.Relations.Add(this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ);
            this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ = new global::System.Data.DataRelation("FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ", new global::System.Data.DataColumn[] {
                        this.tableВИДЫ_КРЕДИТОВ.КОД_УСЛУГИColumn}, new global::System.Data.DataColumn[] {
                        this.tableБАНКОВСКИЕ_УСЛУГИ.КОД_УСЛУГИColumn}, false);
            this.Relations.Add(this.relationFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ);
            this.relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ = new global::System.Data.DataRelation("FK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ", new global::System.Data.DataColumn[] {
                        this.tableВИДЫ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn}, new global::System.Data.DataColumn[] {
                        this.tableИСТОРИЯ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn}, false);
            this.Relations.Add(this.relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ);
            this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ = new global::System.Data.DataRelation("FK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ", new global::System.Data.DataColumn[] {
                        this.tableКЛИЕНТЫ.НОМЕР_КЛИЕНТАColumn}, new global::System.Data.DataColumn[] {
                        this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_КЛИЕНТАColumn}, false);
            this.Relations.Add(this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ);
            this.relationFK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ = new global::System.Data.DataRelation("FK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ", new global::System.Data.DataColumn[] {
                        this.tableСОТРУДНИКИ.НОМЕР_СОТРУДНИКАColumn}, new global::System.Data.DataColumn[] {
                        this.tableДАННЫЕ_ВХОДА.НОМЕР_СОТРУДНИКАColumn}, false);
            this.Relations.Add(this.relationFK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ);
            this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ = new global::System.Data.DataRelation("FK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ", new global::System.Data.DataColumn[] {
                        this.tableСОТРУДНИКИ.НОМЕР_СОТРУДНИКАColumn}, new global::System.Data.DataColumn[] {
                        this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СОТРУДНИКАColumn}, false);
            this.Relations.Add(this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ);
            this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА = new global::System.Data.DataRelation("FK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА", new global::System.Data.DataColumn[] {
                        this.tableСЧЕТА.НОМЕР_СЧЁТАColumn}, new global::System.Data.DataColumn[] {
                        this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СЧЁТАColumn}, false);
            this.Relations.Add(this.relationFK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА);
            this.relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА = new global::System.Data.DataRelation("FK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА", new global::System.Data.DataColumn[] {
                        this.tableСЧЕТА.НОМЕР_СЧЁТАColumn}, new global::System.Data.DataColumn[] {
                        this.tableИСТОРИЯ_ОПЕРАЦИЙ.НОМЕР_СЧЁТАColumn}, false);
            this.Relations.Add(this.relationFK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА);
            this.relationFK_СЧЕТА_КЛИЕНТЫ = new global::System.Data.DataRelation("FK_СЧЕТА_КЛИЕНТЫ", new global::System.Data.DataColumn[] {
                        this.tableКЛИЕНТЫ.НОМЕР_КЛИЕНТАColumn}, new global::System.Data.DataColumn[] {
                        this.tableСЧЕТА.НОМЕР_КЛИЕНТАColumn}, false);
            this.Relations.Add(this.relationFK_СЧЕТА_КЛИЕНТЫ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeБАНКОВСКИЕ_УСЛУГИ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeВИДЫ_ВКЛАДОВ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeВИДЫ_ДЕБЕТОВЫХ_КАРТ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeВИДЫ_КРЕДИТОВ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeВИДЫ_ОПЕРАЦИЙ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeДАННЫЕ_ВХОДА() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeДОГОВОРЫ_КЛИЕНТОВ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeИСТОРИЯ_ОПЕРАЦИЙ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeКЛИЕНТЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСОТРУДНИКИ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСПЕЦИАЛЬНОСТИ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСЧЕТА() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void БАНКОВСКИЕ_УСЛУГИRowChangeEventHandler(object sender, БАНКОВСКИЕ_УСЛУГИRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ВИДЫ_ВКЛАДОВRowChangeEventHandler(object sender, ВИДЫ_ВКЛАДОВRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEventHandler(object sender, ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ВИДЫ_КРЕДИТОВRowChangeEventHandler(object sender, ВИДЫ_КРЕДИТОВRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ВИДЫ_ОПЕРАЦИЙRowChangeEventHandler(object sender, ВИДЫ_ОПЕРАЦИЙRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ДАННЫЕ_ВХОДАRowChangeEventHandler(object sender, ДАННЫЕ_ВХОДАRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ДОГОВОРЫ_КЛИЕНТОВRowChangeEventHandler(object sender, ДОГОВОРЫ_КЛИЕНТОВRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ИСТОРИЯ_ОПЕРАЦИЙRowChangeEventHandler(object sender, ИСТОРИЯ_ОПЕРАЦИЙRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void КЛИЕНТЫRowChangeEventHandler(object sender, КЛИЕНТЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void СОТРУДНИКИRowChangeEventHandler(object sender, СОТРУДНИКИRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void СПЕЦИАЛЬНОСТИRowChangeEventHandler(object sender, СПЕЦИАЛЬНОСТИRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void СЧЕТАRowChangeEventHandler(object sender, СЧЕТАRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class БАНКОВСКИЕ_УСЛУГИDataTable : global::System.Data.TypedTableBase<БАНКОВСКИЕ_УСЛУГИRow> {
            
            private global::System.Data.DataColumn columnНОМЕР_УСЛУГИ;
            
            private global::System.Data.DataColumn columnКОД_УСЛУГИ;
            
            private global::System.Data.DataColumn columnНАЗВАНИЕ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИDataTable() {
                this.TableName = "БАНКОВСКИЕ УСЛУГИ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal БАНКОВСКИЕ_УСЛУГИDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected БАНКОВСКИЕ_УСЛУГИDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_УСЛУГИColumn {
                get {
                    return this.columnНОМЕР_УСЛУГИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_УСЛУГИColumn {
                get {
                    return this.columnКОД_УСЛУГИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАЗВАНИЕColumn {
                get {
                    return this.columnНАЗВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow this[int index] {
                get {
                    return ((БАНКОВСКИЕ_УСЛУГИRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БАНКОВСКИЕ_УСЛУГИRowChangeEventHandler БАНКОВСКИЕ_УСЛУГИRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БАНКОВСКИЕ_УСЛУГИRowChangeEventHandler БАНКОВСКИЕ_УСЛУГИRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БАНКОВСКИЕ_УСЛУГИRowChangeEventHandler БАНКОВСКИЕ_УСЛУГИRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БАНКОВСКИЕ_УСЛУГИRowChangeEventHandler БАНКОВСКИЕ_УСЛУГИRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddБАНКОВСКИЕ_УСЛУГИRow(БАНКОВСКИЕ_УСЛУГИRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow AddБАНКОВСКИЕ_УСЛУГИRow(int НОМЕР_УСЛУГИ, ВИДЫ_ВКЛАДОВRow parentВИДЫ_ВКЛАДОВRowByFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ1, string НАЗВАНИЕ) {
                БАНКОВСКИЕ_УСЛУГИRow rowБАНКОВСКИЕ_УСЛУГИRow = ((БАНКОВСКИЕ_УСЛУГИRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        НОМЕР_УСЛУГИ,
                        null,
                        НАЗВАНИЕ};
                if ((parentВИДЫ_ВКЛАДОВRowByFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ1 != null)) {
                    columnValuesArray[1] = parentВИДЫ_ВКЛАДОВRowByFK_БАНКОВСКИЕ_УСЛУГИ_ВИДЫ_ВКЛАДОВ1[0];
                }
                rowБАНКОВСКИЕ_УСЛУГИRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowБАНКОВСКИЕ_УСЛУГИRow);
                return rowБАНКОВСКИЕ_УСЛУГИRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow FindByНОМЕР_УСЛУГИ(int НОМЕР_УСЛУГИ) {
                return ((БАНКОВСКИЕ_УСЛУГИRow)(this.Rows.Find(new object[] {
                            НОМЕР_УСЛУГИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                БАНКОВСКИЕ_УСЛУГИDataTable cln = ((БАНКОВСКИЕ_УСЛУГИDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new БАНКОВСКИЕ_УСЛУГИDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnНОМЕР_УСЛУГИ = base.Columns["НОМЕР_УСЛУГИ"];
                this.columnКОД_УСЛУГИ = base.Columns["КОД_УСЛУГИ"];
                this.columnНАЗВАНИЕ = base.Columns["НАЗВАНИЕ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnНОМЕР_УСЛУГИ = new global::System.Data.DataColumn("НОМЕР_УСЛУГИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_УСЛУГИ);
                this.columnКОД_УСЛУГИ = new global::System.Data.DataColumn("КОД_УСЛУГИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_УСЛУГИ);
                this.columnНАЗВАНИЕ = new global::System.Data.DataColumn("НАЗВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАЗВАНИЕ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНОМЕР_УСЛУГИ}, true));
                this.columnНОМЕР_УСЛУГИ.AllowDBNull = false;
                this.columnНОМЕР_УСЛУГИ.Unique = true;
                this.columnКОД_УСЛУГИ.MaxLength = 3;
                this.columnНАЗВАНИЕ.MaxLength = 75;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow NewБАНКОВСКИЕ_УСЛУГИRow() {
                return ((БАНКОВСКИЕ_УСЛУГИRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new БАНКОВСКИЕ_УСЛУГИRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(БАНКОВСКИЕ_УСЛУГИRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.БАНКОВСКИЕ_УСЛУГИRowChanged != null)) {
                    this.БАНКОВСКИЕ_УСЛУГИRowChanged(this, new БАНКОВСКИЕ_УСЛУГИRowChangeEvent(((БАНКОВСКИЕ_УСЛУГИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.БАНКОВСКИЕ_УСЛУГИRowChanging != null)) {
                    this.БАНКОВСКИЕ_УСЛУГИRowChanging(this, new БАНКОВСКИЕ_УСЛУГИRowChangeEvent(((БАНКОВСКИЕ_УСЛУГИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.БАНКОВСКИЕ_УСЛУГИRowDeleted != null)) {
                    this.БАНКОВСКИЕ_УСЛУГИRowDeleted(this, new БАНКОВСКИЕ_УСЛУГИRowChangeEvent(((БАНКОВСКИЕ_УСЛУГИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.БАНКОВСКИЕ_УСЛУГИRowDeleting != null)) {
                    this.БАНКОВСКИЕ_УСЛУГИRowDeleting(this, new БАНКОВСКИЕ_УСЛУГИRowChangeEvent(((БАНКОВСКИЕ_УСЛУГИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveБАНКОВСКИЕ_УСЛУГИRow(БАНКОВСКИЕ_УСЛУГИRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "БАНКОВСКИЕ_УСЛУГИDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ВИДЫ_ВКЛАДОВDataTable : global::System.Data.TypedTableBase<ВИДЫ_ВКЛАДОВRow> {
            
            private global::System.Data.DataColumn columnКОД_УСЛУГИ;
            
            private global::System.Data.DataColumn columnМИНИМАЛЬНАЯ_СУММА;
            
            private global::System.Data.DataColumn _columnМАКСИМАЛЬНАЯ_СУММА_;
            
            private global::System.Data.DataColumn columnНЕСНИЖАЕМЫЙ_ОСТАТОК;
            
            private global::System.Data.DataColumn columnСРОК_В_НЕДЕЛЯХ;
            
            private global::System.Data.DataColumn columnПРОЦЕНТЫ;
            
            private global::System.Data.DataColumn columnС_КАПИТАЛИЗАЦИЕЙ;
            
            private global::System.Data.DataColumn columnМИНИМАЛЬНЫЙ_ВОЗРАСТ;
            
            private global::System.Data.DataColumn columnВАЛЮТА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВDataTable() {
                this.TableName = "ВИДЫ_ВКЛАДОВ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_ВКЛАДОВDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ВИДЫ_ВКЛАДОВDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_УСЛУГИColumn {
                get {
                    return this.columnКОД_УСЛУГИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МИНИМАЛЬНАЯ_СУММАColumn {
                get {
                    return this.columnМИНИМАЛЬНАЯ_СУММА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _МАКСИМАЛЬНАЯ_СУММА_Column {
                get {
                    return this._columnМАКСИМАЛЬНАЯ_СУММА_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НЕСНИЖАЕМЫЙ_ОСТАТОКColumn {
                get {
                    return this.columnНЕСНИЖАЕМЫЙ_ОСТАТОК;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СРОК_В_НЕДЕЛЯХColumn {
                get {
                    return this.columnСРОК_В_НЕДЕЛЯХ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПРОЦЕНТЫColumn {
                get {
                    return this.columnПРОЦЕНТЫ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn С_КАПИТАЛИЗАЦИЕЙColumn {
                get {
                    return this.columnС_КАПИТАЛИЗАЦИЕЙ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МИНИМАЛЬНЫЙ_ВОЗРАСТColumn {
                get {
                    return this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ВАЛЮТАColumn {
                get {
                    return this.columnВАЛЮТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВRow this[int index] {
                get {
                    return ((ВИДЫ_ВКЛАДОВRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ВКЛАДОВRowChangeEventHandler ВИДЫ_ВКЛАДОВRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ВКЛАДОВRowChangeEventHandler ВИДЫ_ВКЛАДОВRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ВКЛАДОВRowChangeEventHandler ВИДЫ_ВКЛАДОВRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ВКЛАДОВRowChangeEventHandler ВИДЫ_ВКЛАДОВRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddВИДЫ_ВКЛАДОВRow(ВИДЫ_ВКЛАДОВRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВRow AddВИДЫ_ВКЛАДОВRow(string КОД_УСЛУГИ, decimal МИНИМАЛЬНАЯ_СУММА, decimal _МАКСИМАЛЬНАЯ_СУММА_, decimal НЕСНИЖАЕМЫЙ_ОСТАТОК, int СРОК_В_НЕДЕЛЯХ, decimal ПРОЦЕНТЫ, decimal С_КАПИТАЛИЗАЦИЕЙ, int МИНИМАЛЬНЫЙ_ВОЗРАСТ, string ВАЛЮТА) {
                ВИДЫ_ВКЛАДОВRow rowВИДЫ_ВКЛАДОВRow = ((ВИДЫ_ВКЛАДОВRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_УСЛУГИ,
                        МИНИМАЛЬНАЯ_СУММА,
                        _МАКСИМАЛЬНАЯ_СУММА_,
                        НЕСНИЖАЕМЫЙ_ОСТАТОК,
                        СРОК_В_НЕДЕЛЯХ,
                        ПРОЦЕНТЫ,
                        С_КАПИТАЛИЗАЦИЕЙ,
                        МИНИМАЛЬНЫЙ_ВОЗРАСТ,
                        ВАЛЮТА};
                rowВИДЫ_ВКЛАДОВRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВИДЫ_ВКЛАДОВRow);
                return rowВИДЫ_ВКЛАДОВRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВRow FindByКОД_УСЛУГИ(string КОД_УСЛУГИ) {
                return ((ВИДЫ_ВКЛАДОВRow)(this.Rows.Find(new object[] {
                            КОД_УСЛУГИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ВИДЫ_ВКЛАДОВDataTable cln = ((ВИДЫ_ВКЛАДОВDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ВИДЫ_ВКЛАДОВDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_УСЛУГИ = base.Columns["КОД_УСЛУГИ"];
                this.columnМИНИМАЛЬНАЯ_СУММА = base.Columns["МИНИМАЛЬНАЯ_СУММА"];
                this._columnМАКСИМАЛЬНАЯ_СУММА_ = base.Columns["МАКСИМАЛЬНАЯ_СУММА\\"];
                this.columnНЕСНИЖАЕМЫЙ_ОСТАТОК = base.Columns["НЕСНИЖАЕМЫЙ_ОСТАТОК"];
                this.columnСРОК_В_НЕДЕЛЯХ = base.Columns["СРОК_В_НЕДЕЛЯХ"];
                this.columnПРОЦЕНТЫ = base.Columns["ПРОЦЕНТЫ"];
                this.columnС_КАПИТАЛИЗАЦИЕЙ = base.Columns["С_КАПИТАЛИЗАЦИЕЙ"];
                this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ = base.Columns["МИНИМАЛЬНЫЙ_ВОЗРАСТ"];
                this.columnВАЛЮТА = base.Columns["ВАЛЮТА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_УСЛУГИ = new global::System.Data.DataColumn("КОД_УСЛУГИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_УСЛУГИ);
                this.columnМИНИМАЛЬНАЯ_СУММА = new global::System.Data.DataColumn("МИНИМАЛЬНАЯ_СУММА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМИНИМАЛЬНАЯ_СУММА);
                this._columnМАКСИМАЛЬНАЯ_СУММА_ = new global::System.Data.DataColumn("МАКСИМАЛЬНАЯ_СУММА\\", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnМАКСИМАЛЬНАЯ_СУММА_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnМАКСИМАЛЬНАЯ_СУММА_");
                this._columnМАКСИМАЛЬНАЯ_СУММА_.ExtendedProperties.Add("Generator_UserColumnName", "МАКСИМАЛЬНАЯ_СУММА\\");
                base.Columns.Add(this._columnМАКСИМАЛЬНАЯ_СУММА_);
                this.columnНЕСНИЖАЕМЫЙ_ОСТАТОК = new global::System.Data.DataColumn("НЕСНИЖАЕМЫЙ_ОСТАТОК", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНЕСНИЖАЕМЫЙ_ОСТАТОК);
                this.columnСРОК_В_НЕДЕЛЯХ = new global::System.Data.DataColumn("СРОК_В_НЕДЕЛЯХ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСРОК_В_НЕДЕЛЯХ);
                this.columnПРОЦЕНТЫ = new global::System.Data.DataColumn("ПРОЦЕНТЫ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПРОЦЕНТЫ);
                this.columnС_КАПИТАЛИЗАЦИЕЙ = new global::System.Data.DataColumn("С_КАПИТАЛИЗАЦИЕЙ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnС_КАПИТАЛИЗАЦИЕЙ);
                this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ = new global::System.Data.DataColumn("МИНИМАЛЬНЫЙ_ВОЗРАСТ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ);
                this.columnВАЛЮТА = new global::System.Data.DataColumn("ВАЛЮТА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВАЛЮТА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_УСЛУГИ}, true));
                this.columnКОД_УСЛУГИ.AllowDBNull = false;
                this.columnКОД_УСЛУГИ.Unique = true;
                this.columnКОД_УСЛУГИ.MaxLength = 3;
                this.columnВАЛЮТА.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВRow NewВИДЫ_ВКЛАДОВRow() {
                return ((ВИДЫ_ВКЛАДОВRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ВИДЫ_ВКЛАДОВRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ВИДЫ_ВКЛАДОВRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ВИДЫ_ВКЛАДОВRowChanged != null)) {
                    this.ВИДЫ_ВКЛАДОВRowChanged(this, new ВИДЫ_ВКЛАДОВRowChangeEvent(((ВИДЫ_ВКЛАДОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ВИДЫ_ВКЛАДОВRowChanging != null)) {
                    this.ВИДЫ_ВКЛАДОВRowChanging(this, new ВИДЫ_ВКЛАДОВRowChangeEvent(((ВИДЫ_ВКЛАДОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ВИДЫ_ВКЛАДОВRowDeleted != null)) {
                    this.ВИДЫ_ВКЛАДОВRowDeleted(this, new ВИДЫ_ВКЛАДОВRowChangeEvent(((ВИДЫ_ВКЛАДОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ВИДЫ_ВКЛАДОВRowDeleting != null)) {
                    this.ВИДЫ_ВКЛАДОВRowDeleting(this, new ВИДЫ_ВКЛАДОВRowChangeEvent(((ВИДЫ_ВКЛАДОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveВИДЫ_ВКЛАДОВRow(ВИДЫ_ВКЛАДОВRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ВИДЫ_ВКЛАДОВDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable : global::System.Data.TypedTableBase<ВИДЫ_ДЕБЕТОВЫХ_КАРТRow> {
            
            private global::System.Data.DataColumn columnКОД_УСЛУГИ;
            
            private global::System.Data.DataColumn columnОБСЛУЖИВАНИЕ_В_МЕСЯЦ;
            
            private global::System.Data.DataColumn columnМИНИМАЛЬНЫЙ_ВОЗРАСТ;
            
            private global::System.Data.DataColumn columnМАКСИМАЛЬНЫЙ_ВОЗРАСТ;
            
            private global::System.Data.DataColumn columnКЭШБЭК;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable() {
                this.TableName = "ВИДЫ_ДЕБЕТОВЫХ_КАРТ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_УСЛУГИColumn {
                get {
                    return this.columnКОД_УСЛУГИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОБСЛУЖИВАНИЕ_В_МЕСЯЦColumn {
                get {
                    return this.columnОБСЛУЖИВАНИЕ_В_МЕСЯЦ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МИНИМАЛЬНЫЙ_ВОЗРАСТColumn {
                get {
                    return this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МАКСИМАЛЬНЫЙ_ВОЗРАСТColumn {
                get {
                    return this.columnМАКСИМАЛЬНЫЙ_ВОЗРАСТ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КЭШБЭКColumn {
                get {
                    return this.columnКЭШБЭК;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТRow this[int index] {
                get {
                    return ((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEventHandler ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEventHandler ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEventHandler ВИДЫ_ДЕБЕТОВЫХ_КАРТRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEventHandler ВИДЫ_ДЕБЕТОВЫХ_КАРТRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddВИДЫ_ДЕБЕТОВЫХ_КАРТRow(ВИДЫ_ДЕБЕТОВЫХ_КАРТRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТRow AddВИДЫ_ДЕБЕТОВЫХ_КАРТRow(string КОД_УСЛУГИ, decimal ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, int МИНИМАЛЬНЫЙ_ВОЗРАСТ, int МАКСИМАЛЬНЫЙ_ВОЗРАСТ, decimal КЭШБЭК) {
                ВИДЫ_ДЕБЕТОВЫХ_КАРТRow rowВИДЫ_ДЕБЕТОВЫХ_КАРТRow = ((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_УСЛУГИ,
                        ОБСЛУЖИВАНИЕ_В_МЕСЯЦ,
                        МИНИМАЛЬНЫЙ_ВОЗРАСТ,
                        МАКСИМАЛЬНЫЙ_ВОЗРАСТ,
                        КЭШБЭК};
                rowВИДЫ_ДЕБЕТОВЫХ_КАРТRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВИДЫ_ДЕБЕТОВЫХ_КАРТRow);
                return rowВИДЫ_ДЕБЕТОВЫХ_КАРТRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТRow FindByКОД_УСЛУГИ(string КОД_УСЛУГИ) {
                return ((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(this.Rows.Find(new object[] {
                            КОД_УСЛУГИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable cln = ((ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_УСЛУГИ = base.Columns["КОД_УСЛУГИ"];
                this.columnОБСЛУЖИВАНИЕ_В_МЕСЯЦ = base.Columns["ОБСЛУЖИВАНИЕ_В_МЕСЯЦ"];
                this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ = base.Columns["МИНИМАЛЬНЫЙ_ВОЗРАСТ"];
                this.columnМАКСИМАЛЬНЫЙ_ВОЗРАСТ = base.Columns["МАКСИМАЛЬНЫЙ_ВОЗРАСТ"];
                this.columnКЭШБЭК = base.Columns["КЭШБЭК"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_УСЛУГИ = new global::System.Data.DataColumn("КОД_УСЛУГИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_УСЛУГИ);
                this.columnОБСЛУЖИВАНИЕ_В_МЕСЯЦ = new global::System.Data.DataColumn("ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОБСЛУЖИВАНИЕ_В_МЕСЯЦ);
                this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ = new global::System.Data.DataColumn("МИНИМАЛЬНЫЙ_ВОЗРАСТ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМИНИМАЛЬНЫЙ_ВОЗРАСТ);
                this.columnМАКСИМАЛЬНЫЙ_ВОЗРАСТ = new global::System.Data.DataColumn("МАКСИМАЛЬНЫЙ_ВОЗРАСТ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМАКСИМАЛЬНЫЙ_ВОЗРАСТ);
                this.columnКЭШБЭК = new global::System.Data.DataColumn("КЭШБЭК", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКЭШБЭК);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_УСЛУГИ}, true));
                this.columnКОД_УСЛУГИ.AllowDBNull = false;
                this.columnКОД_УСЛУГИ.Unique = true;
                this.columnКОД_УСЛУГИ.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТRow NewВИДЫ_ДЕБЕТОВЫХ_КАРТRow() {
                return ((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ВИДЫ_ДЕБЕТОВЫХ_КАРТRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ВИДЫ_ДЕБЕТОВЫХ_КАРТRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChanged != null)) {
                    this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChanged(this, new ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEvent(((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChanging != null)) {
                    this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChanging(this, new ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEvent(((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowDeleted != null)) {
                    this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowDeleted(this, new ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEvent(((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowDeleting != null)) {
                    this.ВИДЫ_ДЕБЕТОВЫХ_КАРТRowDeleting(this, new ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEvent(((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveВИДЫ_ДЕБЕТОВЫХ_КАРТRow(ВИДЫ_ДЕБЕТОВЫХ_КАРТRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ВИДЫ_КРЕДИТОВDataTable : global::System.Data.TypedTableBase<ВИДЫ_КРЕДИТОВRow> {
            
            private global::System.Data.DataColumn columnКОД_УСЛУГИ;
            
            private global::System.Data.DataColumn columnМИНИМАЛЬНЫЙ_СРОК_КРЕДИТА;
            
            private global::System.Data.DataColumn columnМАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА;
            
            private global::System.Data.DataColumn columnПРОЦЕНТЫ;
            
            private global::System.Data.DataColumn columnМИНИМАЛЬНАЯ_СУММА;
            
            private global::System.Data.DataColumn columnМАКСИМАЛЬНАЯ_СУММА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВDataTable() {
                this.TableName = "ВИДЫ_КРЕДИТОВ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_КРЕДИТОВDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ВИДЫ_КРЕДИТОВDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_УСЛУГИColumn {
                get {
                    return this.columnКОД_УСЛУГИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МИНИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn {
                get {
                    return this.columnМИНИМАЛЬНЫЙ_СРОК_КРЕДИТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn {
                get {
                    return this.columnМАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПРОЦЕНТЫColumn {
                get {
                    return this.columnПРОЦЕНТЫ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МИНИМАЛЬНАЯ_СУММАColumn {
                get {
                    return this.columnМИНИМАЛЬНАЯ_СУММА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МАКСИМАЛЬНАЯ_СУММАColumn {
                get {
                    return this.columnМАКСИМАЛЬНАЯ_СУММА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВRow this[int index] {
                get {
                    return ((ВИДЫ_КРЕДИТОВRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_КРЕДИТОВRowChangeEventHandler ВИДЫ_КРЕДИТОВRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_КРЕДИТОВRowChangeEventHandler ВИДЫ_КРЕДИТОВRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_КРЕДИТОВRowChangeEventHandler ВИДЫ_КРЕДИТОВRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_КРЕДИТОВRowChangeEventHandler ВИДЫ_КРЕДИТОВRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddВИДЫ_КРЕДИТОВRow(ВИДЫ_КРЕДИТОВRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВRow AddВИДЫ_КРЕДИТОВRow(string КОД_УСЛУГИ, int МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, int МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, decimal ПРОЦЕНТЫ, decimal МИНИМАЛЬНАЯ_СУММА, decimal МАКСИМАЛЬНАЯ_СУММА) {
                ВИДЫ_КРЕДИТОВRow rowВИДЫ_КРЕДИТОВRow = ((ВИДЫ_КРЕДИТОВRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_УСЛУГИ,
                        МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА,
                        МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА,
                        ПРОЦЕНТЫ,
                        МИНИМАЛЬНАЯ_СУММА,
                        МАКСИМАЛЬНАЯ_СУММА};
                rowВИДЫ_КРЕДИТОВRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВИДЫ_КРЕДИТОВRow);
                return rowВИДЫ_КРЕДИТОВRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВRow FindByКОД_УСЛУГИ(string КОД_УСЛУГИ) {
                return ((ВИДЫ_КРЕДИТОВRow)(this.Rows.Find(new object[] {
                            КОД_УСЛУГИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ВИДЫ_КРЕДИТОВDataTable cln = ((ВИДЫ_КРЕДИТОВDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ВИДЫ_КРЕДИТОВDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_УСЛУГИ = base.Columns["КОД_УСЛУГИ"];
                this.columnМИНИМАЛЬНЫЙ_СРОК_КРЕДИТА = base.Columns["МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА"];
                this.columnМАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА = base.Columns["МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА"];
                this.columnПРОЦЕНТЫ = base.Columns["ПРОЦЕНТЫ"];
                this.columnМИНИМАЛЬНАЯ_СУММА = base.Columns["МИНИМАЛЬНАЯ_СУММА"];
                this.columnМАКСИМАЛЬНАЯ_СУММА = base.Columns["МАКСИМАЛЬНАЯ_СУММА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_УСЛУГИ = new global::System.Data.DataColumn("КОД_УСЛУГИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_УСЛУГИ);
                this.columnМИНИМАЛЬНЫЙ_СРОК_КРЕДИТА = new global::System.Data.DataColumn("МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМИНИМАЛЬНЫЙ_СРОК_КРЕДИТА);
                this.columnМАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА = new global::System.Data.DataColumn("МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА);
                this.columnПРОЦЕНТЫ = new global::System.Data.DataColumn("ПРОЦЕНТЫ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПРОЦЕНТЫ);
                this.columnМИНИМАЛЬНАЯ_СУММА = new global::System.Data.DataColumn("МИНИМАЛЬНАЯ_СУММА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМИНИМАЛЬНАЯ_СУММА);
                this.columnМАКСИМАЛЬНАЯ_СУММА = new global::System.Data.DataColumn("МАКСИМАЛЬНАЯ_СУММА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМАКСИМАЛЬНАЯ_СУММА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_УСЛУГИ}, true));
                this.columnКОД_УСЛУГИ.AllowDBNull = false;
                this.columnКОД_УСЛУГИ.Unique = true;
                this.columnКОД_УСЛУГИ.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВRow NewВИДЫ_КРЕДИТОВRow() {
                return ((ВИДЫ_КРЕДИТОВRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ВИДЫ_КРЕДИТОВRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ВИДЫ_КРЕДИТОВRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ВИДЫ_КРЕДИТОВRowChanged != null)) {
                    this.ВИДЫ_КРЕДИТОВRowChanged(this, new ВИДЫ_КРЕДИТОВRowChangeEvent(((ВИДЫ_КРЕДИТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ВИДЫ_КРЕДИТОВRowChanging != null)) {
                    this.ВИДЫ_КРЕДИТОВRowChanging(this, new ВИДЫ_КРЕДИТОВRowChangeEvent(((ВИДЫ_КРЕДИТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ВИДЫ_КРЕДИТОВRowDeleted != null)) {
                    this.ВИДЫ_КРЕДИТОВRowDeleted(this, new ВИДЫ_КРЕДИТОВRowChangeEvent(((ВИДЫ_КРЕДИТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ВИДЫ_КРЕДИТОВRowDeleting != null)) {
                    this.ВИДЫ_КРЕДИТОВRowDeleting(this, new ВИДЫ_КРЕДИТОВRowChangeEvent(((ВИДЫ_КРЕДИТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveВИДЫ_КРЕДИТОВRow(ВИДЫ_КРЕДИТОВRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ВИДЫ_КРЕДИТОВDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ВИДЫ_ОПЕРАЦИЙDataTable : global::System.Data.TypedTableBase<ВИДЫ_ОПЕРАЦИЙRow> {
            
            private global::System.Data.DataColumn columnКОД_ОПЕРАЦИИ;
            
            private global::System.Data.DataColumn columnВИД_ОПЕРАЦИИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙDataTable() {
                this.TableName = "ВИДЫ_ОПЕРАЦИЙ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_ОПЕРАЦИЙDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ВИДЫ_ОПЕРАЦИЙDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ОПЕРАЦИИColumn {
                get {
                    return this.columnКОД_ОПЕРАЦИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ВИД_ОПЕРАЦИИColumn {
                get {
                    return this.columnВИД_ОПЕРАЦИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙRow this[int index] {
                get {
                    return ((ВИДЫ_ОПЕРАЦИЙRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ОПЕРАЦИЙRowChangeEventHandler ВИДЫ_ОПЕРАЦИЙRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ОПЕРАЦИЙRowChangeEventHandler ВИДЫ_ОПЕРАЦИЙRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ОПЕРАЦИЙRowChangeEventHandler ВИДЫ_ОПЕРАЦИЙRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВИДЫ_ОПЕРАЦИЙRowChangeEventHandler ВИДЫ_ОПЕРАЦИЙRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddВИДЫ_ОПЕРАЦИЙRow(ВИДЫ_ОПЕРАЦИЙRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙRow AddВИДЫ_ОПЕРАЦИЙRow(string КОД_ОПЕРАЦИИ, string ВИД_ОПЕРАЦИИ) {
                ВИДЫ_ОПЕРАЦИЙRow rowВИДЫ_ОПЕРАЦИЙRow = ((ВИДЫ_ОПЕРАЦИЙRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_ОПЕРАЦИИ,
                        ВИД_ОПЕРАЦИИ};
                rowВИДЫ_ОПЕРАЦИЙRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВИДЫ_ОПЕРАЦИЙRow);
                return rowВИДЫ_ОПЕРАЦИЙRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙRow FindByКОД_ОПЕРАЦИИ(string КОД_ОПЕРАЦИИ) {
                return ((ВИДЫ_ОПЕРАЦИЙRow)(this.Rows.Find(new object[] {
                            КОД_ОПЕРАЦИИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ВИДЫ_ОПЕРАЦИЙDataTable cln = ((ВИДЫ_ОПЕРАЦИЙDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ВИДЫ_ОПЕРАЦИЙDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_ОПЕРАЦИИ = base.Columns["КОД_ОПЕРАЦИИ"];
                this.columnВИД_ОПЕРАЦИИ = base.Columns["ВИД_ОПЕРАЦИИ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_ОПЕРАЦИИ = new global::System.Data.DataColumn("КОД_ОПЕРАЦИИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ОПЕРАЦИИ);
                this.columnВИД_ОПЕРАЦИИ = new global::System.Data.DataColumn("ВИД_ОПЕРАЦИИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВИД_ОПЕРАЦИИ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_ОПЕРАЦИИ}, true));
                this.columnКОД_ОПЕРАЦИИ.AllowDBNull = false;
                this.columnКОД_ОПЕРАЦИИ.Unique = true;
                this.columnКОД_ОПЕРАЦИИ.MaxLength = 3;
                this.columnВИД_ОПЕРАЦИИ.MaxLength = 75;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙRow NewВИДЫ_ОПЕРАЦИЙRow() {
                return ((ВИДЫ_ОПЕРАЦИЙRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ВИДЫ_ОПЕРАЦИЙRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ВИДЫ_ОПЕРАЦИЙRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ВИДЫ_ОПЕРАЦИЙRowChanged != null)) {
                    this.ВИДЫ_ОПЕРАЦИЙRowChanged(this, new ВИДЫ_ОПЕРАЦИЙRowChangeEvent(((ВИДЫ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ВИДЫ_ОПЕРАЦИЙRowChanging != null)) {
                    this.ВИДЫ_ОПЕРАЦИЙRowChanging(this, new ВИДЫ_ОПЕРАЦИЙRowChangeEvent(((ВИДЫ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ВИДЫ_ОПЕРАЦИЙRowDeleted != null)) {
                    this.ВИДЫ_ОПЕРАЦИЙRowDeleted(this, new ВИДЫ_ОПЕРАЦИЙRowChangeEvent(((ВИДЫ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ВИДЫ_ОПЕРАЦИЙRowDeleting != null)) {
                    this.ВИДЫ_ОПЕРАЦИЙRowDeleting(this, new ВИДЫ_ОПЕРАЦИЙRowChangeEvent(((ВИДЫ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveВИДЫ_ОПЕРАЦИЙRow(ВИДЫ_ОПЕРАЦИЙRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ВИДЫ_ОПЕРАЦИЙDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ДАННЫЕ_ВХОДАDataTable : global::System.Data.TypedTableBase<ДАННЫЕ_ВХОДАRow> {
            
            private global::System.Data.DataColumn columnLOGIN;
            
            private global::System.Data.DataColumn columnПАРОЛЬ;
            
            private global::System.Data.DataColumn columnНОМЕР_СОТРУДНИКА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАDataTable() {
                this.TableName = "ДАННЫЕ_ВХОДА";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ДАННЫЕ_ВХОДАDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ДАННЫЕ_ВХОДАDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOGINColumn {
                get {
                    return this.columnLOGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПАРОЛЬColumn {
                get {
                    return this.columnПАРОЛЬ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_СОТРУДНИКАColumn {
                get {
                    return this.columnНОМЕР_СОТРУДНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАRow this[int index] {
                get {
                    return ((ДАННЫЕ_ВХОДАRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДАННЫЕ_ВХОДАRowChangeEventHandler ДАННЫЕ_ВХОДАRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДАННЫЕ_ВХОДАRowChangeEventHandler ДАННЫЕ_ВХОДАRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДАННЫЕ_ВХОДАRowChangeEventHandler ДАННЫЕ_ВХОДАRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДАННЫЕ_ВХОДАRowChangeEventHandler ДАННЫЕ_ВХОДАRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddДАННЫЕ_ВХОДАRow(ДАННЫЕ_ВХОДАRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАRow AddДАННЫЕ_ВХОДАRow(string LOGIN, string ПАРОЛЬ, СОТРУДНИКИRow parentСОТРУДНИКИRowByFK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ) {
                ДАННЫЕ_ВХОДАRow rowДАННЫЕ_ВХОДАRow = ((ДАННЫЕ_ВХОДАRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOGIN,
                        ПАРОЛЬ,
                        null};
                if ((parentСОТРУДНИКИRowByFK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ != null)) {
                    columnValuesArray[2] = parentСОТРУДНИКИRowByFK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ[0];
                }
                rowДАННЫЕ_ВХОДАRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДАННЫЕ_ВХОДАRow);
                return rowДАННЫЕ_ВХОДАRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАRow FindByLOGIN(string LOGIN) {
                return ((ДАННЫЕ_ВХОДАRow)(this.Rows.Find(new object[] {
                            LOGIN})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ДАННЫЕ_ВХОДАDataTable cln = ((ДАННЫЕ_ВХОДАDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ДАННЫЕ_ВХОДАDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnLOGIN = base.Columns["LOGIN"];
                this.columnПАРОЛЬ = base.Columns["ПАРОЛЬ"];
                this.columnНОМЕР_СОТРУДНИКА = base.Columns["НОМЕР_СОТРУДНИКА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnLOGIN = new global::System.Data.DataColumn("LOGIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGIN);
                this.columnПАРОЛЬ = new global::System.Data.DataColumn("ПАРОЛЬ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПАРОЛЬ);
                this.columnНОМЕР_СОТРУДНИКА = new global::System.Data.DataColumn("НОМЕР_СОТРУДНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_СОТРУДНИКА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOGIN}, true));
                this.columnLOGIN.AllowDBNull = false;
                this.columnLOGIN.Unique = true;
                this.columnLOGIN.MaxLength = 25;
                this.columnПАРОЛЬ.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАRow NewДАННЫЕ_ВХОДАRow() {
                return ((ДАННЫЕ_ВХОДАRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ДАННЫЕ_ВХОДАRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ДАННЫЕ_ВХОДАRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ДАННЫЕ_ВХОДАRowChanged != null)) {
                    this.ДАННЫЕ_ВХОДАRowChanged(this, new ДАННЫЕ_ВХОДАRowChangeEvent(((ДАННЫЕ_ВХОДАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ДАННЫЕ_ВХОДАRowChanging != null)) {
                    this.ДАННЫЕ_ВХОДАRowChanging(this, new ДАННЫЕ_ВХОДАRowChangeEvent(((ДАННЫЕ_ВХОДАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ДАННЫЕ_ВХОДАRowDeleted != null)) {
                    this.ДАННЫЕ_ВХОДАRowDeleted(this, new ДАННЫЕ_ВХОДАRowChangeEvent(((ДАННЫЕ_ВХОДАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ДАННЫЕ_ВХОДАRowDeleting != null)) {
                    this.ДАННЫЕ_ВХОДАRowDeleting(this, new ДАННЫЕ_ВХОДАRowChangeEvent(((ДАННЫЕ_ВХОДАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveДАННЫЕ_ВХОДАRow(ДАННЫЕ_ВХОДАRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ДАННЫЕ_ВХОДАDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ДОГОВОРЫ_КЛИЕНТОВDataTable : global::System.Data.TypedTableBase<ДОГОВОРЫ_КЛИЕНТОВRow> {
            
            private global::System.Data.DataColumn columnНОМЕР_ДОГОВОРА;
            
            private global::System.Data.DataColumn columnНОМЕР_КЛИЕНТА;
            
            private global::System.Data.DataColumn columnДАТА_ЗАКЛЮЧЕНИЯ;
            
            private global::System.Data.DataColumn columnДАТА_ОКОНЧАНИЯ;
            
            private global::System.Data.DataColumn columnКОД_УСЛУГИ;
            
            private global::System.Data.DataColumn columnНОМЕР_СЧЁТА;
            
            private global::System.Data.DataColumn columnНОМЕР_СОТРУДНИКА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВDataTable() {
                this.TableName = "ДОГОВОРЫ_КЛИЕНТОВ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ДОГОВОРЫ_КЛИЕНТОВDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ДОГОВОРЫ_КЛИЕНТОВDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_ДОГОВОРАColumn {
                get {
                    return this.columnНОМЕР_ДОГОВОРА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_КЛИЕНТАColumn {
                get {
                    return this.columnНОМЕР_КЛИЕНТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ЗАКЛЮЧЕНИЯColumn {
                get {
                    return this.columnДАТА_ЗАКЛЮЧЕНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ОКОНЧАНИЯColumn {
                get {
                    return this.columnДАТА_ОКОНЧАНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_УСЛУГИColumn {
                get {
                    return this.columnКОД_УСЛУГИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_СЧЁТАColumn {
                get {
                    return this.columnНОМЕР_СЧЁТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_СОТРУДНИКАColumn {
                get {
                    return this.columnНОМЕР_СОТРУДНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow this[int index] {
                get {
                    return ((ДОГОВОРЫ_КЛИЕНТОВRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДОГОВОРЫ_КЛИЕНТОВRowChangeEventHandler ДОГОВОРЫ_КЛИЕНТОВRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДОГОВОРЫ_КЛИЕНТОВRowChangeEventHandler ДОГОВОРЫ_КЛИЕНТОВRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДОГОВОРЫ_КЛИЕНТОВRowChangeEventHandler ДОГОВОРЫ_КЛИЕНТОВRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДОГОВОРЫ_КЛИЕНТОВRowChangeEventHandler ДОГОВОРЫ_КЛИЕНТОВRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddДОГОВОРЫ_КЛИЕНТОВRow(ДОГОВОРЫ_КЛИЕНТОВRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow AddДОГОВОРЫ_КЛИЕНТОВRow(int НОМЕР_ДОГОВОРА, КЛИЕНТЫRow parentКЛИЕНТЫRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ, System.DateTime ДАТА_ЗАКЛЮЧЕНИЯ, System.DateTime ДАТА_ОКОНЧАНИЯ, string КОД_УСЛУГИ, СЧЕТАRow parentСЧЕТАRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА, СОТРУДНИКИRow parentСОТРУДНИКИRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ) {
                ДОГОВОРЫ_КЛИЕНТОВRow rowДОГОВОРЫ_КЛИЕНТОВRow = ((ДОГОВОРЫ_КЛИЕНТОВRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        НОМЕР_ДОГОВОРА,
                        null,
                        ДАТА_ЗАКЛЮЧЕНИЯ,
                        ДАТА_ОКОНЧАНИЯ,
                        КОД_УСЛУГИ,
                        null,
                        null};
                if ((parentКЛИЕНТЫRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ != null)) {
                    columnValuesArray[1] = parentКЛИЕНТЫRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ[0];
                }
                if ((parentСЧЕТАRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА != null)) {
                    columnValuesArray[5] = parentСЧЕТАRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА[0];
                }
                if ((parentСОТРУДНИКИRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ != null)) {
                    columnValuesArray[6] = parentСОТРУДНИКИRowByFK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ[0];
                }
                rowДОГОВОРЫ_КЛИЕНТОВRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДОГОВОРЫ_КЛИЕНТОВRow);
                return rowДОГОВОРЫ_КЛИЕНТОВRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow FindByНОМЕР_ДОГОВОРА(int НОМЕР_ДОГОВОРА) {
                return ((ДОГОВОРЫ_КЛИЕНТОВRow)(this.Rows.Find(new object[] {
                            НОМЕР_ДОГОВОРА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ДОГОВОРЫ_КЛИЕНТОВDataTable cln = ((ДОГОВОРЫ_КЛИЕНТОВDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ДОГОВОРЫ_КЛИЕНТОВDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnНОМЕР_ДОГОВОРА = base.Columns["НОМЕР_ДОГОВОРА"];
                this.columnНОМЕР_КЛИЕНТА = base.Columns["НОМЕР_КЛИЕНТА"];
                this.columnДАТА_ЗАКЛЮЧЕНИЯ = base.Columns["ДАТА_ЗАКЛЮЧЕНИЯ"];
                this.columnДАТА_ОКОНЧАНИЯ = base.Columns["ДАТА_ОКОНЧАНИЯ"];
                this.columnКОД_УСЛУГИ = base.Columns["КОД_УСЛУГИ"];
                this.columnНОМЕР_СЧЁТА = base.Columns["НОМЕР_СЧЁТА"];
                this.columnНОМЕР_СОТРУДНИКА = base.Columns["НОМЕР_СОТРУДНИКА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnНОМЕР_ДОГОВОРА = new global::System.Data.DataColumn("НОМЕР_ДОГОВОРА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_ДОГОВОРА);
                this.columnНОМЕР_КЛИЕНТА = new global::System.Data.DataColumn("НОМЕР_КЛИЕНТА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_КЛИЕНТА);
                this.columnДАТА_ЗАКЛЮЧЕНИЯ = new global::System.Data.DataColumn("ДАТА_ЗАКЛЮЧЕНИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ЗАКЛЮЧЕНИЯ);
                this.columnДАТА_ОКОНЧАНИЯ = new global::System.Data.DataColumn("ДАТА_ОКОНЧАНИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ОКОНЧАНИЯ);
                this.columnКОД_УСЛУГИ = new global::System.Data.DataColumn("КОД_УСЛУГИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_УСЛУГИ);
                this.columnНОМЕР_СЧЁТА = new global::System.Data.DataColumn("НОМЕР_СЧЁТА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_СЧЁТА);
                this.columnНОМЕР_СОТРУДНИКА = new global::System.Data.DataColumn("НОМЕР_СОТРУДНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_СОТРУДНИКА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНОМЕР_ДОГОВОРА}, true));
                this.columnНОМЕР_ДОГОВОРА.AllowDBNull = false;
                this.columnНОМЕР_ДОГОВОРА.Unique = true;
                this.columnКОД_УСЛУГИ.MaxLength = 3;
                this.columnНОМЕР_СЧЁТА.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow NewДОГОВОРЫ_КЛИЕНТОВRow() {
                return ((ДОГОВОРЫ_КЛИЕНТОВRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ДОГОВОРЫ_КЛИЕНТОВRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ДОГОВОРЫ_КЛИЕНТОВRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ДОГОВОРЫ_КЛИЕНТОВRowChanged != null)) {
                    this.ДОГОВОРЫ_КЛИЕНТОВRowChanged(this, new ДОГОВОРЫ_КЛИЕНТОВRowChangeEvent(((ДОГОВОРЫ_КЛИЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ДОГОВОРЫ_КЛИЕНТОВRowChanging != null)) {
                    this.ДОГОВОРЫ_КЛИЕНТОВRowChanging(this, new ДОГОВОРЫ_КЛИЕНТОВRowChangeEvent(((ДОГОВОРЫ_КЛИЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ДОГОВОРЫ_КЛИЕНТОВRowDeleted != null)) {
                    this.ДОГОВОРЫ_КЛИЕНТОВRowDeleted(this, new ДОГОВОРЫ_КЛИЕНТОВRowChangeEvent(((ДОГОВОРЫ_КЛИЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ДОГОВОРЫ_КЛИЕНТОВRowDeleting != null)) {
                    this.ДОГОВОРЫ_КЛИЕНТОВRowDeleting(this, new ДОГОВОРЫ_КЛИЕНТОВRowChangeEvent(((ДОГОВОРЫ_КЛИЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveДОГОВОРЫ_КЛИЕНТОВRow(ДОГОВОРЫ_КЛИЕНТОВRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ДОГОВОРЫ_КЛИЕНТОВDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ИСТОРИЯ_ОПЕРАЦИЙDataTable : global::System.Data.TypedTableBase<ИСТОРИЯ_ОПЕРАЦИЙRow> {
            
            private global::System.Data.DataColumn columnНОМЕР_ОПЕРАЦИИ;
            
            private global::System.Data.DataColumn columnКОД_ОПЕРАЦИИ;
            
            private global::System.Data.DataColumn columnНОМЕР_СЧЁТА;
            
            private global::System.Data.DataColumn columnКАК_СОВЕРШЕНО;
            
            private global::System.Data.DataColumn columnСУММА_ОПЕРАЦИИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙDataTable() {
                this.TableName = "ИСТОРИЯ_ОПЕРАЦИЙ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ИСТОРИЯ_ОПЕРАЦИЙDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ИСТОРИЯ_ОПЕРАЦИЙDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_ОПЕРАЦИИColumn {
                get {
                    return this.columnНОМЕР_ОПЕРАЦИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ОПЕРАЦИИColumn {
                get {
                    return this.columnКОД_ОПЕРАЦИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_СЧЁТАColumn {
                get {
                    return this.columnНОМЕР_СЧЁТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КАК_СОВЕРШЕНОColumn {
                get {
                    return this.columnКАК_СОВЕРШЕНО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СУММА_ОПЕРАЦИИColumn {
                get {
                    return this.columnСУММА_ОПЕРАЦИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRow this[int index] {
                get {
                    return ((ИСТОРИЯ_ОПЕРАЦИЙRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИСТОРИЯ_ОПЕРАЦИЙRowChangeEventHandler ИСТОРИЯ_ОПЕРАЦИЙRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИСТОРИЯ_ОПЕРАЦИЙRowChangeEventHandler ИСТОРИЯ_ОПЕРАЦИЙRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИСТОРИЯ_ОПЕРАЦИЙRowChangeEventHandler ИСТОРИЯ_ОПЕРАЦИЙRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИСТОРИЯ_ОПЕРАЦИЙRowChangeEventHandler ИСТОРИЯ_ОПЕРАЦИЙRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddИСТОРИЯ_ОПЕРАЦИЙRow(ИСТОРИЯ_ОПЕРАЦИЙRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRow AddИСТОРИЯ_ОПЕРАЦИЙRow(int НОМЕР_ОПЕРАЦИИ, ВИДЫ_ОПЕРАЦИЙRow parentВИДЫ_ОПЕРАЦИЙRowByFK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ, СЧЕТАRow parentСЧЕТАRowByFK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА, string КАК_СОВЕРШЕНО, decimal СУММА_ОПЕРАЦИИ) {
                ИСТОРИЯ_ОПЕРАЦИЙRow rowИСТОРИЯ_ОПЕРАЦИЙRow = ((ИСТОРИЯ_ОПЕРАЦИЙRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        НОМЕР_ОПЕРАЦИИ,
                        null,
                        null,
                        КАК_СОВЕРШЕНО,
                        СУММА_ОПЕРАЦИИ};
                if ((parentВИДЫ_ОПЕРАЦИЙRowByFK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ != null)) {
                    columnValuesArray[1] = parentВИДЫ_ОПЕРАЦИЙRowByFK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ[0];
                }
                if ((parentСЧЕТАRowByFK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА != null)) {
                    columnValuesArray[2] = parentСЧЕТАRowByFK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА[0];
                }
                rowИСТОРИЯ_ОПЕРАЦИЙRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowИСТОРИЯ_ОПЕРАЦИЙRow);
                return rowИСТОРИЯ_ОПЕРАЦИЙRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRow FindByНОМЕР_ОПЕРАЦИИ(int НОМЕР_ОПЕРАЦИИ) {
                return ((ИСТОРИЯ_ОПЕРАЦИЙRow)(this.Rows.Find(new object[] {
                            НОМЕР_ОПЕРАЦИИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ИСТОРИЯ_ОПЕРАЦИЙDataTable cln = ((ИСТОРИЯ_ОПЕРАЦИЙDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ИСТОРИЯ_ОПЕРАЦИЙDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnНОМЕР_ОПЕРАЦИИ = base.Columns["НОМЕР_ОПЕРАЦИИ"];
                this.columnКОД_ОПЕРАЦИИ = base.Columns["КОД_ОПЕРАЦИИ"];
                this.columnНОМЕР_СЧЁТА = base.Columns["НОМЕР_СЧЁТА"];
                this.columnКАК_СОВЕРШЕНО = base.Columns["КАК_СОВЕРШЕНО"];
                this.columnСУММА_ОПЕРАЦИИ = base.Columns["СУММА_ОПЕРАЦИИ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnНОМЕР_ОПЕРАЦИИ = new global::System.Data.DataColumn("НОМЕР_ОПЕРАЦИИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_ОПЕРАЦИИ);
                this.columnКОД_ОПЕРАЦИИ = new global::System.Data.DataColumn("КОД_ОПЕРАЦИИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ОПЕРАЦИИ);
                this.columnНОМЕР_СЧЁТА = new global::System.Data.DataColumn("НОМЕР_СЧЁТА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_СЧЁТА);
                this.columnКАК_СОВЕРШЕНО = new global::System.Data.DataColumn("КАК_СОВЕРШЕНО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКАК_СОВЕРШЕНО);
                this.columnСУММА_ОПЕРАЦИИ = new global::System.Data.DataColumn("СУММА_ОПЕРАЦИИ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСУММА_ОПЕРАЦИИ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНОМЕР_ОПЕРАЦИИ}, true));
                this.columnНОМЕР_ОПЕРАЦИИ.AllowDBNull = false;
                this.columnНОМЕР_ОПЕРАЦИИ.Unique = true;
                this.columnКОД_ОПЕРАЦИИ.MaxLength = 3;
                this.columnНОМЕР_СЧЁТА.MaxLength = 20;
                this.columnКАК_СОВЕРШЕНО.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRow NewИСТОРИЯ_ОПЕРАЦИЙRow() {
                return ((ИСТОРИЯ_ОПЕРАЦИЙRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ИСТОРИЯ_ОПЕРАЦИЙRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ИСТОРИЯ_ОПЕРАЦИЙRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ИСТОРИЯ_ОПЕРАЦИЙRowChanged != null)) {
                    this.ИСТОРИЯ_ОПЕРАЦИЙRowChanged(this, new ИСТОРИЯ_ОПЕРАЦИЙRowChangeEvent(((ИСТОРИЯ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ИСТОРИЯ_ОПЕРАЦИЙRowChanging != null)) {
                    this.ИСТОРИЯ_ОПЕРАЦИЙRowChanging(this, new ИСТОРИЯ_ОПЕРАЦИЙRowChangeEvent(((ИСТОРИЯ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ИСТОРИЯ_ОПЕРАЦИЙRowDeleted != null)) {
                    this.ИСТОРИЯ_ОПЕРАЦИЙRowDeleted(this, new ИСТОРИЯ_ОПЕРАЦИЙRowChangeEvent(((ИСТОРИЯ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ИСТОРИЯ_ОПЕРАЦИЙRowDeleting != null)) {
                    this.ИСТОРИЯ_ОПЕРАЦИЙRowDeleting(this, new ИСТОРИЯ_ОПЕРАЦИЙRowChangeEvent(((ИСТОРИЯ_ОПЕРАЦИЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveИСТОРИЯ_ОПЕРАЦИЙRow(ИСТОРИЯ_ОПЕРАЦИЙRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ИСТОРИЯ_ОПЕРАЦИЙDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КЛИЕНТЫDataTable : global::System.Data.TypedTableBase<КЛИЕНТЫRow> {
            
            private global::System.Data.DataColumn columnНОМЕР_КЛИЕНТА;
            
            private global::System.Data.DataColumn columnФАМИЛИЯ;
            
            private global::System.Data.DataColumn columnИМЯ;
            
            private global::System.Data.DataColumn columnОТЧЕСТВО;
            
            private global::System.Data.DataColumn columnТЕЛЕФОН;
            
            private global::System.Data.DataColumn columnСЕРИЯ_НОМЕР;
            
            private global::System.Data.DataColumn columnПОЛ;
            
            private global::System.Data.DataColumn columnАДРЕС_РЕГИСТРАЦИИ;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnФАКТИЧЕСКИЙ_АДРЕС;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫDataTable() {
                this.TableName = "КЛИЕНТЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КЛИЕНТЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected КЛИЕНТЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_КЛИЕНТАColumn {
                get {
                    return this.columnНОМЕР_КЛИЕНТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФАМИЛИЯColumn {
                get {
                    return this.columnФАМИЛИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ИМЯColumn {
                get {
                    return this.columnИМЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТЧЕСТВОColumn {
                get {
                    return this.columnОТЧЕСТВО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТЕЛЕФОНColumn {
                get {
                    return this.columnТЕЛЕФОН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СЕРИЯ_НОМЕРColumn {
                get {
                    return this.columnСЕРИЯ_НОМЕР;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПОЛColumn {
                get {
                    return this.columnПОЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn АДРЕС_РЕГИСТРАЦИИColumn {
                get {
                    return this.columnАДРЕС_РЕГИСТРАЦИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФАКТИЧЕСКИЙ_АДРЕСColumn {
                get {
                    return this.columnФАКТИЧЕСКИЙ_АДРЕС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRow this[int index] {
                get {
                    return ((КЛИЕНТЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КЛИЕНТЫRowChangeEventHandler КЛИЕНТЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddКЛИЕНТЫRow(КЛИЕНТЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRow AddКЛИЕНТЫRow(int НОМЕР_КЛИЕНТА, string ФАМИЛИЯ, string ИМЯ, string ОТЧЕСТВО, string ТЕЛЕФОН, string СЕРИЯ_НОМЕР, string ПОЛ, string АДРЕС_РЕГИСТРАЦИИ, string EMAIL, string ФАКТИЧЕСКИЙ_АДРЕС) {
                КЛИЕНТЫRow rowКЛИЕНТЫRow = ((КЛИЕНТЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        НОМЕР_КЛИЕНТА,
                        ФАМИЛИЯ,
                        ИМЯ,
                        ОТЧЕСТВО,
                        ТЕЛЕФОН,
                        СЕРИЯ_НОМЕР,
                        ПОЛ,
                        АДРЕС_РЕГИСТРАЦИИ,
                        EMAIL,
                        ФАКТИЧЕСКИЙ_АДРЕС};
                rowКЛИЕНТЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКЛИЕНТЫRow);
                return rowКЛИЕНТЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRow FindByНОМЕР_КЛИЕНТА(int НОМЕР_КЛИЕНТА) {
                return ((КЛИЕНТЫRow)(this.Rows.Find(new object[] {
                            НОМЕР_КЛИЕНТА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КЛИЕНТЫDataTable cln = ((КЛИЕНТЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КЛИЕНТЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnНОМЕР_КЛИЕНТА = base.Columns["НОМЕР_КЛИЕНТА"];
                this.columnФАМИЛИЯ = base.Columns["ФАМИЛИЯ"];
                this.columnИМЯ = base.Columns["ИМЯ"];
                this.columnОТЧЕСТВО = base.Columns["ОТЧЕСТВО"];
                this.columnТЕЛЕФОН = base.Columns["ТЕЛЕФОН"];
                this.columnСЕРИЯ_НОМЕР = base.Columns["СЕРИЯ_НОМЕР"];
                this.columnПОЛ = base.Columns["ПОЛ"];
                this.columnАДРЕС_РЕГИСТРАЦИИ = base.Columns["АДРЕС_РЕГИСТРАЦИИ"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnФАКТИЧЕСКИЙ_АДРЕС = base.Columns["ФАКТИЧЕСКИЙ_АДРЕС"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnНОМЕР_КЛИЕНТА = new global::System.Data.DataColumn("НОМЕР_КЛИЕНТА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_КЛИЕНТА);
                this.columnФАМИЛИЯ = new global::System.Data.DataColumn("ФАМИЛИЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФАМИЛИЯ);
                this.columnИМЯ = new global::System.Data.DataColumn("ИМЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИМЯ);
                this.columnОТЧЕСТВО = new global::System.Data.DataColumn("ОТЧЕСТВО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТЧЕСТВО);
                this.columnТЕЛЕФОН = new global::System.Data.DataColumn("ТЕЛЕФОН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТЕЛЕФОН);
                this.columnСЕРИЯ_НОМЕР = new global::System.Data.DataColumn("СЕРИЯ_НОМЕР", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСЕРИЯ_НОМЕР);
                this.columnПОЛ = new global::System.Data.DataColumn("ПОЛ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПОЛ);
                this.columnАДРЕС_РЕГИСТРАЦИИ = new global::System.Data.DataColumn("АДРЕС_РЕГИСТРАЦИИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАДРЕС_РЕГИСТРАЦИИ);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnФАКТИЧЕСКИЙ_АДРЕС = new global::System.Data.DataColumn("ФАКТИЧЕСКИЙ_АДРЕС", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФАКТИЧЕСКИЙ_АДРЕС);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНОМЕР_КЛИЕНТА}, true));
                this.columnНОМЕР_КЛИЕНТА.AllowDBNull = false;
                this.columnНОМЕР_КЛИЕНТА.Unique = true;
                this.columnФАМИЛИЯ.MaxLength = 50;
                this.columnИМЯ.MaxLength = 30;
                this.columnОТЧЕСТВО.MaxLength = 30;
                this.columnТЕЛЕФОН.MaxLength = 50;
                this.columnСЕРИЯ_НОМЕР.MaxLength = 10;
                this.columnПОЛ.MaxLength = 1;
                this.columnАДРЕС_РЕГИСТРАЦИИ.MaxLength = 150;
                this.columnEMAIL.MaxLength = 50;
                this.columnФАКТИЧЕСКИЙ_АДРЕС.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRow NewКЛИЕНТЫRow() {
                return ((КЛИЕНТЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КЛИЕНТЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КЛИЕНТЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КЛИЕНТЫRowChanged != null)) {
                    this.КЛИЕНТЫRowChanged(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КЛИЕНТЫRowChanging != null)) {
                    this.КЛИЕНТЫRowChanging(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КЛИЕНТЫRowDeleted != null)) {
                    this.КЛИЕНТЫRowDeleted(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КЛИЕНТЫRowDeleting != null)) {
                    this.КЛИЕНТЫRowDeleting(this, new КЛИЕНТЫRowChangeEvent(((КЛИЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveКЛИЕНТЫRow(КЛИЕНТЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КЛИЕНТЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СОТРУДНИКИDataTable : global::System.Data.TypedTableBase<СОТРУДНИКИRow> {
            
            private global::System.Data.DataColumn columnНОМЕР_СОТРУДНИКА;
            
            private global::System.Data.DataColumn columnИМЯ;
            
            private global::System.Data.DataColumn columnОТЧЕСТВО;
            
            private global::System.Data.DataColumn columnФАМИЛИЯ;
            
            private global::System.Data.DataColumn columnДАТА_ПРИЁМА;
            
            private global::System.Data.DataColumn columnПОЛ;
            
            private global::System.Data.DataColumn columnТЕЛЕФОН;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnНОМЕР_ОТДЕЛА;
            
            private global::System.Data.DataColumn columnАДРЕС_РЕГИСТРАЦИИ;
            
            private global::System.Data.DataColumn columnФАКТИЧЕСКИЙ_АДРЕС;
            
            private global::System.Data.DataColumn columnСЕРИЯ_НОМЕР;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИDataTable() {
                this.TableName = "СОТРУДНИКИ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СОТРУДНИКИDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected СОТРУДНИКИDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_СОТРУДНИКАColumn {
                get {
                    return this.columnНОМЕР_СОТРУДНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ИМЯColumn {
                get {
                    return this.columnИМЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТЧЕСТВОColumn {
                get {
                    return this.columnОТЧЕСТВО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФАМИЛИЯColumn {
                get {
                    return this.columnФАМИЛИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ПРИЁМАColumn {
                get {
                    return this.columnДАТА_ПРИЁМА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПОЛColumn {
                get {
                    return this.columnПОЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТЕЛЕФОНColumn {
                get {
                    return this.columnТЕЛЕФОН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_ОТДЕЛАColumn {
                get {
                    return this.columnНОМЕР_ОТДЕЛА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn АДРЕС_РЕГИСТРАЦИИColumn {
                get {
                    return this.columnАДРЕС_РЕГИСТРАЦИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФАКТИЧЕСКИЙ_АДРЕСColumn {
                get {
                    return this.columnФАКТИЧЕСКИЙ_АДРЕС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СЕРИЯ_НОМЕРColumn {
                get {
                    return this.columnСЕРИЯ_НОМЕР;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRow this[int index] {
                get {
                    return ((СОТРУДНИКИRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОТРУДНИКИRowChangeEventHandler СОТРУДНИКИRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСОТРУДНИКИRow(СОТРУДНИКИRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRow AddСОТРУДНИКИRow(int НОМЕР_СОТРУДНИКА, string ИМЯ, string ОТЧЕСТВО, string ФАМИЛИЯ, System.DateTime ДАТА_ПРИЁМА, string ПОЛ, string ТЕЛЕФОН, string EMAIL, int НОМЕР_ОТДЕЛА, string АДРЕС_РЕГИСТРАЦИИ, string ФАКТИЧЕСКИЙ_АДРЕС, string СЕРИЯ_НОМЕР) {
                СОТРУДНИКИRow rowСОТРУДНИКИRow = ((СОТРУДНИКИRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        НОМЕР_СОТРУДНИКА,
                        ИМЯ,
                        ОТЧЕСТВО,
                        ФАМИЛИЯ,
                        ДАТА_ПРИЁМА,
                        ПОЛ,
                        ТЕЛЕФОН,
                        EMAIL,
                        НОМЕР_ОТДЕЛА,
                        АДРЕС_РЕГИСТРАЦИИ,
                        ФАКТИЧЕСКИЙ_АДРЕС,
                        СЕРИЯ_НОМЕР};
                rowСОТРУДНИКИRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСОТРУДНИКИRow);
                return rowСОТРУДНИКИRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRow FindByНОМЕР_СОТРУДНИКА(int НОМЕР_СОТРУДНИКА) {
                return ((СОТРУДНИКИRow)(this.Rows.Find(new object[] {
                            НОМЕР_СОТРУДНИКА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СОТРУДНИКИDataTable cln = ((СОТРУДНИКИDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СОТРУДНИКИDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnНОМЕР_СОТРУДНИКА = base.Columns["НОМЕР_СОТРУДНИКА"];
                this.columnИМЯ = base.Columns["ИМЯ"];
                this.columnОТЧЕСТВО = base.Columns["ОТЧЕСТВО"];
                this.columnФАМИЛИЯ = base.Columns["ФАМИЛИЯ"];
                this.columnДАТА_ПРИЁМА = base.Columns["ДАТА_ПРИЁМА"];
                this.columnПОЛ = base.Columns["ПОЛ"];
                this.columnТЕЛЕФОН = base.Columns["ТЕЛЕФОН"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnНОМЕР_ОТДЕЛА = base.Columns["НОМЕР_ОТДЕЛА"];
                this.columnАДРЕС_РЕГИСТРАЦИИ = base.Columns["АДРЕС_РЕГИСТРАЦИИ"];
                this.columnФАКТИЧЕСКИЙ_АДРЕС = base.Columns["ФАКТИЧЕСКИЙ_АДРЕС"];
                this.columnСЕРИЯ_НОМЕР = base.Columns["СЕРИЯ_НОМЕР"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnНОМЕР_СОТРУДНИКА = new global::System.Data.DataColumn("НОМЕР_СОТРУДНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_СОТРУДНИКА);
                this.columnИМЯ = new global::System.Data.DataColumn("ИМЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИМЯ);
                this.columnОТЧЕСТВО = new global::System.Data.DataColumn("ОТЧЕСТВО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТЧЕСТВО);
                this.columnФАМИЛИЯ = new global::System.Data.DataColumn("ФАМИЛИЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФАМИЛИЯ);
                this.columnДАТА_ПРИЁМА = new global::System.Data.DataColumn("ДАТА_ПРИЁМА", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ПРИЁМА);
                this.columnПОЛ = new global::System.Data.DataColumn("ПОЛ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПОЛ);
                this.columnТЕЛЕФОН = new global::System.Data.DataColumn("ТЕЛЕФОН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТЕЛЕФОН);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnНОМЕР_ОТДЕЛА = new global::System.Data.DataColumn("НОМЕР_ОТДЕЛА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_ОТДЕЛА);
                this.columnАДРЕС_РЕГИСТРАЦИИ = new global::System.Data.DataColumn("АДРЕС_РЕГИСТРАЦИИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАДРЕС_РЕГИСТРАЦИИ);
                this.columnФАКТИЧЕСКИЙ_АДРЕС = new global::System.Data.DataColumn("ФАКТИЧЕСКИЙ_АДРЕС", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФАКТИЧЕСКИЙ_АДРЕС);
                this.columnСЕРИЯ_НОМЕР = new global::System.Data.DataColumn("СЕРИЯ_НОМЕР", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСЕРИЯ_НОМЕР);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНОМЕР_СОТРУДНИКА}, true));
                this.columnНОМЕР_СОТРУДНИКА.AllowDBNull = false;
                this.columnНОМЕР_СОТРУДНИКА.Unique = true;
                this.columnИМЯ.MaxLength = 40;
                this.columnОТЧЕСТВО.MaxLength = 40;
                this.columnФАМИЛИЯ.MaxLength = 40;
                this.columnПОЛ.MaxLength = 1;
                this.columnТЕЛЕФОН.MaxLength = 11;
                this.columnEMAIL.MaxLength = 50;
                this.columnАДРЕС_РЕГИСТРАЦИИ.MaxLength = 150;
                this.columnФАКТИЧЕСКИЙ_АДРЕС.MaxLength = 150;
                this.columnСЕРИЯ_НОМЕР.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRow NewСОТРУДНИКИRow() {
                return ((СОТРУДНИКИRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СОТРУДНИКИRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СОТРУДНИКИRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СОТРУДНИКИRowChanged != null)) {
                    this.СОТРУДНИКИRowChanged(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СОТРУДНИКИRowChanging != null)) {
                    this.СОТРУДНИКИRowChanging(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СОТРУДНИКИRowDeleted != null)) {
                    this.СОТРУДНИКИRowDeleted(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СОТРУДНИКИRowDeleting != null)) {
                    this.СОТРУДНИКИRowDeleting(this, new СОТРУДНИКИRowChangeEvent(((СОТРУДНИКИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСОТРУДНИКИRow(СОТРУДНИКИRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СОТРУДНИКИDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СПЕЦИАЛЬНОСТИDataTable : global::System.Data.TypedTableBase<СПЕЦИАЛЬНОСТИRow> {
            
            private global::System.Data.DataColumn columnКОД_СПЕЦИАЛЬНОСТИ;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnМИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СПЕЦИАЛЬНОСТИDataTable() {
                this.TableName = "СПЕЦИАЛЬНОСТИ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СПЕЦИАЛЬНОСТИDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected СПЕЦИАЛЬНОСТИDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СПЕЦИАЛЬНОСТИColumn {
                get {
                    return this.columnКОД_СПЕЦИАЛЬНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАДColumn {
                get {
                    return this.columnМИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СПЕЦИАЛЬНОСТИRow this[int index] {
                get {
                    return ((СПЕЦИАЛЬНОСТИRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СПЕЦИАЛЬНОСТИRowChangeEventHandler СПЕЦИАЛЬНОСТИRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СПЕЦИАЛЬНОСТИRowChangeEventHandler СПЕЦИАЛЬНОСТИRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СПЕЦИАЛЬНОСТИRowChangeEventHandler СПЕЦИАЛЬНОСТИRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СПЕЦИАЛЬНОСТИRowChangeEventHandler СПЕЦИАЛЬНОСТИRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСПЕЦИАЛЬНОСТИRow(СПЕЦИАЛЬНОСТИRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СПЕЦИАЛЬНОСТИRow AddСПЕЦИАЛЬНОСТИRow(string КОД_СПЕЦИАЛЬНОСТИ, string НАИМЕНОВАНИЕ, decimal МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД) {
                СПЕЦИАЛЬНОСТИRow rowСПЕЦИАЛЬНОСТИRow = ((СПЕЦИАЛЬНОСТИRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_СПЕЦИАЛЬНОСТИ,
                        НАИМЕНОВАНИЕ,
                        МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД};
                rowСПЕЦИАЛЬНОСТИRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСПЕЦИАЛЬНОСТИRow);
                return rowСПЕЦИАЛЬНОСТИRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СПЕЦИАЛЬНОСТИRow FindByКОД_СПЕЦИАЛЬНОСТИ(string КОД_СПЕЦИАЛЬНОСТИ) {
                return ((СПЕЦИАЛЬНОСТИRow)(this.Rows.Find(new object[] {
                            КОД_СПЕЦИАЛЬНОСТИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СПЕЦИАЛЬНОСТИDataTable cln = ((СПЕЦИАЛЬНОСТИDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СПЕЦИАЛЬНОСТИDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_СПЕЦИАЛЬНОСТИ = base.Columns["КОД_СПЕЦИАЛЬНОСТИ"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnМИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД = base.Columns["МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_СПЕЦИАЛЬНОСТИ = new global::System.Data.DataColumn("КОД_СПЕЦИАЛЬНОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СПЕЦИАЛЬНОСТИ);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnМИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД = new global::System.Data.DataColumn("МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_СПЕЦИАЛЬНОСТИ}, true));
                this.columnКОД_СПЕЦИАЛЬНОСТИ.AllowDBNull = false;
                this.columnКОД_СПЕЦИАЛЬНОСТИ.Unique = true;
                this.columnКОД_СПЕЦИАЛЬНОСТИ.MaxLength = 5;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СПЕЦИАЛЬНОСТИRow NewСПЕЦИАЛЬНОСТИRow() {
                return ((СПЕЦИАЛЬНОСТИRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СПЕЦИАЛЬНОСТИRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СПЕЦИАЛЬНОСТИRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СПЕЦИАЛЬНОСТИRowChanged != null)) {
                    this.СПЕЦИАЛЬНОСТИRowChanged(this, new СПЕЦИАЛЬНОСТИRowChangeEvent(((СПЕЦИАЛЬНОСТИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СПЕЦИАЛЬНОСТИRowChanging != null)) {
                    this.СПЕЦИАЛЬНОСТИRowChanging(this, new СПЕЦИАЛЬНОСТИRowChangeEvent(((СПЕЦИАЛЬНОСТИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СПЕЦИАЛЬНОСТИRowDeleted != null)) {
                    this.СПЕЦИАЛЬНОСТИRowDeleted(this, new СПЕЦИАЛЬНОСТИRowChangeEvent(((СПЕЦИАЛЬНОСТИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СПЕЦИАЛЬНОСТИRowDeleting != null)) {
                    this.СПЕЦИАЛЬНОСТИRowDeleting(this, new СПЕЦИАЛЬНОСТИRowChangeEvent(((СПЕЦИАЛЬНОСТИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСПЕЦИАЛЬНОСТИRow(СПЕЦИАЛЬНОСТИRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СПЕЦИАЛЬНОСТИDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СЧЕТАDataTable : global::System.Data.TypedTableBase<СЧЕТАRow> {
            
            private global::System.Data.DataColumn columnНОМЕР_СЧЁТА;
            
            private global::System.Data.DataColumn columnНОМЕР_КЛИЕНТА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАDataTable() {
                this.TableName = "СЧЕТА";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СЧЕТАDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected СЧЕТАDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_СЧЁТАColumn {
                get {
                    return this.columnНОМЕР_СЧЁТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_КЛИЕНТАColumn {
                get {
                    return this.columnНОМЕР_КЛИЕНТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow this[int index] {
                get {
                    return ((СЧЕТАRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СЧЕТАRowChangeEventHandler СЧЕТАRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СЧЕТАRowChangeEventHandler СЧЕТАRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СЧЕТАRowChangeEventHandler СЧЕТАRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СЧЕТАRowChangeEventHandler СЧЕТАRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСЧЕТАRow(СЧЕТАRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow AddСЧЕТАRow(string НОМЕР_СЧЁТА, КЛИЕНТЫRow parentКЛИЕНТЫRowByFK_СЧЕТА_КЛИЕНТЫ) {
                СЧЕТАRow rowСЧЕТАRow = ((СЧЕТАRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        НОМЕР_СЧЁТА,
                        null};
                if ((parentКЛИЕНТЫRowByFK_СЧЕТА_КЛИЕНТЫ != null)) {
                    columnValuesArray[1] = parentКЛИЕНТЫRowByFK_СЧЕТА_КЛИЕНТЫ[0];
                }
                rowСЧЕТАRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСЧЕТАRow);
                return rowСЧЕТАRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow FindByНОМЕР_СЧЁТА(string НОМЕР_СЧЁТА) {
                return ((СЧЕТАRow)(this.Rows.Find(new object[] {
                            НОМЕР_СЧЁТА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СЧЕТАDataTable cln = ((СЧЕТАDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СЧЕТАDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnНОМЕР_СЧЁТА = base.Columns["НОМЕР_СЧЁТА"];
                this.columnНОМЕР_КЛИЕНТА = base.Columns["НОМЕР_КЛИЕНТА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnНОМЕР_СЧЁТА = new global::System.Data.DataColumn("НОМЕР_СЧЁТА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_СЧЁТА);
                this.columnНОМЕР_КЛИЕНТА = new global::System.Data.DataColumn("НОМЕР_КЛИЕНТА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_КЛИЕНТА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНОМЕР_СЧЁТА}, true));
                this.columnНОМЕР_СЧЁТА.AllowDBNull = false;
                this.columnНОМЕР_СЧЁТА.Unique = true;
                this.columnНОМЕР_СЧЁТА.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow NewСЧЕТАRow() {
                return ((СЧЕТАRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СЧЕТАRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СЧЕТАRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СЧЕТАRowChanged != null)) {
                    this.СЧЕТАRowChanged(this, new СЧЕТАRowChangeEvent(((СЧЕТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СЧЕТАRowChanging != null)) {
                    this.СЧЕТАRowChanging(this, new СЧЕТАRowChangeEvent(((СЧЕТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СЧЕТАRowDeleted != null)) {
                    this.СЧЕТАRowDeleted(this, new СЧЕТАRowChangeEvent(((СЧЕТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СЧЕТАRowDeleting != null)) {
                    this.СЧЕТАRowDeleting(this, new СЧЕТАRowChangeEvent(((СЧЕТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСЧЕТАRow(СЧЕТАRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СЧЕТАDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class БАНКОВСКИЕ_УСЛУГИRow : global::System.Data.DataRow {
            
            private БАНКОВСКИЕ_УСЛУГИDataTable tableБАНКОВСКИЕ_УСЛУГИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal БАНКОВСКИЕ_УСЛУГИRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableБАНКОВСКИЕ_УСЛУГИ = ((БАНКОВСКИЕ_УСЛУГИDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_УСЛУГИ {
                get {
                    return ((int)(this[this.tableБАНКОВСКИЕ_УСЛУГИ.НОМЕР_УСЛУГИColumn]));
                }
                set {
                    this[this.tableБАНКОВСКИЕ_УСЛУГИ.НОМЕР_УСЛУГИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_УСЛУГИ {
                get {
                    try {
                        return ((string)(this[this.tableБАНКОВСКИЕ_УСЛУГИ.КОД_УСЛУГИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_УСЛУГИ\' в таблице \'БАНКОВСКИЕ УСЛУГИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableБАНКОВСКИЕ_УСЛУГИ.КОД_УСЛУГИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАЗВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableБАНКОВСКИЕ_УСЛУГИ.НАЗВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАЗВАНИЕ\' в таблице \'БАНКОВСКИЕ УСЛУГИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableБАНКОВСКИЕ_УСЛУГИ.НАЗВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВRow ВИДЫ_ВКЛАДОВRow {
                get {
                    return ((ВИДЫ_ВКЛАДОВRow)(this.GetParentRow(this.Table.ParentRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТRow ВИДЫ_ДЕБЕТОВЫХ_КАРТRow {
                get {
                    return ((ВИДЫ_ДЕБЕТОВЫХ_КАРТRow)(this.GetParentRow(this.Table.ParentRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВRow ВИДЫ_КРЕДИТОВRow {
                get {
                    return ((ВИДЫ_КРЕДИТОВRow)(this.GetParentRow(this.Table.ParentRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_УСЛУГИNull() {
                return this.IsNull(this.tableБАНКОВСКИЕ_УСЛУГИ.КОД_УСЛУГИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_УСЛУГИNull() {
                this[this.tableБАНКОВСКИЕ_УСЛУГИ.КОД_УСЛУГИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАЗВАНИЕNull() {
                return this.IsNull(this.tableБАНКОВСКИЕ_УСЛУГИ.НАЗВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАЗВАНИЕNull() {
                this[this.tableБАНКОВСКИЕ_УСЛУГИ.НАЗВАНИЕColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ВИДЫ_ВКЛАДОВRow : global::System.Data.DataRow {
            
            private ВИДЫ_ВКЛАДОВDataTable tableВИДЫ_ВКЛАДОВ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_ВКЛАДОВRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВИДЫ_ВКЛАДОВ = ((ВИДЫ_ВКЛАДОВDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_УСЛУГИ {
                get {
                    return ((string)(this[this.tableВИДЫ_ВКЛАДОВ.КОД_УСЛУГИColumn]));
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.КОД_УСЛУГИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal МИНИМАЛЬНАЯ_СУММА {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНАЯ_СУММАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МИНИМАЛЬНАЯ_СУММА\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНАЯ_СУММАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal _МАКСИМАЛЬНАЯ_СУММА_ {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_ВКЛАДОВ._МАКСИМАЛЬНАЯ_СУММА_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МАКСИМАЛЬНАЯ_СУММА\\\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ._МАКСИМАЛЬНАЯ_СУММА_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal НЕСНИЖАЕМЫЙ_ОСТАТОК {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_ВКЛАДОВ.НЕСНИЖАЕМЫЙ_ОСТАТОКColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НЕСНИЖАЕМЫЙ_ОСТАТОК\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.НЕСНИЖАЕМЫЙ_ОСТАТОКColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int СРОК_В_НЕДЕЛЯХ {
                get {
                    try {
                        return ((int)(this[this.tableВИДЫ_ВКЛАДОВ.СРОК_В_НЕДЕЛЯХColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СРОК_В_НЕДЕЛЯХ\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.СРОК_В_НЕДЕЛЯХColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ПРОЦЕНТЫ {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_ВКЛАДОВ.ПРОЦЕНТЫColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПРОЦЕНТЫ\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.ПРОЦЕНТЫColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal С_КАПИТАЛИЗАЦИЕЙ {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_ВКЛАДОВ.С_КАПИТАЛИЗАЦИЕЙColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'С_КАПИТАЛИЗАЦИЕЙ\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.С_КАПИТАЛИЗАЦИЕЙColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int МИНИМАЛЬНЫЙ_ВОЗРАСТ {
                get {
                    try {
                        return ((int)(this[this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МИНИМАЛЬНЫЙ_ВОЗРАСТ\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ВАЛЮТА {
                get {
                    try {
                        return ((string)(this[this.tableВИДЫ_ВКЛАДОВ.ВАЛЮТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ВАЛЮТА\' в таблице \'ВИДЫ_ВКЛАДОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ВКЛАДОВ.ВАЛЮТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМИНИМАЛЬНАЯ_СУММАNull() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНАЯ_СУММАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМИНИМАЛЬНАЯ_СУММАNull() {
                this[this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНАЯ_СУММАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_МАКСИМАЛЬНАЯ_СУММА_Null() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ._МАКСИМАЛЬНАЯ_СУММА_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_МАКСИМАЛЬНАЯ_СУММА_Null() {
                this[this.tableВИДЫ_ВКЛАДОВ._МАКСИМАЛЬНАЯ_СУММА_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНЕСНИЖАЕМЫЙ_ОСТАТОКNull() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ.НЕСНИЖАЕМЫЙ_ОСТАТОКColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНЕСНИЖАЕМЫЙ_ОСТАТОКNull() {
                this[this.tableВИДЫ_ВКЛАДОВ.НЕСНИЖАЕМЫЙ_ОСТАТОКColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСРОК_В_НЕДЕЛЯХNull() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ.СРОК_В_НЕДЕЛЯХColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСРОК_В_НЕДЕЛЯХNull() {
                this[this.tableВИДЫ_ВКЛАДОВ.СРОК_В_НЕДЕЛЯХColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПРОЦЕНТЫNull() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ.ПРОЦЕНТЫColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПРОЦЕНТЫNull() {
                this[this.tableВИДЫ_ВКЛАДОВ.ПРОЦЕНТЫColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsС_КАПИТАЛИЗАЦИЕЙNull() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ.С_КАПИТАЛИЗАЦИЕЙColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetС_КАПИТАЛИЗАЦИЕЙNull() {
                this[this.tableВИДЫ_ВКЛАДОВ.С_КАПИТАЛИЗАЦИЕЙColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМИНИМАЛЬНЫЙ_ВОЗРАСТNull() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМИНИМАЛЬНЫЙ_ВОЗРАСТNull() {
                this[this.tableВИДЫ_ВКЛАДОВ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsВАЛЮТАNull() {
                return this.IsNull(this.tableВИДЫ_ВКЛАДОВ.ВАЛЮТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetВАЛЮТАNull() {
                this[this.tableВИДЫ_ВКЛАДОВ.ВАЛЮТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow[] GetБАНКОВСКИЕ_УСЛУГИRows() {
                if ((this.Table.ChildRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ1"] == null)) {
                    return new БАНКОВСКИЕ_УСЛУГИRow[0];
                }
                else {
                    return ((БАНКОВСКИЕ_УСЛУГИRow[])(base.GetChildRows(this.Table.ChildRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ВИДЫ_ДЕБЕТОВЫХ_КАРТRow : global::System.Data.DataRow {
            
            private ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable tableВИДЫ_ДЕБЕТОВЫХ_КАРТ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_ДЕБЕТОВЫХ_КАРТRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ = ((ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_УСЛУГИ {
                get {
                    return ((string)(this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.КОД_УСЛУГИColumn]));
                }
                set {
                    this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.КОД_УСЛУГИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ОБСЛУЖИВАНИЕ_В_МЕСЯЦ {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.ОБСЛУЖИВАНИЕ_В_МЕСЯЦColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОБСЛУЖИВАНИЕ_В_МЕСЯЦ\' в таблице \'ВИДЫ_ДЕБЕТОВЫХ_КАРТ\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.ОБСЛУЖИВАНИЕ_В_МЕСЯЦColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int МИНИМАЛЬНЫЙ_ВОЗРАСТ {
                get {
                    try {
                        return ((int)(this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МИНИМАЛЬНЫЙ_ВОЗРАСТ\' в таблице \'ВИДЫ_ДЕБЕТОВЫХ_КАРТ\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int МАКСИМАЛЬНЫЙ_ВОЗРАСТ {
                get {
                    try {
                        return ((int)(this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МАКСИМАЛЬНЫЙ_ВОЗРАСТColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МАКСИМАЛЬНЫЙ_ВОЗРАСТ\' в таблице \'ВИДЫ_ДЕБЕТОВЫХ_КАРТ\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МАКСИМАЛЬНЫЙ_ВОЗРАСТColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal КЭШБЭК {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.КЭШБЭКColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КЭШБЭК\' в таблице \'ВИДЫ_ДЕБЕТОВЫХ_КАРТ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.КЭШБЭКColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОБСЛУЖИВАНИЕ_В_МЕСЯЦNull() {
                return this.IsNull(this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.ОБСЛУЖИВАНИЕ_В_МЕСЯЦColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОБСЛУЖИВАНИЕ_В_МЕСЯЦNull() {
                this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.ОБСЛУЖИВАНИЕ_В_МЕСЯЦColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМИНИМАЛЬНЫЙ_ВОЗРАСТNull() {
                return this.IsNull(this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМИНИМАЛЬНЫЙ_ВОЗРАСТNull() {
                this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МИНИМАЛЬНЫЙ_ВОЗРАСТColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМАКСИМАЛЬНЫЙ_ВОЗРАСТNull() {
                return this.IsNull(this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МАКСИМАЛЬНЫЙ_ВОЗРАСТColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМАКСИМАЛЬНЫЙ_ВОЗРАСТNull() {
                this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.МАКСИМАЛЬНЫЙ_ВОЗРАСТColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКЭШБЭКNull() {
                return this.IsNull(this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.КЭШБЭКColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКЭШБЭКNull() {
                this[this.tableВИДЫ_ДЕБЕТОВЫХ_КАРТ.КЭШБЭКColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow[] GetБАНКОВСКИЕ_УСЛУГИRows() {
                if ((this.Table.ChildRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ"] == null)) {
                    return new БАНКОВСКИЕ_УСЛУГИRow[0];
                }
                else {
                    return ((БАНКОВСКИЕ_УСЛУГИRow[])(base.GetChildRows(this.Table.ChildRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ДЕБЕТОВЫХ_КАРТ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ВИДЫ_КРЕДИТОВRow : global::System.Data.DataRow {
            
            private ВИДЫ_КРЕДИТОВDataTable tableВИДЫ_КРЕДИТОВ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_КРЕДИТОВRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВИДЫ_КРЕДИТОВ = ((ВИДЫ_КРЕДИТОВDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_УСЛУГИ {
                get {
                    return ((string)(this[this.tableВИДЫ_КРЕДИТОВ.КОД_УСЛУГИColumn]));
                }
                set {
                    this[this.tableВИДЫ_КРЕДИТОВ.КОД_УСЛУГИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА {
                get {
                    try {
                        return ((int)(this[this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА\' в таблице \'ВИДЫ_КРЕДИТОВ\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА {
                get {
                    try {
                        return ((int)(this[this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА\' в таблице \'ВИДЫ_КРЕДИТОВ\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ПРОЦЕНТЫ {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_КРЕДИТОВ.ПРОЦЕНТЫColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПРОЦЕНТЫ\' в таблице \'ВИДЫ_КРЕДИТОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_КРЕДИТОВ.ПРОЦЕНТЫColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal МИНИМАЛЬНАЯ_СУММА {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНАЯ_СУММАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МИНИМАЛЬНАЯ_СУММА\' в таблице \'ВИДЫ_КРЕДИТОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНАЯ_СУММАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal МАКСИМАЛЬНАЯ_СУММА {
                get {
                    try {
                        return ((decimal)(this[this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНАЯ_СУММАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МАКСИМАЛЬНАЯ_СУММА\' в таблице \'ВИДЫ_КРЕДИТОВ\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНАЯ_СУММАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМИНИМАЛЬНЫЙ_СРОК_КРЕДИТАNull() {
                return this.IsNull(this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМИНИМАЛЬНЫЙ_СРОК_КРЕДИТАNull() {
                this[this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМАКСИМАЛЬНЫЙ_СРОК_КРЕДИТАNull() {
                return this.IsNull(this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМАКСИМАЛЬНЫЙ_СРОК_КРЕДИТАNull() {
                this[this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПРОЦЕНТЫNull() {
                return this.IsNull(this.tableВИДЫ_КРЕДИТОВ.ПРОЦЕНТЫColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПРОЦЕНТЫNull() {
                this[this.tableВИДЫ_КРЕДИТОВ.ПРОЦЕНТЫColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМИНИМАЛЬНАЯ_СУММАNull() {
                return this.IsNull(this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНАЯ_СУММАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМИНИМАЛЬНАЯ_СУММАNull() {
                this[this.tableВИДЫ_КРЕДИТОВ.МИНИМАЛЬНАЯ_СУММАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМАКСИМАЛЬНАЯ_СУММАNull() {
                return this.IsNull(this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНАЯ_СУММАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМАКСИМАЛЬНАЯ_СУММАNull() {
                this[this.tableВИДЫ_КРЕДИТОВ.МАКСИМАЛЬНАЯ_СУММАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow[] GetБАНКОВСКИЕ_УСЛУГИRows() {
                if ((this.Table.ChildRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ"] == null)) {
                    return new БАНКОВСКИЕ_УСЛУГИRow[0];
                }
                else {
                    return ((БАНКОВСКИЕ_УСЛУГИRow[])(base.GetChildRows(this.Table.ChildRelations["FK_БАНКОВСКИЕ УСЛУГИ_ВИДЫ_ВКЛАДОВ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ВИДЫ_ОПЕРАЦИЙRow : global::System.Data.DataRow {
            
            private ВИДЫ_ОПЕРАЦИЙDataTable tableВИДЫ_ОПЕРАЦИЙ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВИДЫ_ОПЕРАЦИЙRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВИДЫ_ОПЕРАЦИЙ = ((ВИДЫ_ОПЕРАЦИЙDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_ОПЕРАЦИИ {
                get {
                    return ((string)(this[this.tableВИДЫ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn]));
                }
                set {
                    this[this.tableВИДЫ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ВИД_ОПЕРАЦИИ {
                get {
                    try {
                        return ((string)(this[this.tableВИДЫ_ОПЕРАЦИЙ.ВИД_ОПЕРАЦИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ВИД_ОПЕРАЦИИ\' в таблице \'ВИДЫ_ОПЕРАЦИЙ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВИДЫ_ОПЕРАЦИЙ.ВИД_ОПЕРАЦИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsВИД_ОПЕРАЦИИNull() {
                return this.IsNull(this.tableВИДЫ_ОПЕРАЦИЙ.ВИД_ОПЕРАЦИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetВИД_ОПЕРАЦИИNull() {
                this[this.tableВИДЫ_ОПЕРАЦИЙ.ВИД_ОПЕРАЦИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRow[] GetИСТОРИЯ_ОПЕРАЦИЙRows() {
                if ((this.Table.ChildRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ"] == null)) {
                    return new ИСТОРИЯ_ОПЕРАЦИЙRow[0];
                }
                else {
                    return ((ИСТОРИЯ_ОПЕРАЦИЙRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ДАННЫЕ_ВХОДАRow : global::System.Data.DataRow {
            
            private ДАННЫЕ_ВХОДАDataTable tableДАННЫЕ_ВХОДА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ДАННЫЕ_ВХОДАRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДАННЫЕ_ВХОДА = ((ДАННЫЕ_ВХОДАDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOGIN {
                get {
                    return ((string)(this[this.tableДАННЫЕ_ВХОДА.LOGINColumn]));
                }
                set {
                    this[this.tableДАННЫЕ_ВХОДА.LOGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ПАРОЛЬ {
                get {
                    try {
                        return ((string)(this[this.tableДАННЫЕ_ВХОДА.ПАРОЛЬColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПАРОЛЬ\' в таблице \'ДАННЫЕ_ВХОДА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДАННЫЕ_ВХОДА.ПАРОЛЬColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_СОТРУДНИКА {
                get {
                    try {
                        return ((int)(this[this.tableДАННЫЕ_ВХОДА.НОМЕР_СОТРУДНИКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_СОТРУДНИКА\' в таблице \'ДАННЫЕ_ВХОДА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДАННЫЕ_ВХОДА.НОМЕР_СОТРУДНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRow СОТРУДНИКИRow {
                get {
                    return ((СОТРУДНИКИRow)(this.GetParentRow(this.Table.ParentRelations["FK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПАРОЛЬNull() {
                return this.IsNull(this.tableДАННЫЕ_ВХОДА.ПАРОЛЬColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПАРОЛЬNull() {
                this[this.tableДАННЫЕ_ВХОДА.ПАРОЛЬColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_СОТРУДНИКАNull() {
                return this.IsNull(this.tableДАННЫЕ_ВХОДА.НОМЕР_СОТРУДНИКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_СОТРУДНИКАNull() {
                this[this.tableДАННЫЕ_ВХОДА.НОМЕР_СОТРУДНИКАColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ДОГОВОРЫ_КЛИЕНТОВRow : global::System.Data.DataRow {
            
            private ДОГОВОРЫ_КЛИЕНТОВDataTable tableДОГОВОРЫ_КЛИЕНТОВ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ДОГОВОРЫ_КЛИЕНТОВRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДОГОВОРЫ_КЛИЕНТОВ = ((ДОГОВОРЫ_КЛИЕНТОВDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_ДОГОВОРА {
                get {
                    return ((int)(this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_ДОГОВОРАColumn]));
                }
                set {
                    this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_ДОГОВОРАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_КЛИЕНТА {
                get {
                    try {
                        return ((int)(this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_КЛИЕНТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_КЛИЕНТА\' в таблице \'ДОГОВОРЫ_КЛИЕНТОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_КЛИЕНТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ЗАКЛЮЧЕНИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ЗАКЛЮЧЕНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ЗАКЛЮЧЕНИЯ\' в таблице \'ДОГОВОРЫ_КЛИЕНТОВ\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ЗАКЛЮЧЕНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ОКОНЧАНИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ОКОНЧАНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ОКОНЧАНИЯ\' в таблице \'ДОГОВОРЫ_КЛИЕНТОВ\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ОКОНЧАНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_УСЛУГИ {
                get {
                    try {
                        return ((string)(this[this.tableДОГОВОРЫ_КЛИЕНТОВ.КОД_УСЛУГИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_УСЛУГИ\' в таблице \'ДОГОВОРЫ_КЛИЕНТОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДОГОВОРЫ_КЛИЕНТОВ.КОД_УСЛУГИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НОМЕР_СЧЁТА {
                get {
                    try {
                        return ((string)(this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СЧЁТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_СЧЁТА\' в таблице \'ДОГОВОРЫ_КЛИЕНТОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СЧЁТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_СОТРУДНИКА {
                get {
                    try {
                        return ((int)(this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СОТРУДНИКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_СОТРУДНИКА\' в таблице \'ДОГОВОРЫ_КЛИЕНТОВ\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СОТРУДНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRow КЛИЕНТЫRow {
                get {
                    return ((КЛИЕНТЫRow)(this.GetParentRow(this.Table.ParentRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRow СОТРУДНИКИRow {
                get {
                    return ((СОТРУДНИКИRow)(this.GetParentRow(this.Table.ParentRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow СЧЕТАRow {
                get {
                    return ((СЧЕТАRow)(this.GetParentRow(this.Table.ParentRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_КЛИЕНТАNull() {
                return this.IsNull(this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_КЛИЕНТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_КЛИЕНТАNull() {
                this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_КЛИЕНТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ЗАКЛЮЧЕНИЯNull() {
                return this.IsNull(this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ЗАКЛЮЧЕНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ЗАКЛЮЧЕНИЯNull() {
                this[this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ЗАКЛЮЧЕНИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ОКОНЧАНИЯNull() {
                return this.IsNull(this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ОКОНЧАНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ОКОНЧАНИЯNull() {
                this[this.tableДОГОВОРЫ_КЛИЕНТОВ.ДАТА_ОКОНЧАНИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_УСЛУГИNull() {
                return this.IsNull(this.tableДОГОВОРЫ_КЛИЕНТОВ.КОД_УСЛУГИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_УСЛУГИNull() {
                this[this.tableДОГОВОРЫ_КЛИЕНТОВ.КОД_УСЛУГИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_СЧЁТАNull() {
                return this.IsNull(this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СЧЁТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_СЧЁТАNull() {
                this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СЧЁТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_СОТРУДНИКАNull() {
                return this.IsNull(this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СОТРУДНИКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_СОТРУДНИКАNull() {
                this[this.tableДОГОВОРЫ_КЛИЕНТОВ.НОМЕР_СОТРУДНИКАColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ИСТОРИЯ_ОПЕРАЦИЙRow : global::System.Data.DataRow {
            
            private ИСТОРИЯ_ОПЕРАЦИЙDataTable tableИСТОРИЯ_ОПЕРАЦИЙ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ИСТОРИЯ_ОПЕРАЦИЙRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableИСТОРИЯ_ОПЕРАЦИЙ = ((ИСТОРИЯ_ОПЕРАЦИЙDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_ОПЕРАЦИИ {
                get {
                    return ((int)(this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.НОМЕР_ОПЕРАЦИИColumn]));
                }
                set {
                    this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.НОМЕР_ОПЕРАЦИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_ОПЕРАЦИИ {
                get {
                    try {
                        return ((string)(this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ОПЕРАЦИИ\' в таблице \'ИСТОРИЯ_ОПЕРАЦИЙ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НОМЕР_СЧЁТА {
                get {
                    try {
                        return ((string)(this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.НОМЕР_СЧЁТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_СЧЁТА\' в таблице \'ИСТОРИЯ_ОПЕРАЦИЙ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.НОМЕР_СЧЁТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КАК_СОВЕРШЕНО {
                get {
                    try {
                        return ((string)(this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.КАК_СОВЕРШЕНОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КАК_СОВЕРШЕНО\' в таблице \'ИСТОРИЯ_ОПЕРАЦИЙ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.КАК_СОВЕРШЕНОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal СУММА_ОПЕРАЦИИ {
                get {
                    try {
                        return ((decimal)(this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.СУММА_ОПЕРАЦИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СУММА_ОПЕРАЦИИ\' в таблице \'ИСТОРИЯ_ОПЕРАЦИЙ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.СУММА_ОПЕРАЦИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙRow ВИДЫ_ОПЕРАЦИЙRow {
                get {
                    return ((ВИДЫ_ОПЕРАЦИЙRow)(this.GetParentRow(this.Table.ParentRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_ВИДЫ_ОПЕРАЦИЙ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow СЧЕТАRow {
                get {
                    return ((СЧЕТАRow)(this.GetParentRow(this.Table.ParentRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ОПЕРАЦИИNull() {
                return this.IsNull(this.tableИСТОРИЯ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ОПЕРАЦИИNull() {
                this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.КОД_ОПЕРАЦИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_СЧЁТАNull() {
                return this.IsNull(this.tableИСТОРИЯ_ОПЕРАЦИЙ.НОМЕР_СЧЁТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_СЧЁТАNull() {
                this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.НОМЕР_СЧЁТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКАК_СОВЕРШЕНОNull() {
                return this.IsNull(this.tableИСТОРИЯ_ОПЕРАЦИЙ.КАК_СОВЕРШЕНОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКАК_СОВЕРШЕНОNull() {
                this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.КАК_СОВЕРШЕНОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСУММА_ОПЕРАЦИИNull() {
                return this.IsNull(this.tableИСТОРИЯ_ОПЕРАЦИЙ.СУММА_ОПЕРАЦИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСУММА_ОПЕРАЦИИNull() {
                this[this.tableИСТОРИЯ_ОПЕРАЦИЙ.СУММА_ОПЕРАЦИИColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КЛИЕНТЫRow : global::System.Data.DataRow {
            
            private КЛИЕНТЫDataTable tableКЛИЕНТЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КЛИЕНТЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКЛИЕНТЫ = ((КЛИЕНТЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_КЛИЕНТА {
                get {
                    return ((int)(this[this.tableКЛИЕНТЫ.НОМЕР_КЛИЕНТАColumn]));
                }
                set {
                    this[this.tableКЛИЕНТЫ.НОМЕР_КЛИЕНТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФАМИЛИЯ {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.ФАМИЛИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФАМИЛИЯ\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.ФАМИЛИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ИМЯ {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.ИМЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ИМЯ\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.ИМЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОТЧЕСТВО {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.ОТЧЕСТВОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТЧЕСТВО\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.ОТЧЕСТВОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТЕЛЕФОН {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.ТЕЛЕФОНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТЕЛЕФОН\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.ТЕЛЕФОНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string СЕРИЯ_НОМЕР {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.СЕРИЯ_НОМЕРColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СЕРИЯ_НОМЕР\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.СЕРИЯ_НОМЕРColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ПОЛ {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.ПОЛColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПОЛ\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.ПОЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string АДРЕС_РЕГИСТРАЦИИ {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.АДРЕС_РЕГИСТРАЦИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'АДРЕС_РЕГИСТРАЦИИ\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.АДРЕС_РЕГИСТРАЦИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'EMAIL\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФАКТИЧЕСКИЙ_АДРЕС {
                get {
                    try {
                        return ((string)(this[this.tableКЛИЕНТЫ.ФАКТИЧЕСКИЙ_АДРЕСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФАКТИЧЕСКИЙ_АДРЕС\' в таблице \'КЛИЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКЛИЕНТЫ.ФАКТИЧЕСКИЙ_АДРЕСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФАМИЛИЯNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.ФАМИЛИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФАМИЛИЯNull() {
                this[this.tableКЛИЕНТЫ.ФАМИЛИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsИМЯNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.ИМЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetИМЯNull() {
                this[this.tableКЛИЕНТЫ.ИМЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТЧЕСТВОNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.ОТЧЕСТВОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТЧЕСТВОNull() {
                this[this.tableКЛИЕНТЫ.ОТЧЕСТВОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТЕЛЕФОНNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.ТЕЛЕФОНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТЕЛЕФОНNull() {
                this[this.tableКЛИЕНТЫ.ТЕЛЕФОНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСЕРИЯ_НОМЕРNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.СЕРИЯ_НОМЕРColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСЕРИЯ_НОМЕРNull() {
                this[this.tableКЛИЕНТЫ.СЕРИЯ_НОМЕРColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПОЛNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.ПОЛColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПОЛNull() {
                this[this.tableКЛИЕНТЫ.ПОЛColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsАДРЕС_РЕГИСТРАЦИИNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.АДРЕС_РЕГИСТРАЦИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetАДРЕС_РЕГИСТРАЦИИNull() {
                this[this.tableКЛИЕНТЫ.АДРЕС_РЕГИСТРАЦИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tableКЛИЕНТЫ.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФАКТИЧЕСКИЙ_АДРЕСNull() {
                return this.IsNull(this.tableКЛИЕНТЫ.ФАКТИЧЕСКИЙ_АДРЕСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФАКТИЧЕСКИЙ_АДРЕСNull() {
                this[this.tableКЛИЕНТЫ.ФАКТИЧЕСКИЙ_АДРЕСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow[] GetДОГОВОРЫ_КЛИЕНТОВRows() {
                if ((this.Table.ChildRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ"] == null)) {
                    return new ДОГОВОРЫ_КЛИЕНТОВRow[0];
                }
                else {
                    return ((ДОГОВОРЫ_КЛИЕНТОВRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_ДОГОВОРЫ_КЛИЕНТОВ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow[] GetСЧЕТАRows() {
                if ((this.Table.ChildRelations["FK_СЧЕТА_КЛИЕНТЫ"] == null)) {
                    return new СЧЕТАRow[0];
                }
                else {
                    return ((СЧЕТАRow[])(base.GetChildRows(this.Table.ChildRelations["FK_СЧЕТА_КЛИЕНТЫ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СОТРУДНИКИRow : global::System.Data.DataRow {
            
            private СОТРУДНИКИDataTable tableСОТРУДНИКИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СОТРУДНИКИRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСОТРУДНИКИ = ((СОТРУДНИКИDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_СОТРУДНИКА {
                get {
                    return ((int)(this[this.tableСОТРУДНИКИ.НОМЕР_СОТРУДНИКАColumn]));
                }
                set {
                    this[this.tableСОТРУДНИКИ.НОМЕР_СОТРУДНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ИМЯ {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.ИМЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ИМЯ\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.ИМЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОТЧЕСТВО {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.ОТЧЕСТВОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТЧЕСТВО\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.ОТЧЕСТВОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФАМИЛИЯ {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.ФАМИЛИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФАМИЛИЯ\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.ФАМИЛИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ПРИЁМА {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableСОТРУДНИКИ.ДАТА_ПРИЁМАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ПРИЁМА\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.ДАТА_ПРИЁМАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ПОЛ {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.ПОЛColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПОЛ\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.ПОЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТЕЛЕФОН {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.ТЕЛЕФОНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТЕЛЕФОН\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.ТЕЛЕФОНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'EMAIL\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_ОТДЕЛА {
                get {
                    try {
                        return ((int)(this[this.tableСОТРУДНИКИ.НОМЕР_ОТДЕЛАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_ОТДЕЛА\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.НОМЕР_ОТДЕЛАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string АДРЕС_РЕГИСТРАЦИИ {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.АДРЕС_РЕГИСТРАЦИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'АДРЕС_РЕГИСТРАЦИИ\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.АДРЕС_РЕГИСТРАЦИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФАКТИЧЕСКИЙ_АДРЕС {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.ФАКТИЧЕСКИЙ_АДРЕСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФАКТИЧЕСКИЙ_АДРЕС\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.ФАКТИЧЕСКИЙ_АДРЕСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string СЕРИЯ_НОМЕР {
                get {
                    try {
                        return ((string)(this[this.tableСОТРУДНИКИ.СЕРИЯ_НОМЕРColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СЕРИЯ_НОМЕР\' в таблице \'СОТРУДНИКИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОТРУДНИКИ.СЕРИЯ_НОМЕРColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsИМЯNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.ИМЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetИМЯNull() {
                this[this.tableСОТРУДНИКИ.ИМЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТЧЕСТВОNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.ОТЧЕСТВОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТЧЕСТВОNull() {
                this[this.tableСОТРУДНИКИ.ОТЧЕСТВОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФАМИЛИЯNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.ФАМИЛИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФАМИЛИЯNull() {
                this[this.tableСОТРУДНИКИ.ФАМИЛИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ПРИЁМАNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.ДАТА_ПРИЁМАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ПРИЁМАNull() {
                this[this.tableСОТРУДНИКИ.ДАТА_ПРИЁМАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПОЛNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.ПОЛColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПОЛNull() {
                this[this.tableСОТРУДНИКИ.ПОЛColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТЕЛЕФОНNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.ТЕЛЕФОНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТЕЛЕФОНNull() {
                this[this.tableСОТРУДНИКИ.ТЕЛЕФОНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tableСОТРУДНИКИ.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_ОТДЕЛАNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.НОМЕР_ОТДЕЛАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_ОТДЕЛАNull() {
                this[this.tableСОТРУДНИКИ.НОМЕР_ОТДЕЛАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsАДРЕС_РЕГИСТРАЦИИNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.АДРЕС_РЕГИСТРАЦИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetАДРЕС_РЕГИСТРАЦИИNull() {
                this[this.tableСОТРУДНИКИ.АДРЕС_РЕГИСТРАЦИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФАКТИЧЕСКИЙ_АДРЕСNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.ФАКТИЧЕСКИЙ_АДРЕСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФАКТИЧЕСКИЙ_АДРЕСNull() {
                this[this.tableСОТРУДНИКИ.ФАКТИЧЕСКИЙ_АДРЕСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСЕРИЯ_НОМЕРNull() {
                return this.IsNull(this.tableСОТРУДНИКИ.СЕРИЯ_НОМЕРColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСЕРИЯ_НОМЕРNull() {
                this[this.tableСОТРУДНИКИ.СЕРИЯ_НОМЕРColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАRow[] GetДАННЫЕ_ВХОДАRows() {
                if ((this.Table.ChildRelations["FK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ"] == null)) {
                    return new ДАННЫЕ_ВХОДАRow[0];
                }
                else {
                    return ((ДАННЫЕ_ВХОДАRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ДАННЫЕ_ВХОДА_СОТРУДНИКИ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow[] GetДОГОВОРЫ_КЛИЕНТОВRows() {
                if ((this.Table.ChildRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ"] == null)) {
                    return new ДОГОВОРЫ_КЛИЕНТОВRow[0];
                }
                else {
                    return ((ДОГОВОРЫ_КЛИЕНТОВRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СОТРУДНИКИ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СПЕЦИАЛЬНОСТИRow : global::System.Data.DataRow {
            
            private СПЕЦИАЛЬНОСТИDataTable tableСПЕЦИАЛЬНОСТИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СПЕЦИАЛЬНОСТИRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСПЕЦИАЛЬНОСТИ = ((СПЕЦИАЛЬНОСТИDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КОД_СПЕЦИАЛЬНОСТИ {
                get {
                    return ((string)(this[this.tableСПЕЦИАЛЬНОСТИ.КОД_СПЕЦИАЛЬНОСТИColumn]));
                }
                set {
                    this[this.tableСПЕЦИАЛЬНОСТИ.КОД_СПЕЦИАЛЬНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableСПЕЦИАЛЬНОСТИ.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'СПЕЦИАЛЬНОСТИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСПЕЦИАЛЬНОСТИ.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД {
                get {
                    try {
                        return ((decimal)(this[this.tableСПЕЦИАЛЬНОСТИ.МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАДColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД\' в таблице \'СПЕЦИАЛЬНОСТИ\' ра" +
                                "вно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСПЕЦИАЛЬНОСТИ.МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАДColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableСПЕЦИАЛЬНОСТИ.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableСПЕЦИАЛЬНОСТИ.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАДNull() {
                return this.IsNull(this.tableСПЕЦИАЛЬНОСТИ.МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАДColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАДNull() {
                this[this.tableСПЕЦИАЛЬНОСТИ.МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАДColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СЧЕТАRow : global::System.Data.DataRow {
            
            private СЧЕТАDataTable tableСЧЕТА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СЧЕТАRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСЧЕТА = ((СЧЕТАDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НОМЕР_СЧЁТА {
                get {
                    return ((string)(this[this.tableСЧЕТА.НОМЕР_СЧЁТАColumn]));
                }
                set {
                    this[this.tableСЧЕТА.НОМЕР_СЧЁТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_КЛИЕНТА {
                get {
                    try {
                        return ((int)(this[this.tableСЧЕТА.НОМЕР_КЛИЕНТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_КЛИЕНТА\' в таблице \'СЧЕТА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСЧЕТА.НОМЕР_КЛИЕНТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRow КЛИЕНТЫRow {
                get {
                    return ((КЛИЕНТЫRow)(this.GetParentRow(this.Table.ParentRelations["FK_СЧЕТА_КЛИЕНТЫ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_СЧЕТА_КЛИЕНТЫ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_КЛИЕНТАNull() {
                return this.IsNull(this.tableСЧЕТА.НОМЕР_КЛИЕНТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_КЛИЕНТАNull() {
                this[this.tableСЧЕТА.НОМЕР_КЛИЕНТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow[] GetДОГОВОРЫ_КЛИЕНТОВRows() {
                if ((this.Table.ChildRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА"] == null)) {
                    return new ДОГОВОРЫ_КЛИЕНТОВRow[0];
                }
                else {
                    return ((ДОГОВОРЫ_КЛИЕНТОВRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ДОГОВОРЫ_КЛИЕНТОВ_СЧЕТА"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRow[] GetИСТОРИЯ_ОПЕРАЦИЙRows() {
                if ((this.Table.ChildRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА"] == null)) {
                    return new ИСТОРИЯ_ОПЕРАЦИЙRow[0];
                }
                else {
                    return ((ИСТОРИЯ_ОПЕРАЦИЙRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ИСТОРИЯ_ОПЕРАЦИЙ_СЧЕТА"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class БАНКОВСКИЕ_УСЛУГИRowChangeEvent : global::System.EventArgs {
            
            private БАНКОВСКИЕ_УСЛУГИRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRowChangeEvent(БАНКОВСКИЕ_УСЛУГИRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БАНКОВСКИЕ_УСЛУГИRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ВИДЫ_ВКЛАДОВRowChangeEvent : global::System.EventArgs {
            
            private ВИДЫ_ВКЛАДОВRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВRowChangeEvent(ВИДЫ_ВКЛАДОВRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ВКЛАДОВRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEvent : global::System.EventArgs {
            
            private ВИДЫ_ДЕБЕТОВЫХ_КАРТRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТRowChangeEvent(ВИДЫ_ДЕБЕТОВЫХ_КАРТRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ДЕБЕТОВЫХ_КАРТRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ВИДЫ_КРЕДИТОВRowChangeEvent : global::System.EventArgs {
            
            private ВИДЫ_КРЕДИТОВRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВRowChangeEvent(ВИДЫ_КРЕДИТОВRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_КРЕДИТОВRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ВИДЫ_ОПЕРАЦИЙRowChangeEvent : global::System.EventArgs {
            
            private ВИДЫ_ОПЕРАЦИЙRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙRowChangeEvent(ВИДЫ_ОПЕРАЦИЙRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВИДЫ_ОПЕРАЦИЙRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ДАННЫЕ_ВХОДАRowChangeEvent : global::System.EventArgs {
            
            private ДАННЫЕ_ВХОДАRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАRowChangeEvent(ДАННЫЕ_ВХОДАRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДАННЫЕ_ВХОДАRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ДОГОВОРЫ_КЛИЕНТОВRowChangeEvent : global::System.EventArgs {
            
            private ДОГОВОРЫ_КЛИЕНТОВRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRowChangeEvent(ДОГОВОРЫ_КЛИЕНТОВRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДОГОВОРЫ_КЛИЕНТОВRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ИСТОРИЯ_ОПЕРАЦИЙRowChangeEvent : global::System.EventArgs {
            
            private ИСТОРИЯ_ОПЕРАЦИЙRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRowChangeEvent(ИСТОРИЯ_ОПЕРАЦИЙRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИСТОРИЯ_ОПЕРАЦИЙRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class КЛИЕНТЫRowChangeEvent : global::System.EventArgs {
            
            private КЛИЕНТЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRowChangeEvent(КЛИЕНТЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КЛИЕНТЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class СОТРУДНИКИRowChangeEvent : global::System.EventArgs {
            
            private СОТРУДНИКИRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRowChangeEvent(СОТРУДНИКИRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОТРУДНИКИRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class СПЕЦИАЛЬНОСТИRowChangeEvent : global::System.EventArgs {
            
            private СПЕЦИАЛЬНОСТИRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СПЕЦИАЛЬНОСТИRowChangeEvent(СПЕЦИАЛЬНОСТИRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СПЕЦИАЛЬНОСТИRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class СЧЕТАRowChangeEvent : global::System.EventArgs {
            
            private СЧЕТАRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRowChangeEvent(СЧЕТАRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СЧЕТАRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BANK.Properties.DataSources.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class БАНКОВСКИЕ_УСЛУГИTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public БАНКОВСКИЕ_УСЛУГИTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "БАНКОВСКИЕ УСЛУГИ";
            tableMapping.ColumnMappings.Add("НОМЕР_УСЛУГИ", "НОМЕР_УСЛУГИ");
            tableMapping.ColumnMappings.Add("КОД_УСЛУГИ", "КОД_УСЛУГИ");
            tableMapping.ColumnMappings.Add("НАЗВАНИЕ", "НАЗВАНИЕ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[БАНКОВСКИЕ УСЛУГИ] WHERE (([НОМЕР_УСЛУГИ] = @Original_НОМЕР_УСЛУГИ) AND ((@IsNull_КОД_УСЛУГИ = 1 AND [КОД_УСЛУГИ] IS NULL) OR ([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ)) AND ((@IsNull_НАЗВАНИЕ = 1 AND [НАЗВАНИЕ] IS NULL) OR ([НАЗВАНИЕ] = @Original_НАЗВАНИЕ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАЗВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАЗВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАЗВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАЗВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[БАНКОВСКИЕ УСЛУГИ] ([НОМЕР_УСЛУГИ], [КОД_УСЛУГИ], [НАЗВАНИЕ]) " +
                "VALUES (@НОМЕР_УСЛУГИ, @КОД_УСЛУГИ, @НАЗВАНИЕ);\r\nSELECT НОМЕР_УСЛУГИ, КОД_УСЛУГИ" +
                ", НАЗВАНИЕ FROM [БАНКОВСКИЕ УСЛУГИ] WHERE (НОМЕР_УСЛУГИ = @НОМЕР_УСЛУГИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАЗВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАЗВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[БАНКОВСКИЕ УСЛУГИ] SET [НОМЕР_УСЛУГИ] = @НОМЕР_УСЛУГИ, [КОД_УСЛУГИ] = @КОД_УСЛУГИ, [НАЗВАНИЕ] = @НАЗВАНИЕ WHERE (([НОМЕР_УСЛУГИ] = @Original_НОМЕР_УСЛУГИ) AND ((@IsNull_КОД_УСЛУГИ = 1 AND [КОД_УСЛУГИ] IS NULL) OR ([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ)) AND ((@IsNull_НАЗВАНИЕ = 1 AND [НАЗВАНИЕ] IS NULL) OR ([НАЗВАНИЕ] = @Original_НАЗВАНИЕ)));
SELECT НОМЕР_УСЛУГИ, КОД_УСЛУГИ, НАЗВАНИЕ FROM [БАНКОВСКИЕ УСЛУГИ] WHERE (НОМЕР_УСЛУГИ = @НОМЕР_УСЛУГИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАЗВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАЗВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАЗВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАЗВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАЗВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАЗВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT НОМЕР_УСЛУГИ, КОД_УСЛУГИ, НАЗВАНИЕ FROM dbo.[БАНКОВСКИЕ УСЛУГИ]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.БАНКОВСКИЕ_УСЛУГИDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.БАНКОВСКИЕ_УСЛУГИDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.БАНКОВСКИЕ_УСЛУГИDataTable dataTable = new DataSet1.БАНКОВСКИЕ_УСЛУГИDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.БАНКОВСКИЕ_УСЛУГИDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "БАНКОВСКИЕ УСЛУГИ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_НОМЕР_УСЛУГИ, string Original_КОД_УСЛУГИ, string Original_НАЗВАНИЕ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_НОМЕР_УСЛУГИ));
            if ((Original_КОД_УСЛУГИ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_НАЗВАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_НАЗВАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int НОМЕР_УСЛУГИ, string КОД_УСЛУГИ, string НАЗВАНИЕ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(НОМЕР_УСЛУГИ));
            if ((КОД_УСЛУГИ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((НАЗВАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(НАЗВАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int НОМЕР_УСЛУГИ, string КОД_УСЛУГИ, string НАЗВАНИЕ, int Original_НОМЕР_УСЛУГИ, string Original_КОД_УСЛУГИ, string Original_НАЗВАНИЕ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(НОМЕР_УСЛУГИ));
            if ((КОД_УСЛУГИ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((НАЗВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(НАЗВАНИЕ));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_НОМЕР_УСЛУГИ));
            if ((Original_КОД_УСЛУГИ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_НАЗВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_НАЗВАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string КОД_УСЛУГИ, string НАЗВАНИЕ, int Original_НОМЕР_УСЛУГИ, string Original_КОД_УСЛУГИ, string Original_НАЗВАНИЕ) {
            return this.Update(Original_НОМЕР_УСЛУГИ, КОД_УСЛУГИ, НАЗВАНИЕ, Original_НОМЕР_УСЛУГИ, Original_КОД_УСЛУГИ, Original_НАЗВАНИЕ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ВИДЫ_ВКЛАДОВTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ВИДЫ_ВКЛАДОВTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ВИДЫ_ВКЛАДОВ";
            tableMapping.ColumnMappings.Add("КОД_УСЛУГИ", "КОД_УСЛУГИ");
            tableMapping.ColumnMappings.Add("МИНИМАЛЬНАЯ_СУММА", "МИНИМАЛЬНАЯ_СУММА");
            tableMapping.ColumnMappings.Add("МАКСИМАЛЬНАЯ_СУММА\\", "МАКСИМАЛЬНАЯ_СУММА\\");
            tableMapping.ColumnMappings.Add("НЕСНИЖАЕМЫЙ_ОСТАТОК", "НЕСНИЖАЕМЫЙ_ОСТАТОК");
            tableMapping.ColumnMappings.Add("СРОК_В_НЕДЕЛЯХ", "СРОК_В_НЕДЕЛЯХ");
            tableMapping.ColumnMappings.Add("ПРОЦЕНТЫ", "ПРОЦЕНТЫ");
            tableMapping.ColumnMappings.Add("С_КАПИТАЛИЗАЦИЕЙ", "С_КАПИТАЛИЗАЦИЕЙ");
            tableMapping.ColumnMappings.Add("МИНИМАЛЬНЫЙ_ВОЗРАСТ", "МИНИМАЛЬНЫЙ_ВОЗРАСТ");
            tableMapping.ColumnMappings.Add("ВАЛЮТА", "ВАЛЮТА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ВИДЫ_ВКЛАДОВ] WHERE (([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ) AND ((@IsNull_МИНИМАЛЬНАЯ_СУММА = 1 AND [МИНИМАЛЬНАЯ_СУММА] IS NULL) OR ([МИНИМАЛЬНАЯ_СУММА] = @Original_МИНИМАЛЬНАЯ_СУММА)) AND ((@p3 = 1 AND [МАКСИМАЛЬНАЯ_СУММА\] IS NULL) OR ([МАКСИМАЛЬНАЯ_СУММА\] = @p2)) AND ((@IsNull_НЕСНИЖАЕМЫЙ_ОСТАТОК = 1 AND [НЕСНИЖАЕМЫЙ_ОСТАТОК] IS NULL) OR ([НЕСНИЖАЕМЫЙ_ОСТАТОК] = @Original_НЕСНИЖАЕМЫЙ_ОСТАТОК)) AND ((@IsNull_СРОК_В_НЕДЕЛЯХ = 1 AND [СРОК_В_НЕДЕЛЯХ] IS NULL) OR ([СРОК_В_НЕДЕЛЯХ] = @Original_СРОК_В_НЕДЕЛЯХ)) AND ((@IsNull_ПРОЦЕНТЫ = 1 AND [ПРОЦЕНТЫ] IS NULL) OR ([ПРОЦЕНТЫ] = @Original_ПРОЦЕНТЫ)) AND ((@IsNull_С_КАПИТАЛИЗАЦИЕЙ = 1 AND [С_КАПИТАЛИЗАЦИЕЙ] IS NULL) OR ([С_КАПИТАЛИЗАЦИЕЙ] = @Original_С_КАПИТАЛИЗАЦИЕЙ)) AND ((@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ = 1 AND [МИНИМАЛЬНЫЙ_ВОЗРАСТ] IS NULL) OR ([МИНИМАЛЬНЫЙ_ВОЗРАСТ] = @Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ)) AND ((@IsNull_ВАЛЮТА = 1 AND [ВАЛЮТА] IS NULL) OR ([ВАЛЮТА] = @Original_ВАЛЮТА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА\\", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА\\", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СРОК_В_НЕДЕЛЯХ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_В_НЕДЕЛЯХ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СРОК_В_НЕДЕЛЯХ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_В_НЕДЕЛЯХ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ВАЛЮТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВАЛЮТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ВАЛЮТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВАЛЮТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ВИДЫ_ВКЛАДОВ] ([КОД_УСЛУГИ], [МИНИМАЛЬНАЯ_СУММА], [МАКСИМАЛЬНАЯ_СУММА\], [НЕСНИЖАЕМЫЙ_ОСТАТОК], [СРОК_В_НЕДЕЛЯХ], [ПРОЦЕНТЫ], [С_КАПИТАЛИЗАЦИЕЙ], [МИНИМАЛЬНЫЙ_ВОЗРАСТ], [ВАЛЮТА]) VALUES (@КОД_УСЛУГИ, @МИНИМАЛЬНАЯ_СУММА, @p1, @НЕСНИЖАЕМЫЙ_ОСТАТОК, @СРОК_В_НЕДЕЛЯХ, @ПРОЦЕНТЫ, @С_КАПИТАЛИЗАЦИЕЙ, @МИНИМАЛЬНЫЙ_ВОЗРАСТ, @ВАЛЮТА);
SELECT КОД_УСЛУГИ, МИНИМАЛЬНАЯ_СУММА, [МАКСИМАЛЬНАЯ_СУММА\], НЕСНИЖАЕМЫЙ_ОСТАТОК, СРОК_В_НЕДЕЛЯХ, ПРОЦЕНТЫ, С_КАПИТАЛИЗАЦИЕЙ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, ВАЛЮТА FROM ВИДЫ_ВКЛАДОВ WHERE (КОД_УСЛУГИ = @КОД_УСЛУГИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА\\", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СРОК_В_НЕДЕЛЯХ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_В_НЕДЕЛЯХ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВАЛЮТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВАЛЮТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ВИДЫ_ВКЛАДОВ] SET [КОД_УСЛУГИ] = @КОД_УСЛУГИ, [МИНИМАЛЬНАЯ_СУММА] = @МИНИМАЛЬНАЯ_СУММА, [МАКСИМАЛЬНАЯ_СУММА\] = @p1, [НЕСНИЖАЕМЫЙ_ОСТАТОК] = @НЕСНИЖАЕМЫЙ_ОСТАТОК, [СРОК_В_НЕДЕЛЯХ] = @СРОК_В_НЕДЕЛЯХ, [ПРОЦЕНТЫ] = @ПРОЦЕНТЫ, [С_КАПИТАЛИЗАЦИЕЙ] = @С_КАПИТАЛИЗАЦИЕЙ, [МИНИМАЛЬНЫЙ_ВОЗРАСТ] = @МИНИМАЛЬНЫЙ_ВОЗРАСТ, [ВАЛЮТА] = @ВАЛЮТА WHERE (([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ) AND ((@IsNull_МИНИМАЛЬНАЯ_СУММА = 1 AND [МИНИМАЛЬНАЯ_СУММА] IS NULL) OR ([МИНИМАЛЬНАЯ_СУММА] = @Original_МИНИМАЛЬНАЯ_СУММА)) AND ((@p3 = 1 AND [МАКСИМАЛЬНАЯ_СУММА\] IS NULL) OR ([МАКСИМАЛЬНАЯ_СУММА\] = @p2)) AND ((@IsNull_НЕСНИЖАЕМЫЙ_ОСТАТОК = 1 AND [НЕСНИЖАЕМЫЙ_ОСТАТОК] IS NULL) OR ([НЕСНИЖАЕМЫЙ_ОСТАТОК] = @Original_НЕСНИЖАЕМЫЙ_ОСТАТОК)) AND ((@IsNull_СРОК_В_НЕДЕЛЯХ = 1 AND [СРОК_В_НЕДЕЛЯХ] IS NULL) OR ([СРОК_В_НЕДЕЛЯХ] = @Original_СРОК_В_НЕДЕЛЯХ)) AND ((@IsNull_ПРОЦЕНТЫ = 1 AND [ПРОЦЕНТЫ] IS NULL) OR ([ПРОЦЕНТЫ] = @Original_ПРОЦЕНТЫ)) AND ((@IsNull_С_КАПИТАЛИЗАЦИЕЙ = 1 AND [С_КАПИТАЛИЗАЦИЕЙ] IS NULL) OR ([С_КАПИТАЛИЗАЦИЕЙ] = @Original_С_КАПИТАЛИЗАЦИЕЙ)) AND ((@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ = 1 AND [МИНИМАЛЬНЫЙ_ВОЗРАСТ] IS NULL) OR ([МИНИМАЛЬНЫЙ_ВОЗРАСТ] = @Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ)) AND ((@IsNull_ВАЛЮТА = 1 AND [ВАЛЮТА] IS NULL) OR ([ВАЛЮТА] = @Original_ВАЛЮТА)));
SELECT КОД_УСЛУГИ, МИНИМАЛЬНАЯ_СУММА, [МАКСИМАЛЬНАЯ_СУММА\], НЕСНИЖАЕМЫЙ_ОСТАТОК, СРОК_В_НЕДЕЛЯХ, ПРОЦЕНТЫ, С_КАПИТАЛИЗАЦИЕЙ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, ВАЛЮТА FROM ВИДЫ_ВКЛАДОВ WHERE (КОД_УСЛУГИ = @КОД_УСЛУГИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА\\", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СРОК_В_НЕДЕЛЯХ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_В_НЕДЕЛЯХ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВАЛЮТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВАЛЮТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА\\", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА\\", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НЕСНИЖАЕМЫЙ_ОСТАТОК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СРОК_В_НЕДЕЛЯХ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_В_НЕДЕЛЯХ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СРОК_В_НЕДЕЛЯХ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_В_НЕДЕЛЯХ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "С_КАПИТАЛИЗАЦИЕЙ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ВАЛЮТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВАЛЮТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ВАЛЮТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВАЛЮТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_УСЛУГИ, МИНИМАЛЬНАЯ_СУММА, [МАКСИМАЛЬНАЯ_СУММА\\], НЕСНИЖАЕМЫЙ_ОСТАТОК," +
                " СРОК_В_НЕДЕЛЯХ, ПРОЦЕНТЫ, С_КАПИТАЛИЗАЦИЕЙ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, ВАЛЮТА FROM db" +
                "o.ВИДЫ_ВКЛАДОВ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ВИДЫ_ВКЛАДОВDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ВИДЫ_ВКЛАДОВDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ВИДЫ_ВКЛАДОВDataTable dataTable = new DataSet1.ВИДЫ_ВКЛАДОВDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ВИДЫ_ВКЛАДОВDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ВИДЫ_ВКЛАДОВ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_КОД_УСЛУГИ, global::System.Nullable<decimal> Original_МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> p2, global::System.Nullable<decimal> Original_НЕСНИЖАЕМЫЙ_ОСТАТОК, global::System.Nullable<int> Original_СРОК_В_НЕДЕЛЯХ, global::System.Nullable<decimal> Original_ПРОЦЕНТЫ, global::System.Nullable<decimal> Original_С_КАПИТАЛИЗАЦИЕЙ, global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, string Original_ВАЛЮТА) {
            if ((Original_КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_УСЛУГИ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_НЕСНИЖАЕМЫЙ_ОСТАТОК.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_НЕСНИЖАЕМЫЙ_ОСТАТОК.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_СРОК_В_НЕДЕЛЯХ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_СРОК_В_НЕДЕЛЯХ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_С_КАПИТАЛИЗАЦИЕЙ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_С_КАПИТАЛИЗАЦИЕЙ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ВАЛЮТА == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ВАЛЮТА));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string КОД_УСЛУГИ, global::System.Nullable<decimal> МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> p1, global::System.Nullable<decimal> НЕСНИЖАЕМЫЙ_ОСТАТОК, global::System.Nullable<int> СРОК_В_НЕДЕЛЯХ, global::System.Nullable<decimal> ПРОЦЕНТЫ, global::System.Nullable<decimal> С_КАПИТАЛИЗАЦИЕЙ, global::System.Nullable<int> МИНИМАЛЬНЫЙ_ВОЗРАСТ, string ВАЛЮТА) {
            if ((КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("КОД_УСЛУГИ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((НЕСНИЖАЕМЫЙ_ОСТАТОК.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(НЕСНИЖАЕМЫЙ_ОСТАТОК.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((СРОК_В_НЕДЕЛЯХ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(СРОК_В_НЕДЕЛЯХ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((С_КАПИТАЛИЗАЦИЕЙ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(С_КАПИТАЛИЗАЦИЕЙ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ВАЛЮТА == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ВАЛЮТА));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string КОД_УСЛУГИ, 
                    global::System.Nullable<decimal> МИНИМАЛЬНАЯ_СУММА, 
                    global::System.Nullable<decimal> p1, 
                    global::System.Nullable<decimal> НЕСНИЖАЕМЫЙ_ОСТАТОК, 
                    global::System.Nullable<int> СРОК_В_НЕДЕЛЯХ, 
                    global::System.Nullable<decimal> ПРОЦЕНТЫ, 
                    global::System.Nullable<decimal> С_КАПИТАЛИЗАЦИЕЙ, 
                    global::System.Nullable<int> МИНИМАЛЬНЫЙ_ВОЗРАСТ, 
                    string ВАЛЮТА, 
                    string Original_КОД_УСЛУГИ, 
                    global::System.Nullable<decimal> Original_МИНИМАЛЬНАЯ_СУММА, 
                    global::System.Nullable<decimal> p2, 
                    global::System.Nullable<decimal> Original_НЕСНИЖАЕМЫЙ_ОСТАТОК, 
                    global::System.Nullable<int> Original_СРОК_В_НЕДЕЛЯХ, 
                    global::System.Nullable<decimal> Original_ПРОЦЕНТЫ, 
                    global::System.Nullable<decimal> Original_С_КАПИТАЛИЗАЦИЕЙ, 
                    global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, 
                    string Original_ВАЛЮТА) {
            if ((КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("КОД_УСЛУГИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(p1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((НЕСНИЖАЕМЫЙ_ОСТАТОК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(НЕСНИЖАЕМЫЙ_ОСТАТОК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((СРОК_В_НЕДЕЛЯХ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(СРОК_В_НЕДЕЛЯХ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((С_КАПИТАЛИЗАЦИЕЙ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(С_КАПИТАЛИЗАЦИЕЙ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ВАЛЮТА == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ВАЛЮТА));
            }
            if ((Original_КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_УСЛУГИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_НЕСНИЖАЕМЫЙ_ОСТАТОК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_НЕСНИЖАЕМЫЙ_ОСТАТОК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_СРОК_В_НЕДЕЛЯХ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_СРОК_В_НЕДЕЛЯХ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_С_КАПИТАЛИЗАЦИЕЙ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_С_КАПИТАЛИЗАЦИЕЙ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_ВАЛЮТА == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ВАЛЮТА));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> МИНИМАЛЬНАЯ_СУММА, 
                    global::System.Nullable<decimal> p1, 
                    global::System.Nullable<decimal> НЕСНИЖАЕМЫЙ_ОСТАТОК, 
                    global::System.Nullable<int> СРОК_В_НЕДЕЛЯХ, 
                    global::System.Nullable<decimal> ПРОЦЕНТЫ, 
                    global::System.Nullable<decimal> С_КАПИТАЛИЗАЦИЕЙ, 
                    global::System.Nullable<int> МИНИМАЛЬНЫЙ_ВОЗРАСТ, 
                    string ВАЛЮТА, 
                    string Original_КОД_УСЛУГИ, 
                    global::System.Nullable<decimal> Original_МИНИМАЛЬНАЯ_СУММА, 
                    global::System.Nullable<decimal> p2, 
                    global::System.Nullable<decimal> Original_НЕСНИЖАЕМЫЙ_ОСТАТОК, 
                    global::System.Nullable<int> Original_СРОК_В_НЕДЕЛЯХ, 
                    global::System.Nullable<decimal> Original_ПРОЦЕНТЫ, 
                    global::System.Nullable<decimal> Original_С_КАПИТАЛИЗАЦИЕЙ, 
                    global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, 
                    string Original_ВАЛЮТА) {
            return this.Update(Original_КОД_УСЛУГИ, МИНИМАЛЬНАЯ_СУММА, p1, НЕСНИЖАЕМЫЙ_ОСТАТОК, СРОК_В_НЕДЕЛЯХ, ПРОЦЕНТЫ, С_КАПИТАЛИЗАЦИЕЙ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, ВАЛЮТА, Original_КОД_УСЛУГИ, Original_МИНИМАЛЬНАЯ_СУММА, p2, Original_НЕСНИЖАЕМЫЙ_ОСТАТОК, Original_СРОК_В_НЕДЕЛЯХ, Original_ПРОЦЕНТЫ, Original_С_КАПИТАЛИЗАЦИЕЙ, Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, Original_ВАЛЮТА);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ВИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ВИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ВИДЫ_ДЕБЕТОВЫХ_КАРТ";
            tableMapping.ColumnMappings.Add("КОД_УСЛУГИ", "КОД_УСЛУГИ");
            tableMapping.ColumnMappings.Add("ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", "ОБСЛУЖИВАНИЕ_В_МЕСЯЦ");
            tableMapping.ColumnMappings.Add("МИНИМАЛЬНЫЙ_ВОЗРАСТ", "МИНИМАЛЬНЫЙ_ВОЗРАСТ");
            tableMapping.ColumnMappings.Add("МАКСИМАЛЬНЫЙ_ВОЗРАСТ", "МАКСИМАЛЬНЫЙ_ВОЗРАСТ");
            tableMapping.ColumnMappings.Add("КЭШБЭК", "КЭШБЭК");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ВИДЫ_ДЕБЕТОВЫХ_КАРТ] WHERE (([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ) AND ((@IsNull_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ = 1 AND [ОБСЛУЖИВАНИЕ_В_МЕСЯЦ] IS NULL) OR ([ОБСЛУЖИВАНИЕ_В_МЕСЯЦ] = @Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ)) AND ((@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ = 1 AND [МИНИМАЛЬНЫЙ_ВОЗРАСТ] IS NULL) OR ([МИНИМАЛЬНЫЙ_ВОЗРАСТ] = @Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ)) AND ((@IsNull_МАКСИМАЛЬНЫЙ_ВОЗРАСТ = 1 AND [МАКСИМАЛЬНЫЙ_ВОЗРАСТ] IS NULL) OR ([МАКСИМАЛЬНЫЙ_ВОЗРАСТ] = @Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ)) AND ((@IsNull_КЭШБЭК = 1 AND [КЭШБЭК] IS NULL) OR ([КЭШБЭК] = @Original_КЭШБЭК)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КЭШБЭК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КЭШБЭК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КЭШБЭК", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "КЭШБЭК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ВИДЫ_ДЕБЕТОВЫХ_КАРТ] ([КОД_УСЛУГИ], [ОБСЛУЖИВАНИЕ_В_МЕСЯЦ], [МИНИМАЛЬНЫЙ_ВОЗРАСТ], [МАКСИМАЛЬНЫЙ_ВОЗРАСТ], [КЭШБЭК]) VALUES (@КОД_УСЛУГИ, @ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, @МИНИМАЛЬНЫЙ_ВОЗРАСТ, @МАКСИМАЛЬНЫЙ_ВОЗРАСТ, @КЭШБЭК);
SELECT КОД_УСЛУГИ, ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, МАКСИМАЛЬНЫЙ_ВОЗРАСТ, КЭШБЭК FROM ВИДЫ_ДЕБЕТОВЫХ_КАРТ WHERE (КОД_УСЛУГИ = @КОД_УСЛУГИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КЭШБЭК", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "КЭШБЭК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ВИДЫ_ДЕБЕТОВЫХ_КАРТ] SET [КОД_УСЛУГИ] = @КОД_УСЛУГИ, [ОБСЛУЖИВАНИЕ_В_МЕСЯЦ] = @ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, [МИНИМАЛЬНЫЙ_ВОЗРАСТ] = @МИНИМАЛЬНЫЙ_ВОЗРАСТ, [МАКСИМАЛЬНЫЙ_ВОЗРАСТ] = @МАКСИМАЛЬНЫЙ_ВОЗРАСТ, [КЭШБЭК] = @КЭШБЭК WHERE (([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ) AND ((@IsNull_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ = 1 AND [ОБСЛУЖИВАНИЕ_В_МЕСЯЦ] IS NULL) OR ([ОБСЛУЖИВАНИЕ_В_МЕСЯЦ] = @Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ)) AND ((@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ = 1 AND [МИНИМАЛЬНЫЙ_ВОЗРАСТ] IS NULL) OR ([МИНИМАЛЬНЫЙ_ВОЗРАСТ] = @Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ)) AND ((@IsNull_МАКСИМАЛЬНЫЙ_ВОЗРАСТ = 1 AND [МАКСИМАЛЬНЫЙ_ВОЗРАСТ] IS NULL) OR ([МАКСИМАЛЬНЫЙ_ВОЗРАСТ] = @Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ)) AND ((@IsNull_КЭШБЭК = 1 AND [КЭШБЭК] IS NULL) OR ([КЭШБЭК] = @Original_КЭШБЭК)));
SELECT КОД_УСЛУГИ, ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, МАКСИМАЛЬНЫЙ_ВОЗРАСТ, КЭШБЭК FROM ВИДЫ_ДЕБЕТОВЫХ_КАРТ WHERE (КОД_УСЛУГИ = @КОД_УСЛУГИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КЭШБЭК", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "КЭШБЭК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБСЛУЖИВАНИЕ_В_МЕСЯЦ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КЭШБЭК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КЭШБЭК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КЭШБЭК", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "КЭШБЭК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_УСЛУГИ, ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, МАКСИМАЛЬНЫЙ_ВОЗРАС" +
                "Т, КЭШБЭК FROM dbo.ВИДЫ_ДЕБЕТОВЫХ_КАРТ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable dataTable = new DataSet1.ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ВИДЫ_ДЕБЕТОВЫХ_КАРТDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ВИДЫ_ДЕБЕТОВЫХ_КАРТ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_КОД_УСЛУГИ, global::System.Nullable<decimal> Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<int> Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<decimal> Original_КЭШБЭК) {
            if ((Original_КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_УСЛУГИ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_КЭШБЭК.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_КЭШБЭК.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string КОД_УСЛУГИ, global::System.Nullable<decimal> ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, global::System.Nullable<int> МИНИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<int> МАКСИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<decimal> КЭШБЭК) {
            if ((КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("КОД_УСЛУГИ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((МАКСИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(МАКСИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((КЭШБЭК.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(КЭШБЭК.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string КОД_УСЛУГИ, global::System.Nullable<decimal> ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, global::System.Nullable<int> МИНИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<int> МАКСИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<decimal> КЭШБЭК, string Original_КОД_УСЛУГИ, global::System.Nullable<decimal> Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<int> Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<decimal> Original_КЭШБЭК) {
            if ((КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("КОД_УСЛУГИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((МАКСИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(МАКСИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((КЭШБЭК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(КЭШБЭК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_УСЛУГИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_КЭШБЭК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_КЭШБЭК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, global::System.Nullable<int> МИНИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<int> МАКСИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<decimal> КЭШБЭК, string Original_КОД_УСЛУГИ, global::System.Nullable<decimal> Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<int> Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ, global::System.Nullable<decimal> Original_КЭШБЭК) {
            return this.Update(Original_КОД_УСЛУГИ, ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, МИНИМАЛЬНЫЙ_ВОЗРАСТ, МАКСИМАЛЬНЫЙ_ВОЗРАСТ, КЭШБЭК, Original_КОД_УСЛУГИ, Original_ОБСЛУЖИВАНИЕ_В_МЕСЯЦ, Original_МИНИМАЛЬНЫЙ_ВОЗРАСТ, Original_МАКСИМАЛЬНЫЙ_ВОЗРАСТ, Original_КЭШБЭК);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ВИДЫ_КРЕДИТОВTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ВИДЫ_КРЕДИТОВTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ВИДЫ_КРЕДИТОВ";
            tableMapping.ColumnMappings.Add("КОД_УСЛУГИ", "КОД_УСЛУГИ");
            tableMapping.ColumnMappings.Add("МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", "МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА");
            tableMapping.ColumnMappings.Add("МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", "МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА");
            tableMapping.ColumnMappings.Add("ПРОЦЕНТЫ", "ПРОЦЕНТЫ");
            tableMapping.ColumnMappings.Add("МИНИМАЛЬНАЯ_СУММА", "МИНИМАЛЬНАЯ_СУММА");
            tableMapping.ColumnMappings.Add("МАКСИМАЛЬНАЯ_СУММА", "МАКСИМАЛЬНАЯ_СУММА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ВИДЫ_КРЕДИТОВ] WHERE (([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ) AND ((@IsNull_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА = 1 AND [МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА] IS NULL) OR ([МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА] = @Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА)) AND ((@IsNull_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА = 1 AND [МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА] IS NULL) OR ([МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА] = @Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА)) AND ((@IsNull_ПРОЦЕНТЫ = 1 AND [ПРОЦЕНТЫ] IS NULL) OR ([ПРОЦЕНТЫ] = @Original_ПРОЦЕНТЫ)) AND ((@IsNull_МИНИМАЛЬНАЯ_СУММА = 1 AND [МИНИМАЛЬНАЯ_СУММА] IS NULL) OR ([МИНИМАЛЬНАЯ_СУММА] = @Original_МИНИМАЛЬНАЯ_СУММА)) AND ((@IsNull_МАКСИМАЛЬНАЯ_СУММА = 1 AND [МАКСИМАЛЬНАЯ_СУММА] IS NULL) OR ([МАКСИМАЛЬНАЯ_СУММА] = @Original_МАКСИМАЛЬНАЯ_СУММА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МАКСИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МАКСИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ВИДЫ_КРЕДИТОВ] ([КОД_УСЛУГИ], [МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА], [МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА], [ПРОЦЕНТЫ], [МИНИМАЛЬНАЯ_СУММА], [МАКСИМАЛЬНАЯ_СУММА]) VALUES (@КОД_УСЛУГИ, @МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, @МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, @ПРОЦЕНТЫ, @МИНИМАЛЬНАЯ_СУММА, @МАКСИМАЛЬНАЯ_СУММА);
SELECT КОД_УСЛУГИ, МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, ПРОЦЕНТЫ, МИНИМАЛЬНАЯ_СУММА, МАКСИМАЛЬНАЯ_СУММА FROM ВИДЫ_КРЕДИТОВ WHERE (КОД_УСЛУГИ = @КОД_УСЛУГИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МАКСИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ВИДЫ_КРЕДИТОВ] SET [КОД_УСЛУГИ] = @КОД_УСЛУГИ, [МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА] = @МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, [МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА] = @МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, [ПРОЦЕНТЫ] = @ПРОЦЕНТЫ, [МИНИМАЛЬНАЯ_СУММА] = @МИНИМАЛЬНАЯ_СУММА, [МАКСИМАЛЬНАЯ_СУММА] = @МАКСИМАЛЬНАЯ_СУММА WHERE (([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ) AND ((@IsNull_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА = 1 AND [МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА] IS NULL) OR ([МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА] = @Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА)) AND ((@IsNull_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА = 1 AND [МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА] IS NULL) OR ([МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА] = @Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА)) AND ((@IsNull_ПРОЦЕНТЫ = 1 AND [ПРОЦЕНТЫ] IS NULL) OR ([ПРОЦЕНТЫ] = @Original_ПРОЦЕНТЫ)) AND ((@IsNull_МИНИМАЛЬНАЯ_СУММА = 1 AND [МИНИМАЛЬНАЯ_СУММА] IS NULL) OR ([МИНИМАЛЬНАЯ_СУММА] = @Original_МИНИМАЛЬНАЯ_СУММА)) AND ((@IsNull_МАКСИМАЛЬНАЯ_СУММА = 1 AND [МАКСИМАЛЬНАЯ_СУММА] IS NULL) OR ([МАКСИМАЛЬНАЯ_СУММА] = @Original_МАКСИМАЛЬНАЯ_СУММА)));
SELECT КОД_УСЛУГИ, МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, ПРОЦЕНТЫ, МИНИМАЛЬНАЯ_СУММА, МАКСИМАЛЬНАЯ_СУММА FROM ВИДЫ_КРЕДИТОВ WHERE (КОД_УСЛУГИ = @КОД_УСЛУГИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МАКСИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПРОЦЕНТЫ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "ПРОЦЕНТЫ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МАКСИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МАКСИМАЛЬНАЯ_СУММА", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МАКСИМАЛЬНАЯ_СУММА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_УСЛУГИ, МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, ПРОЦЕНТЫ," +
                " МИНИМАЛЬНАЯ_СУММА, МАКСИМАЛЬНАЯ_СУММА FROM dbo.ВИДЫ_КРЕДИТОВ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ВИДЫ_КРЕДИТОВDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ВИДЫ_КРЕДИТОВDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ВИДЫ_КРЕДИТОВDataTable dataTable = new DataSet1.ВИДЫ_КРЕДИТОВDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ВИДЫ_КРЕДИТОВDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ВИДЫ_КРЕДИТОВ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_КОД_УСЛУГИ, global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<int> Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<decimal> Original_ПРОЦЕНТЫ, global::System.Nullable<decimal> Original_МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> Original_МАКСИМАЛЬНАЯ_СУММА) {
            if ((Original_КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_УСЛУГИ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_МАКСИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_МАКСИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string КОД_УСЛУГИ, global::System.Nullable<int> МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<int> МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<decimal> ПРОЦЕНТЫ, global::System.Nullable<decimal> МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> МАКСИМАЛЬНАЯ_СУММА) {
            if ((КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("КОД_УСЛУГИ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((МАКСИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(МАКСИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string КОД_УСЛУГИ, global::System.Nullable<int> МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<int> МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<decimal> ПРОЦЕНТЫ, global::System.Nullable<decimal> МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> МАКСИМАЛЬНАЯ_СУММА, string Original_КОД_УСЛУГИ, global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<int> Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<decimal> Original_ПРОЦЕНТЫ, global::System.Nullable<decimal> Original_МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> Original_МАКСИМАЛЬНАЯ_СУММА) {
            if ((КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("КОД_УСЛУГИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((МАКСИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(МАКСИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_УСЛУГИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_УСЛУГИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ПРОЦЕНТЫ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_ПРОЦЕНТЫ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_МИНИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_МИНИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_МАКСИМАЛЬНАЯ_СУММА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_МАКСИМАЛЬНАЯ_СУММА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<int> МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<decimal> ПРОЦЕНТЫ, global::System.Nullable<decimal> МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> МАКСИМАЛЬНАЯ_СУММА, string Original_КОД_УСЛУГИ, global::System.Nullable<int> Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<int> Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, global::System.Nullable<decimal> Original_ПРОЦЕНТЫ, global::System.Nullable<decimal> Original_МИНИМАЛЬНАЯ_СУММА, global::System.Nullable<decimal> Original_МАКСИМАЛЬНАЯ_СУММА) {
            return this.Update(Original_КОД_УСЛУГИ, МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, ПРОЦЕНТЫ, МИНИМАЛЬНАЯ_СУММА, МАКСИМАЛЬНАЯ_СУММА, Original_КОД_УСЛУГИ, Original_МИНИМАЛЬНЫЙ_СРОК_КРЕДИТА, Original_МАКСИМАЛЬНЫЙ_СРОК_КРЕДИТА, Original_ПРОЦЕНТЫ, Original_МИНИМАЛЬНАЯ_СУММА, Original_МАКСИМАЛЬНАЯ_СУММА);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ВИДЫ_ОПЕРАЦИЙTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ВИДЫ_ОПЕРАЦИЙTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ВИДЫ_ОПЕРАЦИЙ";
            tableMapping.ColumnMappings.Add("КОД_ОПЕРАЦИИ", "КОД_ОПЕРАЦИИ");
            tableMapping.ColumnMappings.Add("ВИД_ОПЕРАЦИИ", "ВИД_ОПЕРАЦИИ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ВИДЫ_ОПЕРАЦИЙ] WHERE (([КОД_ОПЕРАЦИИ] = @Original_КОД_ОПЕРАЦИИ" +
                ") AND ((@IsNull_ВИД_ОПЕРАЦИИ = 1 AND [ВИД_ОПЕРАЦИИ] IS NULL) OR ([ВИД_ОПЕРАЦИИ] " +
                "= @Original_ВИД_ОПЕРАЦИИ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ВИД_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВИД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ВИД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВИД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ВИДЫ_ОПЕРАЦИЙ] ([КОД_ОПЕРАЦИИ], [ВИД_ОПЕРАЦИИ]) VALUES (@КОД_О" +
                "ПЕРАЦИИ, @ВИД_ОПЕРАЦИИ);\r\nSELECT КОД_ОПЕРАЦИИ, ВИД_ОПЕРАЦИИ FROM ВИДЫ_ОПЕРАЦИЙ W" +
                "HERE (КОД_ОПЕРАЦИИ = @КОД_ОПЕРАЦИИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВИД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВИД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ВИДЫ_ОПЕРАЦИЙ] SET [КОД_ОПЕРАЦИИ] = @КОД_ОПЕРАЦИИ, [ВИД_ОПЕРАЦИИ] = @ВИД_ОПЕРАЦИИ WHERE (([КОД_ОПЕРАЦИИ] = @Original_КОД_ОПЕРАЦИИ) AND ((@IsNull_ВИД_ОПЕРАЦИИ = 1 AND [ВИД_ОПЕРАЦИИ] IS NULL) OR ([ВИД_ОПЕРАЦИИ] = @Original_ВИД_ОПЕРАЦИИ)));
SELECT КОД_ОПЕРАЦИИ, ВИД_ОПЕРАЦИИ FROM ВИДЫ_ОПЕРАЦИЙ WHERE (КОД_ОПЕРАЦИИ = @КОД_ОПЕРАЦИИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВИД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВИД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ВИД_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВИД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ВИД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВИД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_ОПЕРАЦИИ, ВИД_ОПЕРАЦИИ FROM dbo.ВИДЫ_ОПЕРАЦИЙ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ВИДЫ_ОПЕРАЦИЙDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ВИДЫ_ОПЕРАЦИЙDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ВИДЫ_ОПЕРАЦИЙDataTable dataTable = new DataSet1.ВИДЫ_ОПЕРАЦИЙDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ВИДЫ_ОПЕРАЦИЙDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ВИДЫ_ОПЕРАЦИЙ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_КОД_ОПЕРАЦИИ, string Original_ВИД_ОПЕРАЦИИ) {
            if ((Original_КОД_ОПЕРАЦИИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_ОПЕРАЦИИ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_КОД_ОПЕРАЦИИ));
            }
            if ((Original_ВИД_ОПЕРАЦИИ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ВИД_ОПЕРАЦИИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string КОД_ОПЕРАЦИИ, string ВИД_ОПЕРАЦИИ) {
            if ((КОД_ОПЕРАЦИИ == null)) {
                throw new global::System.ArgumentNullException("КОД_ОПЕРАЦИИ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(КОД_ОПЕРАЦИИ));
            }
            if ((ВИД_ОПЕРАЦИИ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ВИД_ОПЕРАЦИИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string КОД_ОПЕРАЦИИ, string ВИД_ОПЕРАЦИИ, string Original_КОД_ОПЕРАЦИИ, string Original_ВИД_ОПЕРАЦИИ) {
            if ((КОД_ОПЕРАЦИИ == null)) {
                throw new global::System.ArgumentNullException("КОД_ОПЕРАЦИИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(КОД_ОПЕРАЦИИ));
            }
            if ((ВИД_ОПЕРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ВИД_ОПЕРАЦИИ));
            }
            if ((Original_КОД_ОПЕРАЦИИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_ОПЕРАЦИИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_КОД_ОПЕРАЦИИ));
            }
            if ((Original_ВИД_ОПЕРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ВИД_ОПЕРАЦИИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ВИД_ОПЕРАЦИИ, string Original_КОД_ОПЕРАЦИИ, string Original_ВИД_ОПЕРАЦИИ) {
            return this.Update(Original_КОД_ОПЕРАЦИИ, ВИД_ОПЕРАЦИИ, Original_КОД_ОПЕРАЦИИ, Original_ВИД_ОПЕРАЦИИ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ДАННЫЕ_ВХОДАTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ДАННЫЕ_ВХОДАTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ДАННЫЕ_ВХОДА";
            tableMapping.ColumnMappings.Add("LOGIN", "LOGIN");
            tableMapping.ColumnMappings.Add("ПАРОЛЬ", "ПАРОЛЬ");
            tableMapping.ColumnMappings.Add("НОМЕР_СОТРУДНИКА", "НОМЕР_СОТРУДНИКА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ДАННЫЕ_ВХОДА] WHERE (([LOGIN] = @Original_LOGIN) AND ((@IsNull_ПАРОЛЬ = 1 AND [ПАРОЛЬ] IS NULL) OR ([ПАРОЛЬ] = @Original_ПАРОЛЬ)) AND ((@IsNull_НОМЕР_СОТРУДНИКА = 1 AND [НОМЕР_СОТРУДНИКА] IS NULL) OR ([НОМЕР_СОТРУДНИКА] = @Original_НОМЕР_СОТРУДНИКА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПАРОЛЬ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАРОЛЬ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПАРОЛЬ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАРОЛЬ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ДАННЫЕ_ВХОДА] ([LOGIN], [ПАРОЛЬ], [НОМЕР_СОТРУДНИКА]) VALUES (" +
                "@LOGIN, @ПАРОЛЬ, @НОМЕР_СОТРУДНИКА);\r\nSELECT LOGIN, ПАРОЛЬ, НОМЕР_СОТРУДНИКА FRO" +
                "M ДАННЫЕ_ВХОДА WHERE (LOGIN = @LOGIN)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПАРОЛЬ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАРОЛЬ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ДАННЫЕ_ВХОДА] SET [LOGIN] = @LOGIN, [ПАРОЛЬ] = @ПАРОЛЬ, [НОМЕР_СОТРУДНИКА] = @НОМЕР_СОТРУДНИКА WHERE (([LOGIN] = @Original_LOGIN) AND ((@IsNull_ПАРОЛЬ = 1 AND [ПАРОЛЬ] IS NULL) OR ([ПАРОЛЬ] = @Original_ПАРОЛЬ)) AND ((@IsNull_НОМЕР_СОТРУДНИКА = 1 AND [НОМЕР_СОТРУДНИКА] IS NULL) OR ([НОМЕР_СОТРУДНИКА] = @Original_НОМЕР_СОТРУДНИКА)));
SELECT LOGIN, ПАРОЛЬ, НОМЕР_СОТРУДНИКА FROM ДАННЫЕ_ВХОДА WHERE (LOGIN = @LOGIN)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПАРОЛЬ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАРОЛЬ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПАРОЛЬ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАРОЛЬ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПАРОЛЬ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАРОЛЬ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LOGIN, ПАРОЛЬ, НОМЕР_СОТРУДНИКА FROM dbo.ДАННЫЕ_ВХОДА";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ДАННЫЕ_ВХОДАDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ДАННЫЕ_ВХОДАDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ДАННЫЕ_ВХОДАDataTable dataTable = new DataSet1.ДАННЫЕ_ВХОДАDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ДАННЫЕ_ВХОДАDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ДАННЫЕ_ВХОДА");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_LOGIN, string Original_ПАРОЛЬ, global::System.Nullable<int> Original_НОМЕР_СОТРУДНИКА) {
            if ((Original_LOGIN == null)) {
                throw new global::System.ArgumentNullException("Original_LOGIN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LOGIN));
            }
            if ((Original_ПАРОЛЬ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ПАРОЛЬ));
            }
            if ((Original_НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string LOGIN, string ПАРОЛЬ, global::System.Nullable<int> НОМЕР_СОТРУДНИКА) {
            if ((LOGIN == null)) {
                throw new global::System.ArgumentNullException("LOGIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LOGIN));
            }
            if ((ПАРОЛЬ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ПАРОЛЬ));
            }
            if ((НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string LOGIN, string ПАРОЛЬ, global::System.Nullable<int> НОМЕР_СОТРУДНИКА, string Original_LOGIN, string Original_ПАРОЛЬ, global::System.Nullable<int> Original_НОМЕР_СОТРУДНИКА) {
            if ((LOGIN == null)) {
                throw new global::System.ArgumentNullException("LOGIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LOGIN));
            }
            if ((ПАРОЛЬ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ПАРОЛЬ));
            }
            if ((НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_LOGIN == null)) {
                throw new global::System.ArgumentNullException("Original_LOGIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_LOGIN));
            }
            if ((Original_ПАРОЛЬ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ПАРОЛЬ));
            }
            if ((Original_НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ПАРОЛЬ, global::System.Nullable<int> НОМЕР_СОТРУДНИКА, string Original_LOGIN, string Original_ПАРОЛЬ, global::System.Nullable<int> Original_НОМЕР_СОТРУДНИКА) {
            return this.Update(Original_LOGIN, ПАРОЛЬ, НОМЕР_СОТРУДНИКА, Original_LOGIN, Original_ПАРОЛЬ, Original_НОМЕР_СОТРУДНИКА);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ДОГОВОРЫ_КЛИЕНТОВTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ДОГОВОРЫ_КЛИЕНТОВTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ДОГОВОРЫ_КЛИЕНТОВ";
            tableMapping.ColumnMappings.Add("НОМЕР_ДОГОВОРА", "НОМЕР_ДОГОВОРА");
            tableMapping.ColumnMappings.Add("НОМЕР_КЛИЕНТА", "НОМЕР_КЛИЕНТА");
            tableMapping.ColumnMappings.Add("ДАТА_ЗАКЛЮЧЕНИЯ", "ДАТА_ЗАКЛЮЧЕНИЯ");
            tableMapping.ColumnMappings.Add("ДАТА_ОКОНЧАНИЯ", "ДАТА_ОКОНЧАНИЯ");
            tableMapping.ColumnMappings.Add("КОД_УСЛУГИ", "КОД_УСЛУГИ");
            tableMapping.ColumnMappings.Add("НОМЕР_СЧЁТА", "НОМЕР_СЧЁТА");
            tableMapping.ColumnMappings.Add("НОМЕР_СОТРУДНИКА", "НОМЕР_СОТРУДНИКА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ДОГОВОРЫ_КЛИЕНТОВ] WHERE (([НОМЕР_ДОГОВОРА] = @Original_НОМЕР_ДОГОВОРА) AND ((@IsNull_НОМЕР_КЛИЕНТА = 1 AND [НОМЕР_КЛИЕНТА] IS NULL) OR ([НОМЕР_КЛИЕНТА] = @Original_НОМЕР_КЛИЕНТА)) AND ((@IsNull_ДАТА_ЗАКЛЮЧЕНИЯ = 1 AND [ДАТА_ЗАКЛЮЧЕНИЯ] IS NULL) OR ([ДАТА_ЗАКЛЮЧЕНИЯ] = @Original_ДАТА_ЗАКЛЮЧЕНИЯ)) AND ((@IsNull_ДАТА_ОКОНЧАНИЯ = 1 AND [ДАТА_ОКОНЧАНИЯ] IS NULL) OR ([ДАТА_ОКОНЧАНИЯ] = @Original_ДАТА_ОКОНЧАНИЯ)) AND ((@IsNull_КОД_УСЛУГИ = 1 AND [КОД_УСЛУГИ] IS NULL) OR ([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ)) AND ((@IsNull_НОМЕР_СЧЁТА = 1 AND [НОМЕР_СЧЁТА] IS NULL) OR ([НОМЕР_СЧЁТА] = @Original_НОМЕР_СЧЁТА)) AND ((@IsNull_НОМЕР_СОТРУДНИКА = 1 AND [НОМЕР_СОТРУДНИКА] IS NULL) OR ([НОМЕР_СОТРУДНИКА] = @Original_НОМЕР_СОТРУДНИКА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ДОГОВОРА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДОГОВОРА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ОКОНЧАНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОКОНЧАНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ОКОНЧАНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОКОНЧАНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ДОГОВОРЫ_КЛИЕНТОВ] ([НОМЕР_ДОГОВОРА], [НОМЕР_КЛИЕНТА], [ДАТА_ЗАКЛЮЧЕНИЯ], [ДАТА_ОКОНЧАНИЯ], [КОД_УСЛУГИ], [НОМЕР_СЧЁТА], [НОМЕР_СОТРУДНИКА]) VALUES (@НОМЕР_ДОГОВОРА, @НОМЕР_КЛИЕНТА, @ДАТА_ЗАКЛЮЧЕНИЯ, @ДАТА_ОКОНЧАНИЯ, @КОД_УСЛУГИ, @НОМЕР_СЧЁТА, @НОМЕР_СОТРУДНИКА);
SELECT НОМЕР_ДОГОВОРА, НОМЕР_КЛИЕНТА, ДАТА_ЗАКЛЮЧЕНИЯ, ДАТА_ОКОНЧАНИЯ, КОД_УСЛУГИ, НОМЕР_СЧЁТА, НОМЕР_СОТРУДНИКА FROM ДОГОВОРЫ_КЛИЕНТОВ WHERE (НОМЕР_ДОГОВОРА = @НОМЕР_ДОГОВОРА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ДОГОВОРА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДОГОВОРА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ОКОНЧАНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОКОНЧАНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ДОГОВОРЫ_КЛИЕНТОВ] SET [НОМЕР_ДОГОВОРА] = @НОМЕР_ДОГОВОРА, [НОМЕР_КЛИЕНТА] = @НОМЕР_КЛИЕНТА, [ДАТА_ЗАКЛЮЧЕНИЯ] = @ДАТА_ЗАКЛЮЧЕНИЯ, [ДАТА_ОКОНЧАНИЯ] = @ДАТА_ОКОНЧАНИЯ, [КОД_УСЛУГИ] = @КОД_УСЛУГИ, [НОМЕР_СЧЁТА] = @НОМЕР_СЧЁТА, [НОМЕР_СОТРУДНИКА] = @НОМЕР_СОТРУДНИКА WHERE (([НОМЕР_ДОГОВОРА] = @Original_НОМЕР_ДОГОВОРА) AND ((@IsNull_НОМЕР_КЛИЕНТА = 1 AND [НОМЕР_КЛИЕНТА] IS NULL) OR ([НОМЕР_КЛИЕНТА] = @Original_НОМЕР_КЛИЕНТА)) AND ((@IsNull_ДАТА_ЗАКЛЮЧЕНИЯ = 1 AND [ДАТА_ЗАКЛЮЧЕНИЯ] IS NULL) OR ([ДАТА_ЗАКЛЮЧЕНИЯ] = @Original_ДАТА_ЗАКЛЮЧЕНИЯ)) AND ((@IsNull_ДАТА_ОКОНЧАНИЯ = 1 AND [ДАТА_ОКОНЧАНИЯ] IS NULL) OR ([ДАТА_ОКОНЧАНИЯ] = @Original_ДАТА_ОКОНЧАНИЯ)) AND ((@IsNull_КОД_УСЛУГИ = 1 AND [КОД_УСЛУГИ] IS NULL) OR ([КОД_УСЛУГИ] = @Original_КОД_УСЛУГИ)) AND ((@IsNull_НОМЕР_СЧЁТА = 1 AND [НОМЕР_СЧЁТА] IS NULL) OR ([НОМЕР_СЧЁТА] = @Original_НОМЕР_СЧЁТА)) AND ((@IsNull_НОМЕР_СОТРУДНИКА = 1 AND [НОМЕР_СОТРУДНИКА] IS NULL) OR ([НОМЕР_СОТРУДНИКА] = @Original_НОМЕР_СОТРУДНИКА)));
SELECT НОМЕР_ДОГОВОРА, НОМЕР_КЛИЕНТА, ДАТА_ЗАКЛЮЧЕНИЯ, ДАТА_ОКОНЧАНИЯ, КОД_УСЛУГИ, НОМЕР_СЧЁТА, НОМЕР_СОТРУДНИКА FROM ДОГОВОРЫ_КЛИЕНТОВ WHERE (НОМЕР_ДОГОВОРА = @НОМЕР_ДОГОВОРА)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ДОГОВОРА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДОГОВОРА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ОКОНЧАНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОКОНЧАНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ДОГОВОРА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДОГОВОРА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ЗАКЛЮЧЕНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ОКОНЧАНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОКОНЧАНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ОКОНЧАНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОКОНЧАНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_УСЛУГИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_УСЛУГИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_УСЛУГИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT НОМЕР_ДОГОВОРА, НОМЕР_КЛИЕНТА, ДАТА_ЗАКЛЮЧЕНИЯ, ДАТА_ОКОНЧАНИЯ, КОД_УСЛУГИ" +
                ", НОМЕР_СЧЁТА, НОМЕР_СОТРУДНИКА FROM dbo.ДОГОВОРЫ_КЛИЕНТОВ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ДОГОВОРЫ_КЛИЕНТОВDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ДОГОВОРЫ_КЛИЕНТОВDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ДОГОВОРЫ_КЛИЕНТОВDataTable dataTable = new DataSet1.ДОГОВОРЫ_КЛИЕНТОВDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ДОГОВОРЫ_КЛИЕНТОВDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ДОГОВОРЫ_КЛИЕНТОВ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_НОМЕР_ДОГОВОРА, global::System.Nullable<int> Original_НОМЕР_КЛИЕНТА, global::System.Nullable<global::System.DateTime> Original_ДАТА_ЗАКЛЮЧЕНИЯ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ОКОНЧАНИЯ, string Original_КОД_УСЛУГИ, string Original_НОМЕР_СЧЁТА, global::System.Nullable<int> Original_НОМЕР_СОТРУДНИКА) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_НОМЕР_ДОГОВОРА));
            if ((Original_НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ЗАКЛЮЧЕНИЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_ДАТА_ЗАКЛЮЧЕНИЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ОКОНЧАНИЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ДАТА_ОКОНЧАНИЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_УСЛУГИ == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_НОМЕР_СЧЁТА == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_НОМЕР_СЧЁТА));
            }
            if ((Original_НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int НОМЕР_ДОГОВОРА, global::System.Nullable<int> НОМЕР_КЛИЕНТА, global::System.Nullable<global::System.DateTime> ДАТА_ЗАКЛЮЧЕНИЯ, global::System.Nullable<global::System.DateTime> ДАТА_ОКОНЧАНИЯ, string КОД_УСЛУГИ, string НОМЕР_СЧЁТА, global::System.Nullable<int> НОМЕР_СОТРУДНИКА) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(НОМЕР_ДОГОВОРА));
            if ((НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ЗАКЛЮЧЕНИЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ДАТА_ЗАКЛЮЧЕНИЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ОКОНЧАНИЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ДАТА_ОКОНЧАНИЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((КОД_УСЛУГИ == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((НОМЕР_СЧЁТА == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(НОМЕР_СЧЁТА));
            }
            if ((НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int НОМЕР_ДОГОВОРА, global::System.Nullable<int> НОМЕР_КЛИЕНТА, global::System.Nullable<global::System.DateTime> ДАТА_ЗАКЛЮЧЕНИЯ, global::System.Nullable<global::System.DateTime> ДАТА_ОКОНЧАНИЯ, string КОД_УСЛУГИ, string НОМЕР_СЧЁТА, global::System.Nullable<int> НОМЕР_СОТРУДНИКА, int Original_НОМЕР_ДОГОВОРА, global::System.Nullable<int> Original_НОМЕР_КЛИЕНТА, global::System.Nullable<global::System.DateTime> Original_ДАТА_ЗАКЛЮЧЕНИЯ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ОКОНЧАНИЯ, string Original_КОД_УСЛУГИ, string Original_НОМЕР_СЧЁТА, global::System.Nullable<int> Original_НОМЕР_СОТРУДНИКА) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(НОМЕР_ДОГОВОРА));
            if ((НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ЗАКЛЮЧЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ДАТА_ЗАКЛЮЧЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ОКОНЧАНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ДАТА_ОКОНЧАНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((КОД_УСЛУГИ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(КОД_УСЛУГИ));
            }
            if ((НОМЕР_СЧЁТА == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(НОМЕР_СЧЁТА));
            }
            if ((НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_НОМЕР_ДОГОВОРА));
            if ((Original_НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ЗАКЛЮЧЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_ДАТА_ЗАКЛЮЧЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ОКОНЧАНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_ДАТА_ОКОНЧАНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_УСЛУГИ == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_КОД_УСЛУГИ));
            }
            if ((Original_НОМЕР_СЧЁТА == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_НОМЕР_СЧЁТА));
            }
            if ((Original_НОМЕР_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_НОМЕР_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> НОМЕР_КЛИЕНТА, global::System.Nullable<global::System.DateTime> ДАТА_ЗАКЛЮЧЕНИЯ, global::System.Nullable<global::System.DateTime> ДАТА_ОКОНЧАНИЯ, string КОД_УСЛУГИ, string НОМЕР_СЧЁТА, global::System.Nullable<int> НОМЕР_СОТРУДНИКА, int Original_НОМЕР_ДОГОВОРА, global::System.Nullable<int> Original_НОМЕР_КЛИЕНТА, global::System.Nullable<global::System.DateTime> Original_ДАТА_ЗАКЛЮЧЕНИЯ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ОКОНЧАНИЯ, string Original_КОД_УСЛУГИ, string Original_НОМЕР_СЧЁТА, global::System.Nullable<int> Original_НОМЕР_СОТРУДНИКА) {
            return this.Update(Original_НОМЕР_ДОГОВОРА, НОМЕР_КЛИЕНТА, ДАТА_ЗАКЛЮЧЕНИЯ, ДАТА_ОКОНЧАНИЯ, КОД_УСЛУГИ, НОМЕР_СЧЁТА, НОМЕР_СОТРУДНИКА, Original_НОМЕР_ДОГОВОРА, Original_НОМЕР_КЛИЕНТА, Original_ДАТА_ЗАКЛЮЧЕНИЯ, Original_ДАТА_ОКОНЧАНИЯ, Original_КОД_УСЛУГИ, Original_НОМЕР_СЧЁТА, Original_НОМЕР_СОТРУДНИКА);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ИСТОРИЯ_ОПЕРАЦИЙTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ИСТОРИЯ_ОПЕРАЦИЙTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ИСТОРИЯ_ОПЕРАЦИЙ";
            tableMapping.ColumnMappings.Add("НОМЕР_ОПЕРАЦИИ", "НОМЕР_ОПЕРАЦИИ");
            tableMapping.ColumnMappings.Add("КОД_ОПЕРАЦИИ", "КОД_ОПЕРАЦИИ");
            tableMapping.ColumnMappings.Add("НОМЕР_СЧЁТА", "НОМЕР_СЧЁТА");
            tableMapping.ColumnMappings.Add("КАК_СОВЕРШЕНО", "КАК_СОВЕРШЕНО");
            tableMapping.ColumnMappings.Add("СУММА_ОПЕРАЦИИ", "СУММА_ОПЕРАЦИИ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ИСТОРИЯ_ОПЕРАЦИЙ] WHERE (([НОМЕР_ОПЕРАЦИИ] = @Original_НОМЕР_ОПЕРАЦИИ) AND ((@IsNull_КОД_ОПЕРАЦИИ = 1 AND [КОД_ОПЕРАЦИИ] IS NULL) OR ([КОД_ОПЕРАЦИИ] = @Original_КОД_ОПЕРАЦИИ)) AND ((@IsNull_НОМЕР_СЧЁТА = 1 AND [НОМЕР_СЧЁТА] IS NULL) OR ([НОМЕР_СЧЁТА] = @Original_НОМЕР_СЧЁТА)) AND ((@IsNull_КАК_СОВЕРШЕНО = 1 AND [КАК_СОВЕРШЕНО] IS NULL) OR ([КАК_СОВЕРШЕНО] = @Original_КАК_СОВЕРШЕНО)) AND ((@IsNull_СУММА_ОПЕРАЦИИ = 1 AND [СУММА_ОПЕРАЦИИ] IS NULL) OR ([СУММА_ОПЕРАЦИИ] = @Original_СУММА_ОПЕРАЦИИ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КАК_СОВЕРШЕНО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КАК_СОВЕРШЕНО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КАК_СОВЕРШЕНО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КАК_СОВЕРШЕНО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СУММА_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СУММА_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СУММА_ОПЕРАЦИИ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СУММА_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ИСТОРИЯ_ОПЕРАЦИЙ] ([НОМЕР_ОПЕРАЦИИ], [КОД_ОПЕРАЦИИ], [НОМЕР_СЧЁТА], [КАК_СОВЕРШЕНО], [СУММА_ОПЕРАЦИИ]) VALUES (@НОМЕР_ОПЕРАЦИИ, @КОД_ОПЕРАЦИИ, @НОМЕР_СЧЁТА, @КАК_СОВЕРШЕНО, @СУММА_ОПЕРАЦИИ);
SELECT НОМЕР_ОПЕРАЦИИ, КОД_ОПЕРАЦИИ, НОМЕР_СЧЁТА, КАК_СОВЕРШЕНО, СУММА_ОПЕРАЦИИ FROM ИСТОРИЯ_ОПЕРАЦИЙ WHERE (НОМЕР_ОПЕРАЦИИ = @НОМЕР_ОПЕРАЦИИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КАК_СОВЕРШЕНО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КАК_СОВЕРШЕНО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СУММА_ОПЕРАЦИИ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СУММА_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ИСТОРИЯ_ОПЕРАЦИЙ] SET [НОМЕР_ОПЕРАЦИИ] = @НОМЕР_ОПЕРАЦИИ, [КОД_ОПЕРАЦИИ] = @КОД_ОПЕРАЦИИ, [НОМЕР_СЧЁТА] = @НОМЕР_СЧЁТА, [КАК_СОВЕРШЕНО] = @КАК_СОВЕРШЕНО, [СУММА_ОПЕРАЦИИ] = @СУММА_ОПЕРАЦИИ WHERE (([НОМЕР_ОПЕРАЦИИ] = @Original_НОМЕР_ОПЕРАЦИИ) AND ((@IsNull_КОД_ОПЕРАЦИИ = 1 AND [КОД_ОПЕРАЦИИ] IS NULL) OR ([КОД_ОПЕРАЦИИ] = @Original_КОД_ОПЕРАЦИИ)) AND ((@IsNull_НОМЕР_СЧЁТА = 1 AND [НОМЕР_СЧЁТА] IS NULL) OR ([НОМЕР_СЧЁТА] = @Original_НОМЕР_СЧЁТА)) AND ((@IsNull_КАК_СОВЕРШЕНО = 1 AND [КАК_СОВЕРШЕНО] IS NULL) OR ([КАК_СОВЕРШЕНО] = @Original_КАК_СОВЕРШЕНО)) AND ((@IsNull_СУММА_ОПЕРАЦИИ = 1 AND [СУММА_ОПЕРАЦИИ] IS NULL) OR ([СУММА_ОПЕРАЦИИ] = @Original_СУММА_ОПЕРАЦИИ)));
SELECT НОМЕР_ОПЕРАЦИИ, КОД_ОПЕРАЦИИ, НОМЕР_СЧЁТА, КАК_СОВЕРШЕНО, СУММА_ОПЕРАЦИИ FROM ИСТОРИЯ_ОПЕРАЦИЙ WHERE (НОМЕР_ОПЕРАЦИИ = @НОМЕР_ОПЕРАЦИИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КАК_СОВЕРШЕНО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КАК_СОВЕРШЕНО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СУММА_ОПЕРАЦИИ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СУММА_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ОПЕРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КАК_СОВЕРШЕНО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КАК_СОВЕРШЕНО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КАК_СОВЕРШЕНО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КАК_СОВЕРШЕНО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СУММА_ОПЕРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СУММА_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СУММА_ОПЕРАЦИИ", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СУММА_ОПЕРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT НОМЕР_ОПЕРАЦИИ, КОД_ОПЕРАЦИИ, НОМЕР_СЧЁТА, КАК_СОВЕРШЕНО, СУММА_ОПЕРАЦИИ F" +
                "ROM dbo.ИСТОРИЯ_ОПЕРАЦИЙ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ИСТОРИЯ_ОПЕРАЦИЙDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ИСТОРИЯ_ОПЕРАЦИЙDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ИСТОРИЯ_ОПЕРАЦИЙDataTable dataTable = new DataSet1.ИСТОРИЯ_ОПЕРАЦИЙDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ИСТОРИЯ_ОПЕРАЦИЙDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ИСТОРИЯ_ОПЕРАЦИЙ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_НОМЕР_ОПЕРАЦИИ, string Original_КОД_ОПЕРАЦИИ, string Original_НОМЕР_СЧЁТА, string Original_КАК_СОВЕРШЕНО, global::System.Nullable<decimal> Original_СУММА_ОПЕРАЦИИ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_НОМЕР_ОПЕРАЦИИ));
            if ((Original_КОД_ОПЕРАЦИИ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_КОД_ОПЕРАЦИИ));
            }
            if ((Original_НОМЕР_СЧЁТА == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_НОМЕР_СЧЁТА));
            }
            if ((Original_КАК_СОВЕРШЕНО == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_КАК_СОВЕРШЕНО));
            }
            if ((Original_СУММА_ОПЕРАЦИИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_СУММА_ОПЕРАЦИИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int НОМЕР_ОПЕРАЦИИ, string КОД_ОПЕРАЦИИ, string НОМЕР_СЧЁТА, string КАК_СОВЕРШЕНО, global::System.Nullable<decimal> СУММА_ОПЕРАЦИИ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(НОМЕР_ОПЕРАЦИИ));
            if ((КОД_ОПЕРАЦИИ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(КОД_ОПЕРАЦИИ));
            }
            if ((НОМЕР_СЧЁТА == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(НОМЕР_СЧЁТА));
            }
            if ((КАК_СОВЕРШЕНО == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(КАК_СОВЕРШЕНО));
            }
            if ((СУММА_ОПЕРАЦИИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(СУММА_ОПЕРАЦИИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int НОМЕР_ОПЕРАЦИИ, string КОД_ОПЕРАЦИИ, string НОМЕР_СЧЁТА, string КАК_СОВЕРШЕНО, global::System.Nullable<decimal> СУММА_ОПЕРАЦИИ, int Original_НОМЕР_ОПЕРАЦИИ, string Original_КОД_ОПЕРАЦИИ, string Original_НОМЕР_СЧЁТА, string Original_КАК_СОВЕРШЕНО, global::System.Nullable<decimal> Original_СУММА_ОПЕРАЦИИ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(НОМЕР_ОПЕРАЦИИ));
            if ((КОД_ОПЕРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(КОД_ОПЕРАЦИИ));
            }
            if ((НОМЕР_СЧЁТА == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(НОМЕР_СЧЁТА));
            }
            if ((КАК_СОВЕРШЕНО == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(КАК_СОВЕРШЕНО));
            }
            if ((СУММА_ОПЕРАЦИИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(СУММА_ОПЕРАЦИИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_НОМЕР_ОПЕРАЦИИ));
            if ((Original_КОД_ОПЕРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_КОД_ОПЕРАЦИИ));
            }
            if ((Original_НОМЕР_СЧЁТА == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_НОМЕР_СЧЁТА));
            }
            if ((Original_КАК_СОВЕРШЕНО == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_КАК_СОВЕРШЕНО));
            }
            if ((Original_СУММА_ОПЕРАЦИИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_СУММА_ОПЕРАЦИИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string КОД_ОПЕРАЦИИ, string НОМЕР_СЧЁТА, string КАК_СОВЕРШЕНО, global::System.Nullable<decimal> СУММА_ОПЕРАЦИИ, int Original_НОМЕР_ОПЕРАЦИИ, string Original_КОД_ОПЕРАЦИИ, string Original_НОМЕР_СЧЁТА, string Original_КАК_СОВЕРШЕНО, global::System.Nullable<decimal> Original_СУММА_ОПЕРАЦИИ) {
            return this.Update(Original_НОМЕР_ОПЕРАЦИИ, КОД_ОПЕРАЦИИ, НОМЕР_СЧЁТА, КАК_СОВЕРШЕНО, СУММА_ОПЕРАЦИИ, Original_НОМЕР_ОПЕРАЦИИ, Original_КОД_ОПЕРАЦИИ, Original_НОМЕР_СЧЁТА, Original_КАК_СОВЕРШЕНО, Original_СУММА_ОПЕРАЦИИ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КЛИЕНТЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public КЛИЕНТЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "КЛИЕНТЫ";
            tableMapping.ColumnMappings.Add("НОМЕР_КЛИЕНТА", "НОМЕР_КЛИЕНТА");
            tableMapping.ColumnMappings.Add("ФАМИЛИЯ", "ФАМИЛИЯ");
            tableMapping.ColumnMappings.Add("ИМЯ", "ИМЯ");
            tableMapping.ColumnMappings.Add("ОТЧЕСТВО", "ОТЧЕСТВО");
            tableMapping.ColumnMappings.Add("ТЕЛЕФОН", "ТЕЛЕФОН");
            tableMapping.ColumnMappings.Add("СЕРИЯ_НОМЕР", "СЕРИЯ_НОМЕР");
            tableMapping.ColumnMappings.Add("ПОЛ", "ПОЛ");
            tableMapping.ColumnMappings.Add("АДРЕС_РЕГИСТРАЦИИ", "АДРЕС_РЕГИСТРАЦИИ");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("ФАКТИЧЕСКИЙ_АДРЕС", "ФАКТИЧЕСКИЙ_АДРЕС");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[КЛИЕНТЫ] WHERE (([НОМЕР_КЛИЕНТА] = @Original_НОМЕР_КЛИЕНТА) AND ((@IsNull_ФАМИЛИЯ = 1 AND [ФАМИЛИЯ] IS NULL) OR ([ФАМИЛИЯ] = @Original_ФАМИЛИЯ)) AND ((@IsNull_ИМЯ = 1 AND [ИМЯ] IS NULL) OR ([ИМЯ] = @Original_ИМЯ)) AND ((@IsNull_ОТЧЕСТВО = 1 AND [ОТЧЕСТВО] IS NULL) OR ([ОТЧЕСТВО] = @Original_ОТЧЕСТВО)) AND ((@IsNull_ТЕЛЕФОН = 1 AND [ТЕЛЕФОН] IS NULL) OR ([ТЕЛЕФОН] = @Original_ТЕЛЕФОН)) AND ((@IsNull_СЕРИЯ_НОМЕР = 1 AND [СЕРИЯ_НОМЕР] IS NULL) OR ([СЕРИЯ_НОМЕР] = @Original_СЕРИЯ_НОМЕР)) AND ((@IsNull_ПОЛ = 1 AND [ПОЛ] IS NULL) OR ([ПОЛ] = @Original_ПОЛ)) AND ((@IsNull_АДРЕС_РЕГИСТРАЦИИ = 1 AND [АДРЕС_РЕГИСТРАЦИИ] IS NULL) OR ([АДРЕС_РЕГИСТРАЦИИ] = @Original_АДРЕС_РЕГИСТРАЦИИ)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_ФАКТИЧЕСКИЙ_АДРЕС = 1 AND [ФАКТИЧЕСКИЙ_АДРЕС] IS NULL) OR ([ФАКТИЧЕСКИЙ_АДРЕС] = @Original_ФАКТИЧЕСКИЙ_АДРЕС)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАМИЛИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАМИЛИЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ИМЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ИМЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТЧЕСТВО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТЧЕСТВО", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕЛЕФОН", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПОЛ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[КЛИЕНТЫ] ([НОМЕР_КЛИЕНТА], [ФАМИЛИЯ], [ИМЯ], [ОТЧЕСТВО], [ТЕЛЕФОН], [СЕРИЯ_НОМЕР], [ПОЛ], [АДРЕС_РЕГИСТРАЦИИ], [EMAIL], [ФАКТИЧЕСКИЙ_АДРЕС]) VALUES (@НОМЕР_КЛИЕНТА, @ФАМИЛИЯ, @ИМЯ, @ОТЧЕСТВО, @ТЕЛЕФОН, @СЕРИЯ_НОМЕР, @ПОЛ, @АДРЕС_РЕГИСТРАЦИИ, @EMAIL, @ФАКТИЧЕСКИЙ_АДРЕС);
SELECT НОМЕР_КЛИЕНТА, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, ТЕЛЕФОН, СЕРИЯ_НОМЕР, ПОЛ, АДРЕС_РЕГИСТРАЦИИ, EMAIL, ФАКТИЧЕСКИЙ_АДРЕС FROM КЛИЕНТЫ WHERE (НОМЕР_КЛИЕНТА = @НОМЕР_КЛИЕНТА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАМИЛИЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ИМЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТЧЕСТВО", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[КЛИЕНТЫ] SET [НОМЕР_КЛИЕНТА] = @НОМЕР_КЛИЕНТА, [ФАМИЛИЯ] = @ФАМИЛИЯ, [ИМЯ] = @ИМЯ, [ОТЧЕСТВО] = @ОТЧЕСТВО, [ТЕЛЕФОН] = @ТЕЛЕФОН, [СЕРИЯ_НОМЕР] = @СЕРИЯ_НОМЕР, [ПОЛ] = @ПОЛ, [АДРЕС_РЕГИСТРАЦИИ] = @АДРЕС_РЕГИСТРАЦИИ, [EMAIL] = @EMAIL, [ФАКТИЧЕСКИЙ_АДРЕС] = @ФАКТИЧЕСКИЙ_АДРЕС WHERE (([НОМЕР_КЛИЕНТА] = @Original_НОМЕР_КЛИЕНТА) AND ((@IsNull_ФАМИЛИЯ = 1 AND [ФАМИЛИЯ] IS NULL) OR ([ФАМИЛИЯ] = @Original_ФАМИЛИЯ)) AND ((@IsNull_ИМЯ = 1 AND [ИМЯ] IS NULL) OR ([ИМЯ] = @Original_ИМЯ)) AND ((@IsNull_ОТЧЕСТВО = 1 AND [ОТЧЕСТВО] IS NULL) OR ([ОТЧЕСТВО] = @Original_ОТЧЕСТВО)) AND ((@IsNull_ТЕЛЕФОН = 1 AND [ТЕЛЕФОН] IS NULL) OR ([ТЕЛЕФОН] = @Original_ТЕЛЕФОН)) AND ((@IsNull_СЕРИЯ_НОМЕР = 1 AND [СЕРИЯ_НОМЕР] IS NULL) OR ([СЕРИЯ_НОМЕР] = @Original_СЕРИЯ_НОМЕР)) AND ((@IsNull_ПОЛ = 1 AND [ПОЛ] IS NULL) OR ([ПОЛ] = @Original_ПОЛ)) AND ((@IsNull_АДРЕС_РЕГИСТРАЦИИ = 1 AND [АДРЕС_РЕГИСТРАЦИИ] IS NULL) OR ([АДРЕС_РЕГИСТРАЦИИ] = @Original_АДРЕС_РЕГИСТРАЦИИ)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_ФАКТИЧЕСКИЙ_АДРЕС = 1 AND [ФАКТИЧЕСКИЙ_АДРЕС] IS NULL) OR ([ФАКТИЧЕСКИЙ_АДРЕС] = @Original_ФАКТИЧЕСКИЙ_АДРЕС)));
SELECT НОМЕР_КЛИЕНТА, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, ТЕЛЕФОН, СЕРИЯ_НОМЕР, ПОЛ, АДРЕС_РЕГИСТРАЦИИ, EMAIL, ФАКТИЧЕСКИЙ_АДРЕС FROM КЛИЕНТЫ WHERE (НОМЕР_КЛИЕНТА = @НОМЕР_КЛИЕНТА)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАМИЛИЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ИМЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТЧЕСТВО", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАМИЛИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАМИЛИЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ИМЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ИМЯ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТЧЕСТВО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТЧЕСТВО", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕЛЕФОН", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПОЛ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT НОМЕР_КЛИЕНТА, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, ТЕЛЕФОН, СЕРИЯ_НОМЕР, ПОЛ, АДРЕС_РЕ" +
                "ГИСТРАЦИИ, EMAIL, ФАКТИЧЕСКИЙ_АДРЕС FROM dbo.КЛИЕНТЫ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.КЛИЕНТЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.КЛИЕНТЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.КЛИЕНТЫDataTable dataTable = new DataSet1.КЛИЕНТЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.КЛИЕНТЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "КЛИЕНТЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_НОМЕР_КЛИЕНТА, string Original_ФАМИЛИЯ, string Original_ИМЯ, string Original_ОТЧЕСТВО, string Original_ТЕЛЕФОН, string Original_СЕРИЯ_НОМЕР, string Original_ПОЛ, string Original_АДРЕС_РЕГИСТРАЦИИ, string Original_EMAIL, string Original_ФАКТИЧЕСКИЙ_АДРЕС) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_НОМЕР_КЛИЕНТА));
            if ((Original_ФАМИЛИЯ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ФАМИЛИЯ));
            }
            if ((Original_ИМЯ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ИМЯ));
            }
            if ((Original_ОТЧЕСТВО == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ОТЧЕСТВО));
            }
            if ((Original_ТЕЛЕФОН == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ТЕЛЕФОН));
            }
            if ((Original_СЕРИЯ_НОМЕР == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_СЕРИЯ_НОМЕР));
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_EMAIL));
            }
            if ((Original_ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ФАКТИЧЕСКИЙ_АДРЕС));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int НОМЕР_КЛИЕНТА, string ФАМИЛИЯ, string ИМЯ, string ОТЧЕСТВО, string ТЕЛЕФОН, string СЕРИЯ_НОМЕР, string ПОЛ, string АДРЕС_РЕГИСТРАЦИИ, string EMAIL, string ФАКТИЧЕСКИЙ_АДРЕС) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(НОМЕР_КЛИЕНТА));
            if ((ФАМИЛИЯ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ФАМИЛИЯ));
            }
            if ((ИМЯ == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ИМЯ));
            }
            if ((ОТЧЕСТВО == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ОТЧЕСТВО));
            }
            if ((ТЕЛЕФОН == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ТЕЛЕФОН));
            }
            if ((СЕРИЯ_НОМЕР == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(СЕРИЯ_НОМЕР));
            }
            if ((ПОЛ == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ПОЛ));
            }
            if ((АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(EMAIL));
            }
            if ((ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ФАКТИЧЕСКИЙ_АДРЕС));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int НОМЕР_КЛИЕНТА, 
                    string ФАМИЛИЯ, 
                    string ИМЯ, 
                    string ОТЧЕСТВО, 
                    string ТЕЛЕФОН, 
                    string СЕРИЯ_НОМЕР, 
                    string ПОЛ, 
                    string АДРЕС_РЕГИСТРАЦИИ, 
                    string EMAIL, 
                    string ФАКТИЧЕСКИЙ_АДРЕС, 
                    int Original_НОМЕР_КЛИЕНТА, 
                    string Original_ФАМИЛИЯ, 
                    string Original_ИМЯ, 
                    string Original_ОТЧЕСТВО, 
                    string Original_ТЕЛЕФОН, 
                    string Original_СЕРИЯ_НОМЕР, 
                    string Original_ПОЛ, 
                    string Original_АДРЕС_РЕГИСТРАЦИИ, 
                    string Original_EMAIL, 
                    string Original_ФАКТИЧЕСКИЙ_АДРЕС) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(НОМЕР_КЛИЕНТА));
            if ((ФАМИЛИЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ФАМИЛИЯ));
            }
            if ((ИМЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ИМЯ));
            }
            if ((ОТЧЕСТВО == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ОТЧЕСТВО));
            }
            if ((ТЕЛЕФОН == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ТЕЛЕФОН));
            }
            if ((СЕРИЯ_НОМЕР == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(СЕРИЯ_НОМЕР));
            }
            if ((ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ПОЛ));
            }
            if ((АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(EMAIL));
            }
            if ((ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ФАКТИЧЕСКИЙ_АДРЕС));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_НОМЕР_КЛИЕНТА));
            if ((Original_ФАМИЛИЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ФАМИЛИЯ));
            }
            if ((Original_ИМЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ИМЯ));
            }
            if ((Original_ОТЧЕСТВО == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ОТЧЕСТВО));
            }
            if ((Original_ТЕЛЕФОН == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ТЕЛЕФОН));
            }
            if ((Original_СЕРИЯ_НОМЕР == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_СЕРИЯ_НОМЕР));
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_EMAIL));
            }
            if ((Original_ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_ФАКТИЧЕСКИЙ_АДРЕС));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ФАМИЛИЯ, 
                    string ИМЯ, 
                    string ОТЧЕСТВО, 
                    string ТЕЛЕФОН, 
                    string СЕРИЯ_НОМЕР, 
                    string ПОЛ, 
                    string АДРЕС_РЕГИСТРАЦИИ, 
                    string EMAIL, 
                    string ФАКТИЧЕСКИЙ_АДРЕС, 
                    int Original_НОМЕР_КЛИЕНТА, 
                    string Original_ФАМИЛИЯ, 
                    string Original_ИМЯ, 
                    string Original_ОТЧЕСТВО, 
                    string Original_ТЕЛЕФОН, 
                    string Original_СЕРИЯ_НОМЕР, 
                    string Original_ПОЛ, 
                    string Original_АДРЕС_РЕГИСТРАЦИИ, 
                    string Original_EMAIL, 
                    string Original_ФАКТИЧЕСКИЙ_АДРЕС) {
            return this.Update(Original_НОМЕР_КЛИЕНТА, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, ТЕЛЕФОН, СЕРИЯ_НОМЕР, ПОЛ, АДРЕС_РЕГИСТРАЦИИ, EMAIL, ФАКТИЧЕСКИЙ_АДРЕС, Original_НОМЕР_КЛИЕНТА, Original_ФАМИЛИЯ, Original_ИМЯ, Original_ОТЧЕСТВО, Original_ТЕЛЕФОН, Original_СЕРИЯ_НОМЕР, Original_ПОЛ, Original_АДРЕС_РЕГИСТРАЦИИ, Original_EMAIL, Original_ФАКТИЧЕСКИЙ_АДРЕС);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СОТРУДНИКИTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public СОТРУДНИКИTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СОТРУДНИКИ";
            tableMapping.ColumnMappings.Add("НОМЕР_СОТРУДНИКА", "НОМЕР_СОТРУДНИКА");
            tableMapping.ColumnMappings.Add("ИМЯ", "ИМЯ");
            tableMapping.ColumnMappings.Add("ОТЧЕСТВО", "ОТЧЕСТВО");
            tableMapping.ColumnMappings.Add("ФАМИЛИЯ", "ФАМИЛИЯ");
            tableMapping.ColumnMappings.Add("ДАТА_ПРИЁМА", "ДАТА_ПРИЁМА");
            tableMapping.ColumnMappings.Add("ПОЛ", "ПОЛ");
            tableMapping.ColumnMappings.Add("ТЕЛЕФОН", "ТЕЛЕФОН");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("НОМЕР_ОТДЕЛА", "НОМЕР_ОТДЕЛА");
            tableMapping.ColumnMappings.Add("АДРЕС_РЕГИСТРАЦИИ", "АДРЕС_РЕГИСТРАЦИИ");
            tableMapping.ColumnMappings.Add("ФАКТИЧЕСКИЙ_АДРЕС", "ФАКТИЧЕСКИЙ_АДРЕС");
            tableMapping.ColumnMappings.Add("СЕРИЯ_НОМЕР", "СЕРИЯ_НОМЕР");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[СОТРУДНИКИ] WHERE (([НОМЕР_СОТРУДНИКА] = @Original_НОМЕР_СОТРУДНИКА) AND ((@IsNull_ИМЯ = 1 AND [ИМЯ] IS NULL) OR ([ИМЯ] = @Original_ИМЯ)) AND ((@IsNull_ОТЧЕСТВО = 1 AND [ОТЧЕСТВО] IS NULL) OR ([ОТЧЕСТВО] = @Original_ОТЧЕСТВО)) AND ((@IsNull_ФАМИЛИЯ = 1 AND [ФАМИЛИЯ] IS NULL) OR ([ФАМИЛИЯ] = @Original_ФАМИЛИЯ)) AND ((@IsNull_ДАТА_ПРИЁМА = 1 AND [ДАТА_ПРИЁМА] IS NULL) OR ([ДАТА_ПРИЁМА] = @Original_ДАТА_ПРИЁМА)) AND ((@IsNull_ПОЛ = 1 AND [ПОЛ] IS NULL) OR ([ПОЛ] = @Original_ПОЛ)) AND ((@IsNull_ТЕЛЕФОН = 1 AND [ТЕЛЕФОН] IS NULL) OR ([ТЕЛЕФОН] = @Original_ТЕЛЕФОН)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_НОМЕР_ОТДЕЛА = 1 AND [НОМЕР_ОТДЕЛА] IS NULL) OR ([НОМЕР_ОТДЕЛА] = @Original_НОМЕР_ОТДЕЛА)) AND ((@IsNull_АДРЕС_РЕГИСТРАЦИИ = 1 AND [АДРЕС_РЕГИСТРАЦИИ] IS NULL) OR ([АДРЕС_РЕГИСТРАЦИИ] = @Original_АДРЕС_РЕГИСТРАЦИИ)) AND ((@IsNull_ФАКТИЧЕСКИЙ_АДРЕС = 1 AND [ФАКТИЧЕСКИЙ_АДРЕС] IS NULL) OR ([ФАКТИЧЕСКИЙ_АДРЕС] = @Original_ФАКТИЧЕСКИЙ_АДРЕС)) AND ((@IsNull_СЕРИЯ_НОМЕР = 1 AND [СЕРИЯ_НОМЕР] IS NULL) OR ([СЕРИЯ_НОМЕР] = @Original_СЕРИЯ_НОМЕР)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ИМЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ИМЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТЧЕСТВО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТЧЕСТВО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАМИЛИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАМИЛИЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ПРИЁМА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИЁМА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ПРИЁМА", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИЁМА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПОЛ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕЛЕФОН", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_ОТДЕЛА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОТДЕЛА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ОТДЕЛА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОТДЕЛА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[СОТРУДНИКИ] ([НОМЕР_СОТРУДНИКА], [ИМЯ], [ОТЧЕСТВО], [ФАМИЛИЯ], [ДАТА_ПРИЁМА], [ПОЛ], [ТЕЛЕФОН], [EMAIL], [НОМЕР_ОТДЕЛА], [АДРЕС_РЕГИСТРАЦИИ], [ФАКТИЧЕСКИЙ_АДРЕС], [СЕРИЯ_НОМЕР]) VALUES (@НОМЕР_СОТРУДНИКА, @ИМЯ, @ОТЧЕСТВО, @ФАМИЛИЯ, @ДАТА_ПРИЁМА, @ПОЛ, @ТЕЛЕФОН, @EMAIL, @НОМЕР_ОТДЕЛА, @АДРЕС_РЕГИСТРАЦИИ, @ФАКТИЧЕСКИЙ_АДРЕС, @СЕРИЯ_НОМЕР);
SELECT НОМЕР_СОТРУДНИКА, ИМЯ, ОТЧЕСТВО, ФАМИЛИЯ, ДАТА_ПРИЁМА, ПОЛ, ТЕЛЕФОН, EMAIL, НОМЕР_ОТДЕЛА, АДРЕС_РЕГИСТРАЦИИ, ФАКТИЧЕСКИЙ_АДРЕС, СЕРИЯ_НОМЕР FROM СОТРУДНИКИ WHERE (НОМЕР_СОТРУДНИКА = @НОМЕР_СОТРУДНИКА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ИМЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТЧЕСТВО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАМИЛИЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ПРИЁМА", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИЁМА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ОТДЕЛА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОТДЕЛА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[СОТРУДНИКИ] SET [НОМЕР_СОТРУДНИКА] = @НОМЕР_СОТРУДНИКА, [ИМЯ] = @ИМ" +
                "Я, [ОТЧЕСТВО] = @ОТЧЕСТВО, [ФАМИЛИЯ] = @ФАМИЛИЯ, [ДАТА_ПРИЁМА] = @ДАТА_ПРИЁМА, [" +
                "ПОЛ] = @ПОЛ, [ТЕЛЕФОН] = @ТЕЛЕФОН, [EMAIL] = @EMAIL, [НОМЕР_ОТДЕЛА] = @НОМЕР_ОТД" +
                "ЕЛА, [АДРЕС_РЕГИСТРАЦИИ] = @АДРЕС_РЕГИСТРАЦИИ, [ФАКТИЧЕСКИЙ_АДРЕС] = @ФАКТИЧЕСКИ" +
                "Й_АДРЕС, [СЕРИЯ_НОМЕР] = @СЕРИЯ_НОМЕР WHERE (([НОМЕР_СОТРУДНИКА] = @Original_НОМ" +
                "ЕР_СОТРУДНИКА) AND ((@IsNull_ИМЯ = 1 AND [ИМЯ] IS NULL) OR ([ИМЯ] = @Original_ИМ" +
                "Я)) AND ((@IsNull_ОТЧЕСТВО = 1 AND [ОТЧЕСТВО] IS NULL) OR ([ОТЧЕСТВО] = @Origina" +
                "l_ОТЧЕСТВО)) AND ((@IsNull_ФАМИЛИЯ = 1 AND [ФАМИЛИЯ] IS NULL) OR ([ФАМИЛИЯ] = @O" +
                "riginal_ФАМИЛИЯ)) AND ((@IsNull_ДАТА_ПРИЁМА = 1 AND [ДАТА_ПРИЁМА] IS NULL) OR ([" +
                "ДАТА_ПРИЁМА] = @Original_ДАТА_ПРИЁМА)) AND ((@IsNull_ПОЛ = 1 AND [ПОЛ] IS NULL) " +
                "OR ([ПОЛ] = @Original_ПОЛ)) AND ((@IsNull_ТЕЛЕФОН = 1 AND [ТЕЛЕФОН] IS NULL) OR " +
                "([ТЕЛЕФОН] = @Original_ТЕЛЕФОН)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR" +
                " ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_НОМЕР_ОТДЕЛА = 1 AND [НОМЕР_ОТДЕЛА] " +
                "IS NULL) OR ([НОМЕР_ОТДЕЛА] = @Original_НОМЕР_ОТДЕЛА)) AND ((@IsNull_АДРЕС_РЕГИС" +
                "ТРАЦИИ = 1 AND [АДРЕС_РЕГИСТРАЦИИ] IS NULL) OR ([АДРЕС_РЕГИСТРАЦИИ] = @Original_" +
                "АДРЕС_РЕГИСТРАЦИИ)) AND ((@IsNull_ФАКТИЧЕСКИЙ_АДРЕС = 1 AND [ФАКТИЧЕСКИЙ_АДРЕС] " +
                "IS NULL) OR ([ФАКТИЧЕСКИЙ_АДРЕС] = @Original_ФАКТИЧЕСКИЙ_АДРЕС)) AND ((@IsNull_С" +
                "ЕРИЯ_НОМЕР = 1 AND [СЕРИЯ_НОМЕР] IS NULL) OR ([СЕРИЯ_НОМЕР] = @Original_СЕРИЯ_НО" +
                "МЕР)));\r\nSELECT НОМЕР_СОТРУДНИКА, ИМЯ, ОТЧЕСТВО, ФАМИЛИЯ, ДАТА_ПРИЁМА, ПОЛ, ТЕЛЕ" +
                "ФОН, EMAIL, НОМЕР_ОТДЕЛА, АДРЕС_РЕГИСТРАЦИИ, ФАКТИЧЕСКИЙ_АДРЕС, СЕРИЯ_НОМЕР FROM" +
                " СОТРУДНИКИ WHERE (НОМЕР_СОТРУДНИКА = @НОМЕР_СОТРУДНИКА)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ИМЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТЧЕСТВО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАМИЛИЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ПРИЁМА", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИЁМА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ОТДЕЛА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОТДЕЛА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ИМЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ИМЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ИМЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТЧЕСТВО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТЧЕСТВО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТЧЕСТВО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАМИЛИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАМИЛИЯ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАМИЛИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ПРИЁМА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИЁМА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ПРИЁМА", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИЁМА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПОЛ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПОЛ", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕЛЕФОН", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕЛЕФОН", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_ОТДЕЛА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОТДЕЛА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ОТДЕЛА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ОТДЕЛА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_АДРЕС_РЕГИСТРАЦИИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС_РЕГИСТРАЦИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФАКТИЧЕСКИЙ_АДРЕС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СЕРИЯ_НОМЕР", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СЕРИЯ_НОМЕР", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT НОМЕР_СОТРУДНИКА, ИМЯ, ОТЧЕСТВО, ФАМИЛИЯ, ДАТА_ПРИЁМА, ПОЛ, ТЕЛЕФОН, EMAIL" +
                ", НОМЕР_ОТДЕЛА, АДРЕС_РЕГИСТРАЦИИ, ФАКТИЧЕСКИЙ_АДРЕС, СЕРИЯ_НОМЕР FROM dbo.СОТРУ" +
                "ДНИКИ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.СОТРУДНИКИDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.СОТРУДНИКИDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.СОТРУДНИКИDataTable dataTable = new DataSet1.СОТРУДНИКИDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.СОТРУДНИКИDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "СОТРУДНИКИ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_НОМЕР_СОТРУДНИКА, string Original_ИМЯ, string Original_ОТЧЕСТВО, string Original_ФАМИЛИЯ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ПРИЁМА, string Original_ПОЛ, string Original_ТЕЛЕФОН, string Original_EMAIL, global::System.Nullable<int> Original_НОМЕР_ОТДЕЛА, string Original_АДРЕС_РЕГИСТРАЦИИ, string Original_ФАКТИЧЕСКИЙ_АДРЕС, string Original_СЕРИЯ_НОМЕР) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_НОМЕР_СОТРУДНИКА));
            if ((Original_ИМЯ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ИМЯ));
            }
            if ((Original_ОТЧЕСТВО == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ОТЧЕСТВО));
            }
            if ((Original_ФАМИЛИЯ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ФАМИЛИЯ));
            }
            if ((Original_ДАТА_ПРИЁМА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ДАТА_ПРИЁМА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_ТЕЛЕФОН == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ТЕЛЕФОН));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_EMAIL));
            }
            if ((Original_НОМЕР_ОТДЕЛА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_НОМЕР_ОТДЕЛА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((Original_ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_ФАКТИЧЕСКИЙ_АДРЕС));
            }
            if ((Original_СЕРИЯ_НОМЕР == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_СЕРИЯ_НОМЕР));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int НОМЕР_СОТРУДНИКА, string ИМЯ, string ОТЧЕСТВО, string ФАМИЛИЯ, global::System.Nullable<global::System.DateTime> ДАТА_ПРИЁМА, string ПОЛ, string ТЕЛЕФОН, string EMAIL, global::System.Nullable<int> НОМЕР_ОТДЕЛА, string АДРЕС_РЕГИСТРАЦИИ, string ФАКТИЧЕСКИЙ_АДРЕС, string СЕРИЯ_НОМЕР) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(НОМЕР_СОТРУДНИКА));
            if ((ИМЯ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ИМЯ));
            }
            if ((ОТЧЕСТВО == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ОТЧЕСТВО));
            }
            if ((ФАМИЛИЯ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ФАМИЛИЯ));
            }
            if ((ДАТА_ПРИЁМА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ДАТА_ПРИЁМА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ПОЛ == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ПОЛ));
            }
            if ((ТЕЛЕФОН == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ТЕЛЕФОН));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(EMAIL));
            }
            if ((НОМЕР_ОТДЕЛА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(НОМЕР_ОТДЕЛА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ФАКТИЧЕСКИЙ_АДРЕС));
            }
            if ((СЕРИЯ_НОМЕР == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(СЕРИЯ_НОМЕР));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int НОМЕР_СОТРУДНИКА, 
                    string ИМЯ, 
                    string ОТЧЕСТВО, 
                    string ФАМИЛИЯ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ПРИЁМА, 
                    string ПОЛ, 
                    string ТЕЛЕФОН, 
                    string EMAIL, 
                    global::System.Nullable<int> НОМЕР_ОТДЕЛА, 
                    string АДРЕС_РЕГИСТРАЦИИ, 
                    string ФАКТИЧЕСКИЙ_АДРЕС, 
                    string СЕРИЯ_НОМЕР, 
                    int Original_НОМЕР_СОТРУДНИКА, 
                    string Original_ИМЯ, 
                    string Original_ОТЧЕСТВО, 
                    string Original_ФАМИЛИЯ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ПРИЁМА, 
                    string Original_ПОЛ, 
                    string Original_ТЕЛЕФОН, 
                    string Original_EMAIL, 
                    global::System.Nullable<int> Original_НОМЕР_ОТДЕЛА, 
                    string Original_АДРЕС_РЕГИСТРАЦИИ, 
                    string Original_ФАКТИЧЕСКИЙ_АДРЕС, 
                    string Original_СЕРИЯ_НОМЕР) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(НОМЕР_СОТРУДНИКА));
            if ((ИМЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ИМЯ));
            }
            if ((ОТЧЕСТВО == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ОТЧЕСТВО));
            }
            if ((ФАМИЛИЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ФАМИЛИЯ));
            }
            if ((ДАТА_ПРИЁМА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ДАТА_ПРИЁМА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ПОЛ));
            }
            if ((ТЕЛЕФОН == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ТЕЛЕФОН));
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(EMAIL));
            }
            if ((НОМЕР_ОТДЕЛА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(НОМЕР_ОТДЕЛА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ФАКТИЧЕСКИЙ_АДРЕС));
            }
            if ((СЕРИЯ_НОМЕР == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(СЕРИЯ_НОМЕР));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_НОМЕР_СОТРУДНИКА));
            if ((Original_ИМЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ИМЯ));
            }
            if ((Original_ОТЧЕСТВО == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ОТЧЕСТВО));
            }
            if ((Original_ФАМИЛИЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ФАМИЛИЯ));
            }
            if ((Original_ДАТА_ПРИЁМА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_ДАТА_ПРИЁМА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_ТЕЛЕФОН == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ТЕЛЕФОН));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_EMAIL));
            }
            if ((Original_НОМЕР_ОТДЕЛА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_НОМЕР_ОТДЕЛА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_АДРЕС_РЕГИСТРАЦИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_АДРЕС_РЕГИСТРАЦИИ));
            }
            if ((Original_ФАКТИЧЕСКИЙ_АДРЕС == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ФАКТИЧЕСКИЙ_АДРЕС));
            }
            if ((Original_СЕРИЯ_НОМЕР == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_СЕРИЯ_НОМЕР));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ИМЯ, 
                    string ОТЧЕСТВО, 
                    string ФАМИЛИЯ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ПРИЁМА, 
                    string ПОЛ, 
                    string ТЕЛЕФОН, 
                    string EMAIL, 
                    global::System.Nullable<int> НОМЕР_ОТДЕЛА, 
                    string АДРЕС_РЕГИСТРАЦИИ, 
                    string ФАКТИЧЕСКИЙ_АДРЕС, 
                    string СЕРИЯ_НОМЕР, 
                    int Original_НОМЕР_СОТРУДНИКА, 
                    string Original_ИМЯ, 
                    string Original_ОТЧЕСТВО, 
                    string Original_ФАМИЛИЯ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ПРИЁМА, 
                    string Original_ПОЛ, 
                    string Original_ТЕЛЕФОН, 
                    string Original_EMAIL, 
                    global::System.Nullable<int> Original_НОМЕР_ОТДЕЛА, 
                    string Original_АДРЕС_РЕГИСТРАЦИИ, 
                    string Original_ФАКТИЧЕСКИЙ_АДРЕС, 
                    string Original_СЕРИЯ_НОМЕР) {
            return this.Update(Original_НОМЕР_СОТРУДНИКА, ИМЯ, ОТЧЕСТВО, ФАМИЛИЯ, ДАТА_ПРИЁМА, ПОЛ, ТЕЛЕФОН, EMAIL, НОМЕР_ОТДЕЛА, АДРЕС_РЕГИСТРАЦИИ, ФАКТИЧЕСКИЙ_АДРЕС, СЕРИЯ_НОМЕР, Original_НОМЕР_СОТРУДНИКА, Original_ИМЯ, Original_ОТЧЕСТВО, Original_ФАМИЛИЯ, Original_ДАТА_ПРИЁМА, Original_ПОЛ, Original_ТЕЛЕФОН, Original_EMAIL, Original_НОМЕР_ОТДЕЛА, Original_АДРЕС_РЕГИСТРАЦИИ, Original_ФАКТИЧЕСКИЙ_АДРЕС, Original_СЕРИЯ_НОМЕР);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СПЕЦИАЛЬНОСТИTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public СПЕЦИАЛЬНОСТИTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СПЕЦИАЛЬНОСТИ";
            tableMapping.ColumnMappings.Add("КОД_СПЕЦИАЛЬНОСТИ", "КОД_СПЕЦИАЛЬНОСТИ");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", "МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[СПЕЦИАЛЬНОСТИ] WHERE (([КОД_СПЕЦИАЛЬНОСТИ] = @Original_КОД_СПЕЦИАЛЬНОСТИ) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД = 1 AND [МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД] IS NULL) OR ([МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД] = @Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[СПЕЦИАЛЬНОСТИ] ([КОД_СПЕЦИАЛЬНОСТИ], [НАИМЕНОВАНИЕ], [МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД]) VALUES (@КОД_СПЕЦИАЛЬНОСТИ, @НАИМЕНОВАНИЕ, @МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД);
SELECT КОД_СПЕЦИАЛЬНОСТИ, НАИМЕНОВАНИЕ, МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД FROM СПЕЦИАЛЬНОСТИ WHERE (КОД_СПЕЦИАЛЬНОСТИ = @КОД_СПЕЦИАЛЬНОСТИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[СПЕЦИАЛЬНОСТИ] SET [КОД_СПЕЦИАЛЬНОСТИ] = @КОД_СПЕЦИАЛЬНОСТИ, [НАИМЕНОВАНИЕ] = @НАИМЕНОВАНИЕ, [МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД] = @МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД WHERE (([КОД_СПЕЦИАЛЬНОСТИ] = @Original_КОД_СПЕЦИАЛЬНОСТИ) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД = 1 AND [МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД] IS NULL) OR ([МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД] = @Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД)));
SELECT КОД_СПЕЦИАЛЬНОСТИ, НАИМЕНОВАНИЕ, МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД FROM СПЕЦИАЛЬНОСТИ WHERE (КОД_СПЕЦИАЛЬНОСТИ = @КОД_СПЕЦИАЛЬНОСТИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СПЕЦИАЛЬНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_СПЕЦИАЛЬНОСТИ, НАИМЕНОВАНИЕ, МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД FROM dbo.СП" +
                "ЕЦИАЛЬНОСТИ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.СПЕЦИАЛЬНОСТИDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.СПЕЦИАЛЬНОСТИDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.СПЕЦИАЛЬНОСТИDataTable dataTable = new DataSet1.СПЕЦИАЛЬНОСТИDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.СПЕЦИАЛЬНОСТИDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "СПЕЦИАЛЬНОСТИ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_КОД_СПЕЦИАЛЬНОСТИ, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<decimal> Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД) {
            if ((Original_КОД_СПЕЦИАЛЬНОСТИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_СПЕЦИАЛЬНОСТИ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_КОД_СПЕЦИАЛЬНОСТИ));
            }
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string КОД_СПЕЦИАЛЬНОСТИ, string НАИМЕНОВАНИЕ, global::System.Nullable<decimal> МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД) {
            if ((КОД_СПЕЦИАЛЬНОСТИ == null)) {
                throw new global::System.ArgumentNullException("КОД_СПЕЦИАЛЬНОСТИ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(КОД_СПЕЦИАЛЬНОСТИ));
            }
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string КОД_СПЕЦИАЛЬНОСТИ, string НАИМЕНОВАНИЕ, global::System.Nullable<decimal> МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД, string Original_КОД_СПЕЦИАЛЬНОСТИ, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<decimal> Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД) {
            if ((КОД_СПЕЦИАЛЬНОСТИ == null)) {
                throw new global::System.ArgumentNullException("КОД_СПЕЦИАЛЬНОСТИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(КОД_СПЕЦИАЛЬНОСТИ));
            }
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_СПЕЦИАЛЬНОСТИ == null)) {
                throw new global::System.ArgumentNullException("Original_КОД_СПЕЦИАЛЬНОСТИ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_КОД_СПЕЦИАЛЬНОСТИ));
            }
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМЕНОВАНИЕ, global::System.Nullable<decimal> МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД, string Original_КОД_СПЕЦИАЛЬНОСТИ, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<decimal> Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД) {
            return this.Update(Original_КОД_СПЕЦИАЛЬНОСТИ, НАИМЕНОВАНИЕ, МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД, Original_КОД_СПЕЦИАЛЬНОСТИ, Original_НАИМЕНОВАНИЕ, Original_МИНИМАЛЬНЫЙ_ДОЛЖНОСТНОЙ_ОКЛАД);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СЧЕТАTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public СЧЕТАTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СЧЕТА";
            tableMapping.ColumnMappings.Add("НОМЕР_СЧЁТА", "НОМЕР_СЧЁТА");
            tableMapping.ColumnMappings.Add("НОМЕР_КЛИЕНТА", "НОМЕР_КЛИЕНТА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[СЧЕТА] WHERE (([НОМЕР_СЧЁТА] = @Original_НОМЕР_СЧЁТА) AND ((@I" +
                "sNull_НОМЕР_КЛИЕНТА = 1 AND [НОМЕР_КЛИЕНТА] IS NULL) OR ([НОМЕР_КЛИЕНТА] = @Orig" +
                "inal_НОМЕР_КЛИЕНТА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[СЧЕТА] ([НОМЕР_СЧЁТА], [НОМЕР_КЛИЕНТА]) VALUES (@НОМЕР_СЧЁТА, " +
                "@НОМЕР_КЛИЕНТА);\r\nSELECT НОМЕР_СЧЁТА, НОМЕР_КЛИЕНТА FROM СЧЕТА WHERE (НОМЕР_СЧЁТ" +
                "А = @НОМЕР_СЧЁТА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[СЧЕТА] SET [НОМЕР_СЧЁТА] = @НОМЕР_СЧЁТА, [НОМЕР_КЛИЕНТА] = @НОМЕР_КЛИЕНТА WHERE (([НОМЕР_СЧЁТА] = @Original_НОМЕР_СЧЁТА) AND ((@IsNull_НОМЕР_КЛИЕНТА = 1 AND [НОМЕР_КЛИЕНТА] IS NULL) OR ([НОМЕР_КЛИЕНТА] = @Original_НОМЕР_КЛИЕНТА)));
SELECT НОМЕР_СЧЁТА, НОМЕР_КЛИЕНТА FROM СЧЕТА WHERE (НОМЕР_СЧЁТА = @НОМЕР_СЧЁТА)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_СЧЁТА", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_СЧЁТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КЛИЕНТА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КЛИЕНТА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT НОМЕР_СЧЁТА, НОМЕР_КЛИЕНТА FROM dbo.СЧЕТА";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.СЧЕТАDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.СЧЕТАDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.СЧЕТАDataTable dataTable = new DataSet1.СЧЕТАDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.СЧЕТАDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "СЧЕТА");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_НОМЕР_СЧЁТА, global::System.Nullable<int> Original_НОМЕР_КЛИЕНТА) {
            if ((Original_НОМЕР_СЧЁТА == null)) {
                throw new global::System.ArgumentNullException("Original_НОМЕР_СЧЁТА");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_НОМЕР_СЧЁТА));
            }
            if ((Original_НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string НОМЕР_СЧЁТА, global::System.Nullable<int> НОМЕР_КЛИЕНТА) {
            if ((НОМЕР_СЧЁТА == null)) {
                throw new global::System.ArgumentNullException("НОМЕР_СЧЁТА");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(НОМЕР_СЧЁТА));
            }
            if ((НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НОМЕР_СЧЁТА, global::System.Nullable<int> НОМЕР_КЛИЕНТА, string Original_НОМЕР_СЧЁТА, global::System.Nullable<int> Original_НОМЕР_КЛИЕНТА) {
            if ((НОМЕР_СЧЁТА == null)) {
                throw new global::System.ArgumentNullException("НОМЕР_СЧЁТА");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(НОМЕР_СЧЁТА));
            }
            if ((НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Original_НОМЕР_СЧЁТА == null)) {
                throw new global::System.ArgumentNullException("Original_НОМЕР_СЧЁТА");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_НОМЕР_СЧЁТА));
            }
            if ((Original_НОМЕР_КЛИЕНТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_НОМЕР_КЛИЕНТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> НОМЕР_КЛИЕНТА, string Original_НОМЕР_СЧЁТА, global::System.Nullable<int> Original_НОМЕР_КЛИЕНТА) {
            return this.Update(Original_НОМЕР_СЧЁТА, НОМЕР_КЛИЕНТА, Original_НОМЕР_СЧЁТА, Original_НОМЕР_КЛИЕНТА);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private БАНКОВСКИЕ_УСЛУГИTableAdapter _бАНКОВСКИЕ_УСЛУГИTableAdapter;
        
        private ВИДЫ_ВКЛАДОВTableAdapter _вИДЫ_ВКЛАДОВTableAdapter;
        
        private ВИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter _вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter;
        
        private ВИДЫ_КРЕДИТОВTableAdapter _вИДЫ_КРЕДИТОВTableAdapter;
        
        private ВИДЫ_ОПЕРАЦИЙTableAdapter _вИДЫ_ОПЕРАЦИЙTableAdapter;
        
        private ДАННЫЕ_ВХОДАTableAdapter _дАННЫЕ_ВХОДАTableAdapter;
        
        private ДОГОВОРЫ_КЛИЕНТОВTableAdapter _дОГОВОРЫ_КЛИЕНТОВTableAdapter;
        
        private ИСТОРИЯ_ОПЕРАЦИЙTableAdapter _иСТОРИЯ_ОПЕРАЦИЙTableAdapter;
        
        private КЛИЕНТЫTableAdapter _кЛИЕНТЫTableAdapter;
        
        private СОТРУДНИКИTableAdapter _сОТРУДНИКИTableAdapter;
        
        private СПЕЦИАЛЬНОСТИTableAdapter _сПЕЦИАЛЬНОСТИTableAdapter;
        
        private СЧЕТАTableAdapter _сЧЕТАTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public БАНКОВСКИЕ_УСЛУГИTableAdapter БАНКОВСКИЕ_УСЛУГИTableAdapter {
            get {
                return this._бАНКОВСКИЕ_УСЛУГИTableAdapter;
            }
            set {
                this._бАНКОВСКИЕ_УСЛУГИTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ВИДЫ_ВКЛАДОВTableAdapter ВИДЫ_ВКЛАДОВTableAdapter {
            get {
                return this._вИДЫ_ВКЛАДОВTableAdapter;
            }
            set {
                this._вИДЫ_ВКЛАДОВTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ВИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter ВИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter {
            get {
                return this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter;
            }
            set {
                this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ВИДЫ_КРЕДИТОВTableAdapter ВИДЫ_КРЕДИТОВTableAdapter {
            get {
                return this._вИДЫ_КРЕДИТОВTableAdapter;
            }
            set {
                this._вИДЫ_КРЕДИТОВTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ВИДЫ_ОПЕРАЦИЙTableAdapter ВИДЫ_ОПЕРАЦИЙTableAdapter {
            get {
                return this._вИДЫ_ОПЕРАЦИЙTableAdapter;
            }
            set {
                this._вИДЫ_ОПЕРАЦИЙTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ДАННЫЕ_ВХОДАTableAdapter ДАННЫЕ_ВХОДАTableAdapter {
            get {
                return this._дАННЫЕ_ВХОДАTableAdapter;
            }
            set {
                this._дАННЫЕ_ВХОДАTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ДОГОВОРЫ_КЛИЕНТОВTableAdapter ДОГОВОРЫ_КЛИЕНТОВTableAdapter {
            get {
                return this._дОГОВОРЫ_КЛИЕНТОВTableAdapter;
            }
            set {
                this._дОГОВОРЫ_КЛИЕНТОВTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ИСТОРИЯ_ОПЕРАЦИЙTableAdapter ИСТОРИЯ_ОПЕРАЦИЙTableAdapter {
            get {
                return this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter;
            }
            set {
                this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КЛИЕНТЫTableAdapter КЛИЕНТЫTableAdapter {
            get {
                return this._кЛИЕНТЫTableAdapter;
            }
            set {
                this._кЛИЕНТЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СОТРУДНИКИTableAdapter СОТРУДНИКИTableAdapter {
            get {
                return this._сОТРУДНИКИTableAdapter;
            }
            set {
                this._сОТРУДНИКИTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СПЕЦИАЛЬНОСТИTableAdapter СПЕЦИАЛЬНОСТИTableAdapter {
            get {
                return this._сПЕЦИАЛЬНОСТИTableAdapter;
            }
            set {
                this._сПЕЦИАЛЬНОСТИTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СЧЕТАTableAdapter СЧЕТАTableAdapter {
            get {
                return this._сЧЕТАTableAdapter;
            }
            set {
                this._сЧЕТАTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null) 
                            && (this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Connection != null))) {
                    return this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Connection;
                }
                if (((this._вИДЫ_ВКЛАДОВTableAdapter != null) 
                            && (this._вИДЫ_ВКЛАДОВTableAdapter.Connection != null))) {
                    return this._вИДЫ_ВКЛАДОВTableAdapter.Connection;
                }
                if (((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null) 
                            && (this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Connection != null))) {
                    return this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Connection;
                }
                if (((this._вИДЫ_КРЕДИТОВTableAdapter != null) 
                            && (this._вИДЫ_КРЕДИТОВTableAdapter.Connection != null))) {
                    return this._вИДЫ_КРЕДИТОВTableAdapter.Connection;
                }
                if (((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null) 
                            && (this._вИДЫ_ОПЕРАЦИЙTableAdapter.Connection != null))) {
                    return this._вИДЫ_ОПЕРАЦИЙTableAdapter.Connection;
                }
                if (((this._дАННЫЕ_ВХОДАTableAdapter != null) 
                            && (this._дАННЫЕ_ВХОДАTableAdapter.Connection != null))) {
                    return this._дАННЫЕ_ВХОДАTableAdapter.Connection;
                }
                if (((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null) 
                            && (this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Connection != null))) {
                    return this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Connection;
                }
                if (((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null) 
                            && (this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Connection != null))) {
                    return this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Connection;
                }
                if (((this._кЛИЕНТЫTableAdapter != null) 
                            && (this._кЛИЕНТЫTableAdapter.Connection != null))) {
                    return this._кЛИЕНТЫTableAdapter.Connection;
                }
                if (((this._сОТРУДНИКИTableAdapter != null) 
                            && (this._сОТРУДНИКИTableAdapter.Connection != null))) {
                    return this._сОТРУДНИКИTableAdapter.Connection;
                }
                if (((this._сПЕЦИАЛЬНОСТИTableAdapter != null) 
                            && (this._сПЕЦИАЛЬНОСТИTableAdapter.Connection != null))) {
                    return this._сПЕЦИАЛЬНОСТИTableAdapter.Connection;
                }
                if (((this._сЧЕТАTableAdapter != null) 
                            && (this._сЧЕТАTableAdapter.Connection != null))) {
                    return this._сЧЕТАTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._вИДЫ_ВКЛАДОВTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._вИДЫ_КРЕДИТОВTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._дАННЫЕ_ВХОДАTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._кЛИЕНТЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сОТРУДНИКИTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сПЕЦИАЛЬНОСТИTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сЧЕТАTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._кЛИЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.КЛИЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._кЛИЕНТЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._вИДЫ_ВКЛАДОВTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ВИДЫ_ВКЛАДОВ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._вИДЫ_ВКЛАДОВTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ВИДЫ_ДЕБЕТОВЫХ_КАРТ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._вИДЫ_КРЕДИТОВTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ВИДЫ_КРЕДИТОВ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._вИДЫ_КРЕДИТОВTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ВИДЫ_ОПЕРАЦИЙ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._вИДЫ_ОПЕРАЦИЙTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сОТРУДНИКИTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СОТРУДНИКИ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сОТРУДНИКИTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сЧЕТАTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СЧЕТА.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сЧЕТАTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.БАНКОВСКИЕ_УСЛУГИ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._дАННЫЕ_ВХОДАTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ДАННЫЕ_ВХОДА.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._дАННЫЕ_ВХОДАTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ДОГОВОРЫ_КЛИЕНТОВ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ИСТОРИЯ_ОПЕРАЦИЙ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сПЕЦИАЛЬНОСТИTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СПЕЦИАЛЬНОСТИ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сПЕЦИАЛЬНОСТИTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._кЛИЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.КЛИЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._кЛИЕНТЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._вИДЫ_ВКЛАДОВTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ВИДЫ_ВКЛАДОВ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._вИДЫ_ВКЛАДОВTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ВИДЫ_ДЕБЕТОВЫХ_КАРТ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._вИДЫ_КРЕДИТОВTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ВИДЫ_КРЕДИТОВ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._вИДЫ_КРЕДИТОВTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ВИДЫ_ОПЕРАЦИЙ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._вИДЫ_ОПЕРАЦИЙTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сОТРУДНИКИTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СОТРУДНИКИ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сОТРУДНИКИTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сЧЕТАTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СЧЕТА.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сЧЕТАTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.БАНКОВСКИЕ_УСЛУГИ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._дАННЫЕ_ВХОДАTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ДАННЫЕ_ВХОДА.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._дАННЫЕ_ВХОДАTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ДОГОВОРЫ_КЛИЕНТОВ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ИСТОРИЯ_ОПЕРАЦИЙ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сПЕЦИАЛЬНОСТИTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СПЕЦИАЛЬНОСТИ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сПЕЦИАЛЬНОСТИTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._сПЕЦИАЛЬНОСТИTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СПЕЦИАЛЬНОСТИ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сПЕЦИАЛЬНОСТИTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ИСТОРИЯ_ОПЕРАЦИЙ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ДОГОВОРЫ_КЛИЕНТОВ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._дАННЫЕ_ВХОДАTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ДАННЫЕ_ВХОДА.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._дАННЫЕ_ВХОДАTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.БАНКОВСКИЕ_УСЛУГИ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сЧЕТАTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СЧЕТА.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сЧЕТАTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сОТРУДНИКИTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СОТРУДНИКИ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сОТРУДНИКИTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ВИДЫ_ОПЕРАЦИЙ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._вИДЫ_ОПЕРАЦИЙTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._вИДЫ_КРЕДИТОВTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ВИДЫ_КРЕДИТОВ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._вИДЫ_КРЕДИТОВTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ВИДЫ_ДЕБЕТОВЫХ_КАРТ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._вИДЫ_ВКЛАДОВTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ВИДЫ_ВКЛАДОВ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._вИДЫ_ВКЛАДОВTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._кЛИЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.КЛИЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._кЛИЕНТЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._вИДЫ_ВКЛАДОВTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._вИДЫ_ВКЛАДОВTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._вИДЫ_КРЕДИТОВTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._вИДЫ_КРЕДИТОВTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._вИДЫ_ОПЕРАЦИЙTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._дАННЫЕ_ВХОДАTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._дАННЫЕ_ВХОДАTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._кЛИЕНТЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._кЛИЕНТЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сОТРУДНИКИTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сОТРУДНИКИTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сПЕЦИАЛЬНОСТИTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сПЕЦИАЛЬНОСТИTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сЧЕТАTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сЧЕТАTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null)) {
                    revertConnections.Add(this._бАНКОВСКИЕ_УСЛУГИTableAdapter, this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Connection);
                    this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Adapter);
                    }
                }
                if ((this._вИДЫ_ВКЛАДОВTableAdapter != null)) {
                    revertConnections.Add(this._вИДЫ_ВКЛАДОВTableAdapter, this._вИДЫ_ВКЛАДОВTableAdapter.Connection);
                    this._вИДЫ_ВКЛАДОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._вИДЫ_ВКЛАДОВTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._вИДЫ_ВКЛАДОВTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._вИДЫ_ВКЛАДОВTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._вИДЫ_ВКЛАДОВTableAdapter.Adapter);
                    }
                }
                if ((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null)) {
                    revertConnections.Add(this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter, this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Connection);
                    this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Adapter);
                    }
                }
                if ((this._вИДЫ_КРЕДИТОВTableAdapter != null)) {
                    revertConnections.Add(this._вИДЫ_КРЕДИТОВTableAdapter, this._вИДЫ_КРЕДИТОВTableAdapter.Connection);
                    this._вИДЫ_КРЕДИТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._вИДЫ_КРЕДИТОВTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._вИДЫ_КРЕДИТОВTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._вИДЫ_КРЕДИТОВTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._вИДЫ_КРЕДИТОВTableAdapter.Adapter);
                    }
                }
                if ((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null)) {
                    revertConnections.Add(this._вИДЫ_ОПЕРАЦИЙTableAdapter, this._вИДЫ_ОПЕРАЦИЙTableAdapter.Connection);
                    this._вИДЫ_ОПЕРАЦИЙTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._вИДЫ_ОПЕРАЦИЙTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._вИДЫ_ОПЕРАЦИЙTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._вИДЫ_ОПЕРАЦИЙTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._вИДЫ_ОПЕРАЦИЙTableAdapter.Adapter);
                    }
                }
                if ((this._дАННЫЕ_ВХОДАTableAdapter != null)) {
                    revertConnections.Add(this._дАННЫЕ_ВХОДАTableAdapter, this._дАННЫЕ_ВХОДАTableAdapter.Connection);
                    this._дАННЫЕ_ВХОДАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._дАННЫЕ_ВХОДАTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._дАННЫЕ_ВХОДАTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._дАННЫЕ_ВХОДАTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._дАННЫЕ_ВХОДАTableAdapter.Adapter);
                    }
                }
                if ((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null)) {
                    revertConnections.Add(this._дОГОВОРЫ_КЛИЕНТОВTableAdapter, this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Connection);
                    this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Adapter);
                    }
                }
                if ((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null)) {
                    revertConnections.Add(this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter, this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Connection);
                    this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Adapter);
                    }
                }
                if ((this._кЛИЕНТЫTableAdapter != null)) {
                    revertConnections.Add(this._кЛИЕНТЫTableAdapter, this._кЛИЕНТЫTableAdapter.Connection);
                    this._кЛИЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._кЛИЕНТЫTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._кЛИЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._кЛИЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._кЛИЕНТЫTableAdapter.Adapter);
                    }
                }
                if ((this._сОТРУДНИКИTableAdapter != null)) {
                    revertConnections.Add(this._сОТРУДНИКИTableAdapter, this._сОТРУДНИКИTableAdapter.Connection);
                    this._сОТРУДНИКИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сОТРУДНИКИTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сОТРУДНИКИTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сОТРУДНИКИTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сОТРУДНИКИTableAdapter.Adapter);
                    }
                }
                if ((this._сПЕЦИАЛЬНОСТИTableAdapter != null)) {
                    revertConnections.Add(this._сПЕЦИАЛЬНОСТИTableAdapter, this._сПЕЦИАЛЬНОСТИTableAdapter.Connection);
                    this._сПЕЦИАЛЬНОСТИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сПЕЦИАЛЬНОСТИTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сПЕЦИАЛЬНОСТИTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сПЕЦИАЛЬНОСТИTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сПЕЦИАЛЬНОСТИTableAdapter.Adapter);
                    }
                }
                if ((this._сЧЕТАTableAdapter != null)) {
                    revertConnections.Add(this._сЧЕТАTableAdapter, this._сЧЕТАTableAdapter.Connection);
                    this._сЧЕТАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сЧЕТАTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сЧЕТАTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сЧЕТАTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сЧЕТАTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._бАНКОВСКИЕ_УСЛУГИTableAdapter != null)) {
                    this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._бАНКОВСКИЕ_УСЛУГИTableAdapter]));
                    this._бАНКОВСКИЕ_УСЛУГИTableAdapter.Transaction = null;
                }
                if ((this._вИДЫ_ВКЛАДОВTableAdapter != null)) {
                    this._вИДЫ_ВКЛАДОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._вИДЫ_ВКЛАДОВTableAdapter]));
                    this._вИДЫ_ВКЛАДОВTableAdapter.Transaction = null;
                }
                if ((this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter != null)) {
                    this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter]));
                    this._вИДЫ_ДЕБЕТОВЫХ_КАРТTableAdapter.Transaction = null;
                }
                if ((this._вИДЫ_КРЕДИТОВTableAdapter != null)) {
                    this._вИДЫ_КРЕДИТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._вИДЫ_КРЕДИТОВTableAdapter]));
                    this._вИДЫ_КРЕДИТОВTableAdapter.Transaction = null;
                }
                if ((this._вИДЫ_ОПЕРАЦИЙTableAdapter != null)) {
                    this._вИДЫ_ОПЕРАЦИЙTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._вИДЫ_ОПЕРАЦИЙTableAdapter]));
                    this._вИДЫ_ОПЕРАЦИЙTableAdapter.Transaction = null;
                }
                if ((this._дАННЫЕ_ВХОДАTableAdapter != null)) {
                    this._дАННЫЕ_ВХОДАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._дАННЫЕ_ВХОДАTableAdapter]));
                    this._дАННЫЕ_ВХОДАTableAdapter.Transaction = null;
                }
                if ((this._дОГОВОРЫ_КЛИЕНТОВTableAdapter != null)) {
                    this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._дОГОВОРЫ_КЛИЕНТОВTableAdapter]));
                    this._дОГОВОРЫ_КЛИЕНТОВTableAdapter.Transaction = null;
                }
                if ((this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter != null)) {
                    this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter]));
                    this._иСТОРИЯ_ОПЕРАЦИЙTableAdapter.Transaction = null;
                }
                if ((this._кЛИЕНТЫTableAdapter != null)) {
                    this._кЛИЕНТЫTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._кЛИЕНТЫTableAdapter]));
                    this._кЛИЕНТЫTableAdapter.Transaction = null;
                }
                if ((this._сОТРУДНИКИTableAdapter != null)) {
                    this._сОТРУДНИКИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сОТРУДНИКИTableAdapter]));
                    this._сОТРУДНИКИTableAdapter.Transaction = null;
                }
                if ((this._сПЕЦИАЛЬНОСТИTableAdapter != null)) {
                    this._сПЕЦИАЛЬНОСТИTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сПЕЦИАЛЬНОСТИTableAdapter]));
                    this._сПЕЦИАЛЬНОСТИTableAdapter.Transaction = null;
                }
                if ((this._сЧЕТАTableAdapter != null)) {
                    this._сЧЕТАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сЧЕТАTableAdapter]));
                    this._сЧЕТАTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591